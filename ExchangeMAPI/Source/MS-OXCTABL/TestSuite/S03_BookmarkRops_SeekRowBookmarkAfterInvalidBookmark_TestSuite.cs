//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microsoft.Protocols.TestSuites.MS_OXCTABL {
    using System;
    using System.Collections.Generic;
    using System.Text;
    using System.Reflection;
    using Microsoft.SpecExplorer.Runtime.Testing;
    using Microsoft.Protocols.TestTools;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Spec Explorer", "3.5.3130.0")]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite : PtfTestClassBase {
        
        public S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite() {
            this.SetSwitch("ProceedControlTimeout", "100");
            this.SetSwitch("QuiescenceTimeout", "2000000");
        }
        
        #region Expect Delegates
        public delegate void CheckMAPIHTTPTransportSupportedDelegate1(bool isSupported);
        
        public delegate void CheckRequirementEnabledDelegate1(bool enabled);
        #endregion
        
        #region Event Metadata
        static System.Reflection.MethodBase CheckMAPIHTTPTransportSupportedInfo = TestManagerHelpers.GetMethodInfo(typeof(Microsoft.Protocols.TestSuites.MS_OXCTABL.IMS_OXCTABLAdapter), "CheckMAPIHTTPTransportSupported", typeof(bool).MakeByRefType());
        
        static System.Reflection.MethodBase CheckRequirementEnabledInfo = TestManagerHelpers.GetMethodInfo(typeof(Microsoft.Protocols.TestSuites.MS_OXCTABL.IMS_OXCTABLAdapter), "CheckRequirementEnabled", typeof(int), typeof(bool).MakeByRefType());
        #endregion
        
        #region Adapter Instances
        private Microsoft.Protocols.TestSuites.MS_OXCTABL.IMS_OXCTABLAdapter IMS_OXCTABLAdapterInstance;
        #endregion
        
        #region Class Initialization and Cleanup
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void ClassInitialize(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext context) {
            PtfTestClassBase.Initialize(context);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void ClassCleanup() {
            PtfTestClassBase.Cleanup();
        }
        #endregion
        
        #region Test Initialization and Cleanup
        protected override void TestInitialize() {
            this.InitializeTestManager();
            this.IMS_OXCTABLAdapterInstance = ((Microsoft.Protocols.TestSuites.MS_OXCTABL.IMS_OXCTABLAdapter)(this.Manager.GetAdapter(typeof(Microsoft.Protocols.TestSuites.MS_OXCTABL.IMS_OXCTABLAdapter))));
        }
        
        protected override void TestCleanup() {
            base.TestCleanup();
            this.CleanupTestManager();
        }
        #endregion
        
        #region Test Starting in S0
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite() {
            this.Manager.BeginTest("MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite");
            this.Manager.Comment("reaching state \'S0\'");
            bool temp0;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCTABLAdapterInstance.CheckMAPIHTTPTransportSupported(out temp0);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp0);
            this.Manager.Comment("reaching state \'S1\'");
            int temp18 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuiteCheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuiteCheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp18 == 0)) {
                this.Manager.Comment("reaching state \'S6\'");
                goto label3;
            }
            if ((temp18 == 1)) {
                this.Manager.Comment("reaching state \'S7\'");
                this.Manager.Comment("executing step \'call InitializeTable(CONTENT_TABLE)\'");
                this.IMS_OXCTABLAdapterInstance.InitializeTable(((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableType)(0)));
                this.Manager.Comment("reaching state \'S12\'");
                this.Manager.Comment("checking step \'return InitializeTable\'");
                this.Manager.Comment("reaching state \'S15\'");
                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp1;
                this.Manager.Comment("executing step \'call RopSetColumns(1,False,False,False)\'");
                temp1 = this.IMS_OXCTABLAdapterInstance.RopSetColumns(1u, false, false, false);
                this.Manager.Checkpoint("MS-OXCTABL_R831");
                this.Manager.Checkpoint("MS-OXCTABL_R45");
                this.Manager.Comment("reaching state \'S18\'");
                this.Manager.Comment("checking step \'return RopSetColumns/success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp1, "return of RopSetColumns, state S18");
                this.Manager.Comment("reaching state \'S21\'");
                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp2;
                this.Manager.Comment("executing step \'call RopCreateBookmark()\'");
                temp2 = this.IMS_OXCTABLAdapterInstance.RopCreateBookmark();
                this.Manager.Checkpoint("MS-OXCTABL_R526");
                this.Manager.Comment("reaching state \'S24\'");
                this.Manager.Comment("checking step \'return RopCreateBookmark/success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp2, "return of RopCreateBookmark, state S24");
                this.Manager.Comment("reaching state \'S27\'");
                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp3;
                this.Manager.Comment("executing step \'call RopResetTable()\'");
                temp3 = this.IMS_OXCTABLAdapterInstance.RopResetTable();
                this.Manager.Checkpoint("MS-OXCTABL_R564");
                this.Manager.Comment("reaching state \'S30\'");
                this.Manager.Comment("checking step \'return RopResetTable/success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp3, "return of RopResetTable, state S30");
                this.Manager.Comment("reaching state \'S33\'");
                bool temp4;
                this.Manager.Comment("executing step \'call CheckRequirementEnabled(908,out _)\'");
                this.IMS_OXCTABLAdapterInstance.CheckRequirementEnabled(908, out temp4);
                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp4);
                this.Manager.Comment("reaching state \'S36\'");
                int temp17 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuiteCheckRequirementEnabledChecker)), new ExpectedReturn(S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuiteCheckRequirementEnabledChecker3)));
                if ((temp17 == 0)) {
                    this.Manager.Comment("reaching state \'S39\'");
                    bool temp5;
                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(909,out _)\'");
                    this.IMS_OXCTABLAdapterInstance.CheckRequirementEnabled(909, out temp5);
                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp5);
                    this.Manager.Comment("reaching state \'S45\'");
                    int temp10 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuiteCheckRequirementEnabledChecker1)), new ExpectedReturn(S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuiteCheckRequirementEnabledChecker2)));
                    if ((temp10 == 0)) {
                        this.Manager.Comment("reaching state \'S51\'");
                        Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp6;
                        this.Manager.Comment("executing step \'call RopSetColumns(1,False,False,False)\'");
                        temp6 = this.IMS_OXCTABLAdapterInstance.RopSetColumns(1u, false, false, false);
                        this.Manager.Checkpoint("MS-OXCTABL_R831");
                        this.Manager.Checkpoint("MS-OXCTABL_R45");
                        this.Manager.Comment("reaching state \'S61\'");
                        this.Manager.Comment("checking step \'return RopSetColumns/success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp6, "return of RopSetColumns, state S61");
                        this.Manager.Comment("reaching state \'S67\'");
                        Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp7;
                        this.Manager.Comment("executing step \'call RopSeekRowBookmark(True,True,True)\'");
                        temp7 = this.IMS_OXCTABLAdapterInstance.RopSeekRowBookmark(true, true, true);
                        this.Manager.Checkpoint("MS-OXCTABL_R508");
                        this.Manager.Checkpoint("MS-OXCTABL_R909");
                        this.Manager.Checkpoint("MS-OXCTABL_R908");
                        this.Manager.Comment("reaching state \'S73\'");
                        this.Manager.Comment("checking step \'return RopSeekRowBookmark/ecInvalidBookmark\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues.ecInvalidBookmark, temp7, "return of RopSeekRowBookmark, state S73");
                        this.Manager.Comment("reaching state \'S77\'");
                        goto label0;
                    }
                    if ((temp10 == 1)) {
                        this.Manager.Comment("reaching state \'S52\'");
                        Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp8;
                        this.Manager.Comment("executing step \'call RopSetColumns(1,False,False,False)\'");
                        temp8 = this.IMS_OXCTABLAdapterInstance.RopSetColumns(1u, false, false, false);
                        this.Manager.Checkpoint("MS-OXCTABL_R831");
                        this.Manager.Checkpoint("MS-OXCTABL_R45");
                        this.Manager.Comment("reaching state \'S62\'");
                        this.Manager.Comment("checking step \'return RopSetColumns/success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp8, "return of RopSetColumns, state S62");
                        this.Manager.Comment("reaching state \'S68\'");
                        Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp9;
                        this.Manager.Comment("executing step \'call RopSeekRowBookmark(True,True,True)\'");
                        temp9 = this.IMS_OXCTABLAdapterInstance.RopSeekRowBookmark(true, true, true);
                        this.Manager.Checkpoint("MS-OXCTABL_R508");
                        this.Manager.Checkpoint("MS-OXCTABL_R908");
                        this.Manager.Comment("reaching state \'S74\'");
                        this.Manager.Comment("checking step \'return RopSeekRowBookmark/ecInvalidBookmark\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues.ecInvalidBookmark, temp9, "return of RopSeekRowBookmark, state S74");
                        this.Manager.Comment("reaching state \'S78\'");
                        goto label0;
                    }
                    throw new InvalidOperationException("never reached");
                label0:
;
                    goto label2;
                }
                if ((temp17 == 1)) {
                    this.Manager.Comment("reaching state \'S40\'");
                    bool temp11;
                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(909,out _)\'");
                    this.IMS_OXCTABLAdapterInstance.CheckRequirementEnabled(909, out temp11);
                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp11);
                    this.Manager.Comment("reaching state \'S46\'");
                    int temp16 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuiteCheckRequirementEnabledChecker4)), new ExpectedReturn(S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuiteCheckRequirementEnabledChecker5)));
                    if ((temp16 == 0)) {
                        this.Manager.Comment("reaching state \'S53\'");
                        Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp12;
                        this.Manager.Comment("executing step \'call RopSetColumns(1,False,False,False)\'");
                        temp12 = this.IMS_OXCTABLAdapterInstance.RopSetColumns(1u, false, false, false);
                        this.Manager.Checkpoint("MS-OXCTABL_R831");
                        this.Manager.Checkpoint("MS-OXCTABL_R45");
                        this.Manager.Comment("reaching state \'S63\'");
                        this.Manager.Comment("checking step \'return RopSetColumns/success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp12, "return of RopSetColumns, state S63");
                        this.Manager.Comment("reaching state \'S69\'");
                        Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp13;
                        this.Manager.Comment("executing step \'call RopSeekRowBookmark(True,True,True)\'");
                        temp13 = this.IMS_OXCTABLAdapterInstance.RopSeekRowBookmark(true, true, true);
                        this.Manager.Checkpoint("MS-OXCTABL_R508");
                        this.Manager.Checkpoint("MS-OXCTABL_R909");
                        this.Manager.Checkpoint("MS-OXCTABL_R504");
                        this.Manager.Checkpoint("MS-OXCTABL_R522");
                        this.Manager.Comment("reaching state \'S75\'");
                        this.Manager.Comment("checking step \'return RopSeekRowBookmark/success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp13, "return of RopSeekRowBookmark, state S75");
                        this.Manager.Comment("reaching state \'S79\'");
                        goto label1;
                    }
                    if ((temp16 == 1)) {
                        this.Manager.Comment("reaching state \'S54\'");
                        Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp14;
                        this.Manager.Comment("executing step \'call RopSetColumns(1,False,False,False)\'");
                        temp14 = this.IMS_OXCTABLAdapterInstance.RopSetColumns(1u, false, false, false);
                        this.Manager.Checkpoint("MS-OXCTABL_R831");
                        this.Manager.Checkpoint("MS-OXCTABL_R45");
                        this.Manager.Comment("reaching state \'S64\'");
                        this.Manager.Comment("checking step \'return RopSetColumns/success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp14, "return of RopSetColumns, state S64");
                        this.Manager.Comment("reaching state \'S70\'");
                        Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp15;
                        this.Manager.Comment("executing step \'call RopSeekRowBookmark(True,True,True)\'");
                        temp15 = this.IMS_OXCTABLAdapterInstance.RopSeekRowBookmark(true, true, true);
                        this.Manager.Checkpoint("MS-OXCTABL_R508");
                        this.Manager.Checkpoint("MS-OXCTABL_R504");
                        this.Manager.Checkpoint("MS-OXCTABL_R522");
                        this.Manager.Comment("reaching state \'S76\'");
                        this.Manager.Comment("checking step \'return RopSeekRowBookmark/success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp15, "return of RopSeekRowBookmark, state S76");
                        this.Manager.Comment("reaching state \'S80\'");
                        goto label1;
                    }
                    throw new InvalidOperationException("never reached");
                label1:
;
                    goto label2;
                }
                throw new InvalidOperationException("never reached");
            label2:
;
                goto label3;
            }
            throw new InvalidOperationException("never reached");
        label3:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuiteCheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S1");
        }
        
        private void MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuiteCheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S1");
        }
        
        private void MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuiteCheckRequirementEnabledChecker(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S36");
        }
        
        private void MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuiteCheckRequirementEnabledChecker1(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S45");
        }
        
        private void MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuiteCheckRequirementEnabledChecker2(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S45");
        }
        
        private void MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuiteCheckRequirementEnabledChecker3(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S36");
        }
        
        private void MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuiteCheckRequirementEnabledChecker4(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S46");
        }
        
        private void MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuiteCheckRequirementEnabledChecker5(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S46");
        }
        #endregion
        
        #region Test Starting in S2
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite1() {
            this.Manager.BeginTest("MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite1");
            this.Manager.Comment("reaching state \'S2\'");
            bool temp19;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCTABLAdapterInstance.CheckMAPIHTTPTransportSupported(out temp19);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp19);
            this.Manager.Comment("reaching state \'S3\'");
            int temp27 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite1CheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite1CheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp27 == 0)) {
                this.Manager.Comment("reaching state \'S8\'");
                this.Manager.Comment("executing step \'call InitializeTable(CONTENT_TABLE)\'");
                this.IMS_OXCTABLAdapterInstance.InitializeTable(((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableType)(0)));
                this.Manager.Comment("reaching state \'S13\'");
                this.Manager.Comment("checking step \'return InitializeTable\'");
                this.Manager.Comment("reaching state \'S16\'");
                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp20;
                this.Manager.Comment("executing step \'call RopSetColumns(1,False,False,False)\'");
                temp20 = this.IMS_OXCTABLAdapterInstance.RopSetColumns(1u, false, false, false);
                this.Manager.Checkpoint("MS-OXCTABL_R831");
                this.Manager.Checkpoint("MS-OXCTABL_R45");
                this.Manager.Comment("reaching state \'S19\'");
                this.Manager.Comment("checking step \'return RopSetColumns/success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp20, "return of RopSetColumns, state S19");
                this.Manager.Comment("reaching state \'S22\'");
                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp21;
                this.Manager.Comment("executing step \'call RopCreateBookmark()\'");
                temp21 = this.IMS_OXCTABLAdapterInstance.RopCreateBookmark();
                this.Manager.Checkpoint("MS-OXCTABL_R526");
                this.Manager.Comment("reaching state \'S25\'");
                this.Manager.Comment("checking step \'return RopCreateBookmark/success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp21, "return of RopCreateBookmark, state S25");
                this.Manager.Comment("reaching state \'S28\'");
                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp22;
                this.Manager.Comment("executing step \'call RopRestrict(1,True,False,False)\'");
                temp22 = this.IMS_OXCTABLAdapterInstance.RopRestrict(1u, true, false, false);
                this.Manager.Checkpoint("MS-OXCTABL_R834");
                this.Manager.Comment("reaching state \'S31\'");
                this.Manager.Comment("checking step \'return RopRestrict/success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp22, "return of RopRestrict, state S31");
                this.Manager.Comment("reaching state \'S34\'");
                bool temp23;
                this.Manager.Comment("executing step \'call CheckRequirementEnabled(906,out _)\'");
                this.IMS_OXCTABLAdapterInstance.CheckRequirementEnabled(906, out temp23);
                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp23);
                this.Manager.Comment("reaching state \'S37\'");
                int temp26 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite1CheckRequirementEnabledChecker)), new ExpectedReturn(S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite1CheckRequirementEnabledChecker1)));
                if ((temp26 == 0)) {
                    this.Manager.Comment("reaching state \'S41\'");
                    Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp24;
                    this.Manager.Comment("executing step \'call RopSeekRowBookmark(True,True,True)\'");
                    temp24 = this.IMS_OXCTABLAdapterInstance.RopSeekRowBookmark(true, true, true);
                    this.Manager.Checkpoint("MS-OXCTABL_R508");
                    this.Manager.Checkpoint("MS-OXCTABL_R906");
                    this.Manager.Comment("reaching state \'S47\'");
                    this.Manager.Comment("checking step \'return RopSeekRowBookmark/ecInvalidBookmark\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues.ecInvalidBookmark, temp24, "return of RopSeekRowBookmark, state S47");
                    this.Manager.Comment("reaching state \'S55\'");
                    goto label4;
                }
                if ((temp26 == 1)) {
                    this.Manager.Comment("reaching state \'S42\'");
                    Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp25;
                    this.Manager.Comment("executing step \'call RopSeekRowBookmark(True,True,True)\'");
                    temp25 = this.IMS_OXCTABLAdapterInstance.RopSeekRowBookmark(true, true, true);
                    this.Manager.Checkpoint("MS-OXCTABL_R508");
                    this.Manager.Checkpoint("MS-OXCTABL_R504");
                    this.Manager.Checkpoint("MS-OXCTABL_R522");
                    this.Manager.Comment("reaching state \'S48\'");
                    this.Manager.Comment("checking step \'return RopSeekRowBookmark/success\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp25, "return of RopSeekRowBookmark, state S48");
                    this.Manager.Comment("reaching state \'S56\'");
                    goto label4;
                }
                throw new InvalidOperationException("never reached");
            label4:
;
                goto label5;
            }
            if ((temp27 == 1)) {
                this.Manager.Comment("reaching state \'S9\'");
                goto label5;
            }
            throw new InvalidOperationException("never reached");
        label5:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite1CheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S3");
        }
        
        private void MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite1CheckRequirementEnabledChecker(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S37");
        }
        
        private void MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite1CheckRequirementEnabledChecker1(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S37");
        }
        
        private void MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite1CheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S3");
        }
        #endregion
        
        #region Test Starting in S4
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite2() {
            this.Manager.BeginTest("MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite2");
            this.Manager.Comment("reaching state \'S4\'");
            bool temp28;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCTABLAdapterInstance.CheckMAPIHTTPTransportSupported(out temp28);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp28);
            this.Manager.Comment("reaching state \'S5\'");
            int temp40 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite2CheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite2CheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp40 == 0)) {
                this.Manager.Comment("reaching state \'S10\'");
                this.Manager.Comment("executing step \'call InitializeTable(CONTENT_TABLE)\'");
                this.IMS_OXCTABLAdapterInstance.InitializeTable(((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableType)(0)));
                this.Manager.Comment("reaching state \'S14\'");
                this.Manager.Comment("checking step \'return InitializeTable\'");
                this.Manager.Comment("reaching state \'S17\'");
                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp29;
                this.Manager.Comment("executing step \'call RopSetColumns(1,False,False,False)\'");
                temp29 = this.IMS_OXCTABLAdapterInstance.RopSetColumns(1u, false, false, false);
                this.Manager.Checkpoint("MS-OXCTABL_R831");
                this.Manager.Checkpoint("MS-OXCTABL_R45");
                this.Manager.Comment("reaching state \'S20\'");
                this.Manager.Comment("checking step \'return RopSetColumns/success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp29, "return of RopSetColumns, state S20");
                this.Manager.Comment("reaching state \'S23\'");
                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp30;
                this.Manager.Comment("executing step \'call RopCreateBookmark()\'");
                temp30 = this.IMS_OXCTABLAdapterInstance.RopCreateBookmark();
                this.Manager.Checkpoint("MS-OXCTABL_R526");
                this.Manager.Comment("reaching state \'S26\'");
                this.Manager.Comment("checking step \'return RopCreateBookmark/success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp30, "return of RopCreateBookmark, state S26");
                this.Manager.Comment("reaching state \'S29\'");
                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp31;
                this.Manager.Comment("executing step \'call RopSortTable(1,True,False,True,True,True,False,False)\'");
                temp31 = this.IMS_OXCTABLAdapterInstance.RopSortTable(1u, true, false, true, true, true, false, false);
                this.Manager.Checkpoint("MS-OXCTABL_R447");
                this.Manager.Comment("reaching state \'S32\'");
                this.Manager.Comment("checking step \'return RopSortTable/success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp31, "return of RopSortTable, state S32");
                this.Manager.Comment("reaching state \'S35\'");
                bool temp32;
                this.Manager.Comment("executing step \'call CheckRequirementEnabled(904,out _)\'");
                this.IMS_OXCTABLAdapterInstance.CheckRequirementEnabled(904, out temp32);
                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp32);
                this.Manager.Comment("reaching state \'S38\'");
                int temp39 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite2CheckRequirementEnabledChecker)), new ExpectedReturn(S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite2CheckRequirementEnabledChecker3)));
                if ((temp39 == 0)) {
                    this.Manager.Comment("reaching state \'S43\'");
                    bool temp33;
                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(905,out _)\'");
                    this.IMS_OXCTABLAdapterInstance.CheckRequirementEnabled(905, out temp33);
                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp33);
                    this.Manager.Comment("reaching state \'S49\'");
                    int temp35 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite2CheckRequirementEnabledChecker1)), new ExpectedReturn(S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite2CheckRequirementEnabledChecker2)));
                    if ((temp35 == 0)) {
                        this.Manager.Comment("reaching state \'S57\'");
                        Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp34;
                        this.Manager.Comment("executing step \'call RopSeekRowBookmark(True,True,True)\'");
                        temp34 = this.IMS_OXCTABLAdapterInstance.RopSeekRowBookmark(true, true, true);
                        this.Manager.Checkpoint("MS-OXCTABL_R508");
                        this.Manager.Checkpoint("MS-OXCTABL_R905");
                        this.Manager.Checkpoint("MS-OXCTABL_R504");
                        this.Manager.Checkpoint("MS-OXCTABL_R522");
                        this.Manager.Comment("reaching state \'S65\'");
                        this.Manager.Comment("checking step \'return RopSeekRowBookmark/success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp34, "return of RopSeekRowBookmark, state S65");
                        this.Manager.Comment("reaching state \'S71\'");
                        goto label6;
                    }
                    if ((temp35 == 1)) {
                        this.Manager.Comment("reaching state \'S58\'");
                        this.Manager.Assert(false, "reached non-accepting end state \'S58\'.");
                        goto label6;
                    }
                    throw new InvalidOperationException("never reached");
                label6:
;
                    goto label8;
                }
                if ((temp39 == 1)) {
                    this.Manager.Comment("reaching state \'S44\'");
                    bool temp36;
                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(905,out _)\'");
                    this.IMS_OXCTABLAdapterInstance.CheckRequirementEnabled(905, out temp36);
                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp36);
                    this.Manager.Comment("reaching state \'S50\'");
                    int temp38 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite2CheckRequirementEnabledChecker4)), new ExpectedReturn(S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite2CheckRequirementEnabledChecker5)));
                    if ((temp38 == 0)) {
                        this.Manager.Comment("reaching state \'S59\'");
                        Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp37;
                        this.Manager.Comment("executing step \'call RopSeekRowBookmark(True,True,True)\'");
                        temp37 = this.IMS_OXCTABLAdapterInstance.RopSeekRowBookmark(true, true, true);
                        this.Manager.Checkpoint("MS-OXCTABL_R508");
                        this.Manager.Checkpoint("MS-OXCTABL_R904");
                        this.Manager.Comment("reaching state \'S66\'");
                        this.Manager.Comment("checking step \'return RopSeekRowBookmark/ecInvalidBookmark\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues.ecInvalidBookmark, temp37, "return of RopSeekRowBookmark, state S66");
                        this.Manager.Comment("reaching state \'S72\'");
                        goto label7;
                    }
                    if ((temp38 == 1)) {
                        this.Manager.Comment("reaching state \'S60\'");
                        this.Manager.Assert(false, "reached non-accepting end state \'S60\'.");
                        goto label7;
                    }
                    throw new InvalidOperationException("never reached");
                label7:
;
                    goto label8;
                }
                throw new InvalidOperationException("never reached");
            label8:
;
                goto label9;
            }
            if ((temp40 == 1)) {
                this.Manager.Comment("reaching state \'S11\'");
                goto label9;
            }
            throw new InvalidOperationException("never reached");
        label9:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite2CheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S5");
        }
        
        private void MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite2CheckRequirementEnabledChecker(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S38");
        }
        
        private void MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite2CheckRequirementEnabledChecker1(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S49");
        }
        
        private void MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite2CheckRequirementEnabledChecker2(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S49");
        }
        
        private void MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite2CheckRequirementEnabledChecker3(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S38");
        }
        
        private void MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite2CheckRequirementEnabledChecker4(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S50");
        }
        
        private void MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite2CheckRequirementEnabledChecker5(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S50");
        }
        
        private void MSOXCTABL_S03_BookmarkRops_SeekRowBookmarkAfterInvalidBookmark_TestSuite2CheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S5");
        }
        #endregion
    }
}
