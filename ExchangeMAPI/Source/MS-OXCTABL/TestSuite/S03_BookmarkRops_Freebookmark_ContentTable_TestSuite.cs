//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18449
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microsoft.Protocols.TestSuites.MS_OXCTABL {
    using System;
    using System.Collections.Generic;
    using System.Text;
    using System.Reflection;
    using Microsoft.SpecExplorer.Runtime.Testing;
    using Microsoft.Protocols.TestTools;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Spec Explorer", "3.5.3130.0")]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class S03_BookmarkRops_Freebookmark_ContentTable_TestSuite : PtfTestClassBase {
        
        public S03_BookmarkRops_Freebookmark_ContentTable_TestSuite() {
            this.SetSwitch("ProceedControlTimeout", "100");
            this.SetSwitch("QuiescenceTimeout", "2000000");
        }
        
        #region Expect Delegates
        public delegate void CheckMAPIHTTPTransportSupportedDelegate1(bool isSupported);
        
        public delegate void RopQueryPositionResponseDelegate1(Microsoft.Protocols.TestSuites.MS_OXCTABL.CursorPosition cursorPosition, bool isRowCount);
        
        public delegate void CheckRequirementEnabledDelegate1(bool enabled);
        
        public delegate void RopResetTableResponseDelegate1(Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopType ropType, bool isPreviousDataReset);
        #endregion
        
        #region Event Metadata
        static System.Reflection.MethodBase CheckMAPIHTTPTransportSupportedInfo = TestManagerHelpers.GetMethodInfo(typeof(Microsoft.Protocols.TestSuites.MS_OXCTABL.IMS_OXCTABLAdapter), "CheckMAPIHTTPTransportSupported", typeof(bool).MakeByRefType());
        
        static System.Reflection.EventInfo RopQueryPositionResponseInfo = TestManagerHelpers.GetEventInfo(typeof(Microsoft.Protocols.TestSuites.MS_OXCTABL.IMS_OXCTABLAdapter), "RopQueryPositionResponse");
        
        static System.Reflection.MethodBase CheckRequirementEnabledInfo = TestManagerHelpers.GetMethodInfo(typeof(Microsoft.Protocols.TestSuites.MS_OXCTABL.IMS_OXCTABLAdapter), "CheckRequirementEnabled", typeof(int), typeof(bool).MakeByRefType());
        
        static System.Reflection.EventInfo RopResetTableResponseInfo = TestManagerHelpers.GetEventInfo(typeof(Microsoft.Protocols.TestSuites.MS_OXCTABL.IMS_OXCTABLAdapter), "RopResetTableResponse");
        #endregion
        
        #region Adapter Instances
        private Microsoft.Protocols.TestSuites.MS_OXCTABL.IMS_OXCTABLAdapter IMS_OXCTABLAdapterInstance;
        #endregion
        
        #region Class Initialization and Cleanup
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void ClassInitialize(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext context) {
            PtfTestClassBase.Initialize(context);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void ClassCleanup() {
            PtfTestClassBase.Cleanup();
        }
        #endregion
        
        #region Test Initialization and Cleanup
        protected override void TestInitialize() {
            this.InitializeTestManager();
            this.IMS_OXCTABLAdapterInstance = ((Microsoft.Protocols.TestSuites.MS_OXCTABL.IMS_OXCTABLAdapter)(this.Manager.GetAdapter(typeof(Microsoft.Protocols.TestSuites.MS_OXCTABL.IMS_OXCTABLAdapter))));
            this.Manager.Subscribe(RopQueryPositionResponseInfo, this.IMS_OXCTABLAdapterInstance);
            this.Manager.Subscribe(RopResetTableResponseInfo, this.IMS_OXCTABLAdapterInstance);
        }
        
        protected override void TestCleanup() {
            base.TestCleanup();
            this.CleanupTestManager();
        }
        #endregion
        
        #region Test Starting in S0
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCTABL_S03_BookmarkRops_Freebookmark_ContentTable_TestSuite() {
            this.Manager.BeginTest("MSOXCTABL_S03_BookmarkRops_Freebookmark_ContentTable_TestSuite");
            this.Manager.Comment("reaching state \'S0\'");
            bool temp0;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCTABLAdapterInstance.CheckMAPIHTTPTransportSupported(out temp0);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp0);
            this.Manager.Comment("reaching state \'S1\'");
            int temp10 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S03_BookmarkRops_Freebookmark_ContentTable_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCTABL_S03_BookmarkRops_Freebookmark_ContentTable_TestSuiteCheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S03_BookmarkRops_Freebookmark_ContentTable_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCTABL_S03_BookmarkRops_Freebookmark_ContentTable_TestSuiteCheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp10 == 0)) {
                this.Manager.Comment("reaching state \'S8\'");
                goto label2;
            }
            if ((temp10 == 1)) {
                this.Manager.Comment("reaching state \'S9\'");
                this.Manager.Comment("executing step \'call InitializeTable(CONTENT_TABLE)\'");
                this.IMS_OXCTABLAdapterInstance.InitializeTable(((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableType)(0)));
                this.Manager.Comment("reaching state \'S16\'");
                this.Manager.Comment("checking step \'return InitializeTable\'");
                this.Manager.Comment("reaching state \'S20\'");
                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp1;
                this.Manager.Comment("executing step \'call RopSetColumns(1,False,False,False)\'");
                temp1 = this.IMS_OXCTABLAdapterInstance.RopSetColumns(1u, false, false, false);
                this.Manager.Checkpoint("MS-OXCTABL_R831");
                this.Manager.Checkpoint("MS-OXCTABL_R45");
                this.Manager.Comment("reaching state \'S24\'");
                this.Manager.Comment("checking step \'return RopSetColumns/success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp1, "return of RopSetColumns, state S24");
                this.Manager.Comment("reaching state \'S28\'");
                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp2;
                this.Manager.Comment("executing step \'call RopQueryPosition()\'");
                temp2 = this.IMS_OXCTABLAdapterInstance.RopQueryPosition();
                this.Manager.Checkpoint("MS-OXCTABL_R846");
                this.Manager.Comment("reaching state \'S32\'");
                this.Manager.Comment("checking step \'return RopQueryPosition/success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp2, "return of RopQueryPosition, state S32");
                this.Manager.Comment("reaching state \'S36\'");
                int temp9 = this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S03_BookmarkRops_Freebookmark_ContentTable_TestSuite.RopQueryPositionResponseInfo, null, new RopQueryPositionResponseDelegate1(this.MSOXCTABL_S03_BookmarkRops_Freebookmark_ContentTable_TestSuiteRopQueryPositionResponseChecker)), new ExpectedEvent(S03_BookmarkRops_Freebookmark_ContentTable_TestSuite.RopQueryPositionResponseInfo, null, new RopQueryPositionResponseDelegate1(this.MSOXCTABL_S03_BookmarkRops_Freebookmark_ContentTable_TestSuiteRopQueryPositionResponseChecker1)), new ExpectedEvent(S03_BookmarkRops_Freebookmark_ContentTable_TestSuite.RopQueryPositionResponseInfo, null, new RopQueryPositionResponseDelegate1(this.MSOXCTABL_S03_BookmarkRops_Freebookmark_ContentTable_TestSuiteRopQueryPositionResponseChecker2)));
                if ((temp9 == 0)) {
                    S03_BookmarkRops_Freebookmark_ContentTable_TestSuiteS40();
                    goto label1;
                }
                if ((temp9 == 1)) {
                    S03_BookmarkRops_Freebookmark_ContentTable_TestSuiteS40();
                    goto label1;
                }
                if ((temp9 == 2)) {
                    S03_BookmarkRops_Freebookmark_ContentTable_TestSuiteS40();
                    goto label1;
                }
                this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S03_BookmarkRops_Freebookmark_ContentTable_TestSuite.RopQueryPositionResponseInfo, null, new RopQueryPositionResponseDelegate1(this.MSOXCTABL_S03_BookmarkRops_Freebookmark_ContentTable_TestSuiteRopQueryPositionResponseChecker)), new ExpectedEvent(S03_BookmarkRops_Freebookmark_ContentTable_TestSuite.RopQueryPositionResponseInfo, null, new RopQueryPositionResponseDelegate1(this.MSOXCTABL_S03_BookmarkRops_Freebookmark_ContentTable_TestSuiteRopQueryPositionResponseChecker1)), new ExpectedEvent(S03_BookmarkRops_Freebookmark_ContentTable_TestSuite.RopQueryPositionResponseInfo, null, new RopQueryPositionResponseDelegate1(this.MSOXCTABL_S03_BookmarkRops_Freebookmark_ContentTable_TestSuiteRopQueryPositionResponseChecker2)));
            label1:
;
                goto label2;
            }
            throw new InvalidOperationException("never reached");
        label2:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCTABL_S03_BookmarkRops_Freebookmark_ContentTable_TestSuiteCheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S1");
        }
        
        private void MSOXCTABL_S03_BookmarkRops_Freebookmark_ContentTable_TestSuiteCheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S1");
        }
        
        private void MSOXCTABL_S03_BookmarkRops_Freebookmark_ContentTable_TestSuiteRopQueryPositionResponseChecker(Microsoft.Protocols.TestSuites.MS_OXCTABL.CursorPosition cursorPosition, bool isRowCount) {
            this.Manager.Comment("checking step \'event RopQueryPositionResponse(CURRENT,True)\'");
            try {
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.CursorPosition>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCTABL.CursorPosition.CURRENT, cursorPosition, "cursorPosition of RopQueryPositionResponse, state S36");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isRowCount, "isRowCount of RopQueryPositionResponse, state S36");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R491");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R491");
        }
        
        private void S03_BookmarkRops_Freebookmark_ContentTable_TestSuiteS40() {
            this.Manager.Comment("reaching state \'S40\'");
            Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp3;
            this.Manager.Comment("executing step \'call RopCreateBookmark()\'");
            temp3 = this.IMS_OXCTABLAdapterInstance.RopCreateBookmark();
            this.Manager.Checkpoint("MS-OXCTABL_R526");
            this.Manager.Comment("reaching state \'S44\'");
            this.Manager.Comment("checking step \'return RopCreateBookmark/success\'");
            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp3, "return of RopCreateBookmark, state S44");
            this.Manager.Comment("reaching state \'S48\'");
            Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp4;
            this.Manager.Comment("executing step \'call RopSortTable(1,True,False,True,True,True,False,False)\'");
            temp4 = this.IMS_OXCTABLAdapterInstance.RopSortTable(1u, true, false, true, true, true, false, false);
            this.Manager.Checkpoint("MS-OXCTABL_R447");
            this.Manager.Comment("reaching state \'S52\'");
            this.Manager.Comment("checking step \'return RopSortTable/success\'");
            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp4, "return of RopSortTable, state S52");
            this.Manager.Comment("reaching state \'S56\'");
            bool temp5;
            this.Manager.Comment("executing step \'call CheckRequirementEnabled(549,out _)\'");
            this.IMS_OXCTABLAdapterInstance.CheckRequirementEnabled(549, out temp5);
            this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp5);
            this.Manager.Comment("reaching state \'S61\'");
            int temp8 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S03_BookmarkRops_Freebookmark_ContentTable_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S03_BookmarkRops_Freebookmark_ContentTable_TestSuiteCheckRequirementEnabledChecker)), new ExpectedReturn(S03_BookmarkRops_Freebookmark_ContentTable_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S03_BookmarkRops_Freebookmark_ContentTable_TestSuiteCheckRequirementEnabledChecker1)));
            if ((temp8 == 0)) {
                this.Manager.Comment("reaching state \'S66\'");
                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp6;
                this.Manager.Comment("executing step \'call RopFreeBookmark()\'");
                temp6 = this.IMS_OXCTABLAdapterInstance.RopFreeBookmark();
                this.Manager.Comment("reaching state \'S73\'");
                this.Manager.Comment("checking step \'return RopFreeBookmark/unexpected\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues.unexpected, temp6, "return of RopFreeBookmark, state S73");
                this.Manager.Comment("reaching state \'S79\'");
                goto label0;
            }
            if ((temp8 == 1)) {
                this.Manager.Comment("reaching state \'S67\'");
                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp7;
                this.Manager.Comment("executing step \'call RopFreeBookmark()\'");
                temp7 = this.IMS_OXCTABLAdapterInstance.RopFreeBookmark();
                this.Manager.Checkpoint("MS-OXCTABL_R549");
                this.Manager.Checkpoint("MS-OXCTABL_R864");
                this.Manager.Checkpoint("MS-OXCTABL_R545");
                this.Manager.Comment("reaching state \'S74\'");
                this.Manager.Comment("checking step \'return RopFreeBookmark/ecInvalidBookmark\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues.ecInvalidBookmark, temp7, "return of RopFreeBookmark, state S74");
                this.Manager.Comment("reaching state \'S80\'");
                goto label0;
            }
            throw new InvalidOperationException("never reached");
        label0:
;
        }
        
        private void MSOXCTABL_S03_BookmarkRops_Freebookmark_ContentTable_TestSuiteCheckRequirementEnabledChecker(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S61");
        }
        
        private void MSOXCTABL_S03_BookmarkRops_Freebookmark_ContentTable_TestSuiteCheckRequirementEnabledChecker1(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S61");
        }
        
        private void MSOXCTABL_S03_BookmarkRops_Freebookmark_ContentTable_TestSuiteRopQueryPositionResponseChecker1(Microsoft.Protocols.TestSuites.MS_OXCTABL.CursorPosition cursorPosition, bool isRowCount) {
            this.Manager.Comment("checking step \'event RopQueryPositionResponse(BEGIN,True)\'");
            try {
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.CursorPosition>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.CursorPosition)(0)), cursorPosition, "cursorPosition of RopQueryPositionResponse, state S36");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isRowCount, "isRowCount of RopQueryPositionResponse, state S36");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R491");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R491");
        }
        
        private void MSOXCTABL_S03_BookmarkRops_Freebookmark_ContentTable_TestSuiteRopQueryPositionResponseChecker2(Microsoft.Protocols.TestSuites.MS_OXCTABL.CursorPosition cursorPosition, bool isRowCount) {
            this.Manager.Comment("checking step \'event RopQueryPositionResponse(END,True)\'");
            try {
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.CursorPosition>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.CursorPosition)(1)), cursorPosition, "cursorPosition of RopQueryPositionResponse, state S36");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isRowCount, "isRowCount of RopQueryPositionResponse, state S36");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R491");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R491");
        }
        #endregion
        
        #region Test Starting in S2
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCTABL_S03_BookmarkRops_Freebookmark_ContentTable_TestSuite1() {
            this.Manager.BeginTest("MSOXCTABL_S03_BookmarkRops_Freebookmark_ContentTable_TestSuite1");
            this.Manager.Comment("reaching state \'S2\'");
            bool temp11;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCTABLAdapterInstance.CheckMAPIHTTPTransportSupported(out temp11);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp11);
            this.Manager.Comment("reaching state \'S3\'");
            int temp21 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S03_BookmarkRops_Freebookmark_ContentTable_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCTABL_S03_BookmarkRops_Freebookmark_ContentTable_TestSuite1CheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S03_BookmarkRops_Freebookmark_ContentTable_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCTABL_S03_BookmarkRops_Freebookmark_ContentTable_TestSuite1CheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp21 == 0)) {
                this.Manager.Comment("reaching state \'S10\'");
                goto label5;
            }
            if ((temp21 == 1)) {
                this.Manager.Comment("reaching state \'S11\'");
                this.Manager.Comment("executing step \'call InitializeTable(CONTENT_TABLE)\'");
                this.IMS_OXCTABLAdapterInstance.InitializeTable(((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableType)(0)));
                this.Manager.Comment("reaching state \'S17\'");
                this.Manager.Comment("checking step \'return InitializeTable\'");
                this.Manager.Comment("reaching state \'S21\'");
                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp12;
                this.Manager.Comment("executing step \'call RopSetColumns(1,False,False,False)\'");
                temp12 = this.IMS_OXCTABLAdapterInstance.RopSetColumns(1u, false, false, false);
                this.Manager.Checkpoint("MS-OXCTABL_R831");
                this.Manager.Checkpoint("MS-OXCTABL_R45");
                this.Manager.Comment("reaching state \'S25\'");
                this.Manager.Comment("checking step \'return RopSetColumns/success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp12, "return of RopSetColumns, state S25");
                this.Manager.Comment("reaching state \'S29\'");
                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp13;
                this.Manager.Comment("executing step \'call RopQueryPosition()\'");
                temp13 = this.IMS_OXCTABLAdapterInstance.RopQueryPosition();
                this.Manager.Checkpoint("MS-OXCTABL_R846");
                this.Manager.Comment("reaching state \'S33\'");
                this.Manager.Comment("checking step \'return RopQueryPosition/success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp13, "return of RopQueryPosition, state S33");
                this.Manager.Comment("reaching state \'S37\'");
                int temp20 = this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S03_BookmarkRops_Freebookmark_ContentTable_TestSuite.RopQueryPositionResponseInfo, null, new RopQueryPositionResponseDelegate1(this.MSOXCTABL_S03_BookmarkRops_Freebookmark_ContentTable_TestSuite1RopQueryPositionResponseChecker)), new ExpectedEvent(S03_BookmarkRops_Freebookmark_ContentTable_TestSuite.RopQueryPositionResponseInfo, null, new RopQueryPositionResponseDelegate1(this.MSOXCTABL_S03_BookmarkRops_Freebookmark_ContentTable_TestSuite1RopQueryPositionResponseChecker1)), new ExpectedEvent(S03_BookmarkRops_Freebookmark_ContentTable_TestSuite.RopQueryPositionResponseInfo, null, new RopQueryPositionResponseDelegate1(this.MSOXCTABL_S03_BookmarkRops_Freebookmark_ContentTable_TestSuite1RopQueryPositionResponseChecker2)));
                if ((temp20 == 0)) {
                    S03_BookmarkRops_Freebookmark_ContentTable_TestSuiteS41();
                    goto label4;
                }
                if ((temp20 == 1)) {
                    S03_BookmarkRops_Freebookmark_ContentTable_TestSuiteS41();
                    goto label4;
                }
                if ((temp20 == 2)) {
                    S03_BookmarkRops_Freebookmark_ContentTable_TestSuiteS41();
                    goto label4;
                }
                this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S03_BookmarkRops_Freebookmark_ContentTable_TestSuite.RopQueryPositionResponseInfo, null, new RopQueryPositionResponseDelegate1(this.MSOXCTABL_S03_BookmarkRops_Freebookmark_ContentTable_TestSuite1RopQueryPositionResponseChecker)), new ExpectedEvent(S03_BookmarkRops_Freebookmark_ContentTable_TestSuite.RopQueryPositionResponseInfo, null, new RopQueryPositionResponseDelegate1(this.MSOXCTABL_S03_BookmarkRops_Freebookmark_ContentTable_TestSuite1RopQueryPositionResponseChecker1)), new ExpectedEvent(S03_BookmarkRops_Freebookmark_ContentTable_TestSuite.RopQueryPositionResponseInfo, null, new RopQueryPositionResponseDelegate1(this.MSOXCTABL_S03_BookmarkRops_Freebookmark_ContentTable_TestSuite1RopQueryPositionResponseChecker2)));
            label4:
;
                goto label5;
            }
            throw new InvalidOperationException("never reached");
        label5:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCTABL_S03_BookmarkRops_Freebookmark_ContentTable_TestSuite1CheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S3");
        }
        
        private void MSOXCTABL_S03_BookmarkRops_Freebookmark_ContentTable_TestSuite1CheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S3");
        }
        
        private void MSOXCTABL_S03_BookmarkRops_Freebookmark_ContentTable_TestSuite1RopQueryPositionResponseChecker(Microsoft.Protocols.TestSuites.MS_OXCTABL.CursorPosition cursorPosition, bool isRowCount) {
            this.Manager.Comment("checking step \'event RopQueryPositionResponse(CURRENT,True)\'");
            try {
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.CursorPosition>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCTABL.CursorPosition.CURRENT, cursorPosition, "cursorPosition of RopQueryPositionResponse, state S37");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isRowCount, "isRowCount of RopQueryPositionResponse, state S37");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R491");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R491");
        }
        
        private void S03_BookmarkRops_Freebookmark_ContentTable_TestSuiteS41() {
            this.Manager.Comment("reaching state \'S41\'");
            Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp14;
            this.Manager.Comment("executing step \'call RopCreateBookmark()\'");
            temp14 = this.IMS_OXCTABLAdapterInstance.RopCreateBookmark();
            this.Manager.Checkpoint("MS-OXCTABL_R526");
            this.Manager.Comment("reaching state \'S45\'");
            this.Manager.Comment("checking step \'return RopCreateBookmark/success\'");
            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp14, "return of RopCreateBookmark, state S45");
            this.Manager.Comment("reaching state \'S49\'");
            Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp15;
            this.Manager.Comment("executing step \'call RopRestrict(1,True,False,False)\'");
            temp15 = this.IMS_OXCTABLAdapterInstance.RopRestrict(1u, true, false, false);
            this.Manager.Checkpoint("MS-OXCTABL_R834");
            this.Manager.Comment("reaching state \'S53\'");
            this.Manager.Comment("checking step \'return RopRestrict/success\'");
            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp15, "return of RopRestrict, state S53");
            this.Manager.Comment("reaching state \'S57\'");
            bool temp16;
            this.Manager.Comment("executing step \'call CheckRequirementEnabled(549,out _)\'");
            this.IMS_OXCTABLAdapterInstance.CheckRequirementEnabled(549, out temp16);
            this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp16);
            this.Manager.Comment("reaching state \'S62\'");
            int temp19 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S03_BookmarkRops_Freebookmark_ContentTable_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S03_BookmarkRops_Freebookmark_ContentTable_TestSuite1CheckRequirementEnabledChecker)), new ExpectedReturn(S03_BookmarkRops_Freebookmark_ContentTable_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S03_BookmarkRops_Freebookmark_ContentTable_TestSuite1CheckRequirementEnabledChecker1)));
            if ((temp19 == 0)) {
                this.Manager.Comment("reaching state \'S68\'");
                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp17;
                this.Manager.Comment("executing step \'call RopFreeBookmark()\'");
                temp17 = this.IMS_OXCTABLAdapterInstance.RopFreeBookmark();
                this.Manager.Comment("reaching state \'S75\'");
                this.Manager.Comment("checking step \'return RopFreeBookmark/unexpected\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues.unexpected, temp17, "return of RopFreeBookmark, state S75");
                this.Manager.Comment("reaching state \'S81\'");
                goto label3;
            }
            if ((temp19 == 1)) {
                this.Manager.Comment("reaching state \'S69\'");
                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp18;
                this.Manager.Comment("executing step \'call RopFreeBookmark()\'");
                temp18 = this.IMS_OXCTABLAdapterInstance.RopFreeBookmark();
                this.Manager.Checkpoint("MS-OXCTABL_R549");
                this.Manager.Checkpoint("MS-OXCTABL_R865");
                this.Manager.Checkpoint("MS-OXCTABL_R545");
                this.Manager.Comment("reaching state \'S76\'");
                this.Manager.Comment("checking step \'return RopFreeBookmark/ecInvalidBookmark\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues.ecInvalidBookmark, temp18, "return of RopFreeBookmark, state S76");
                this.Manager.Comment("reaching state \'S82\'");
                goto label3;
            }
            throw new InvalidOperationException("never reached");
        label3:
;
        }
        
        private void MSOXCTABL_S03_BookmarkRops_Freebookmark_ContentTable_TestSuite1CheckRequirementEnabledChecker(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S62");
        }
        
        private void MSOXCTABL_S03_BookmarkRops_Freebookmark_ContentTable_TestSuite1CheckRequirementEnabledChecker1(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S62");
        }
        
        private void MSOXCTABL_S03_BookmarkRops_Freebookmark_ContentTable_TestSuite1RopQueryPositionResponseChecker1(Microsoft.Protocols.TestSuites.MS_OXCTABL.CursorPosition cursorPosition, bool isRowCount) {
            this.Manager.Comment("checking step \'event RopQueryPositionResponse(BEGIN,True)\'");
            try {
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.CursorPosition>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.CursorPosition)(0)), cursorPosition, "cursorPosition of RopQueryPositionResponse, state S37");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isRowCount, "isRowCount of RopQueryPositionResponse, state S37");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R491");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R491");
        }
        
        private void MSOXCTABL_S03_BookmarkRops_Freebookmark_ContentTable_TestSuite1RopQueryPositionResponseChecker2(Microsoft.Protocols.TestSuites.MS_OXCTABL.CursorPosition cursorPosition, bool isRowCount) {
            this.Manager.Comment("checking step \'event RopQueryPositionResponse(END,True)\'");
            try {
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.CursorPosition>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.CursorPosition)(1)), cursorPosition, "cursorPosition of RopQueryPositionResponse, state S37");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isRowCount, "isRowCount of RopQueryPositionResponse, state S37");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R491");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R491");
        }
        #endregion
        
        #region Test Starting in S4
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCTABL_S03_BookmarkRops_Freebookmark_ContentTable_TestSuite2() {
            this.Manager.BeginTest("MSOXCTABL_S03_BookmarkRops_Freebookmark_ContentTable_TestSuite2");
            this.Manager.Comment("reaching state \'S4\'");
            bool temp22;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCTABLAdapterInstance.CheckMAPIHTTPTransportSupported(out temp22);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp22);
            this.Manager.Comment("reaching state \'S5\'");
            int temp32 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S03_BookmarkRops_Freebookmark_ContentTable_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCTABL_S03_BookmarkRops_Freebookmark_ContentTable_TestSuite2CheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S03_BookmarkRops_Freebookmark_ContentTable_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCTABL_S03_BookmarkRops_Freebookmark_ContentTable_TestSuite2CheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp32 == 0)) {
                this.Manager.Comment("reaching state \'S12\'");
                goto label8;
            }
            if ((temp32 == 1)) {
                this.Manager.Comment("reaching state \'S13\'");
                this.Manager.Comment("executing step \'call InitializeTable(CONTENT_TABLE)\'");
                this.IMS_OXCTABLAdapterInstance.InitializeTable(((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableType)(0)));
                this.Manager.Comment("reaching state \'S18\'");
                this.Manager.Comment("checking step \'return InitializeTable\'");
                this.Manager.Comment("reaching state \'S22\'");
                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp23;
                this.Manager.Comment("executing step \'call RopSetColumns(1,False,False,False)\'");
                temp23 = this.IMS_OXCTABLAdapterInstance.RopSetColumns(1u, false, false, false);
                this.Manager.Checkpoint("MS-OXCTABL_R831");
                this.Manager.Checkpoint("MS-OXCTABL_R45");
                this.Manager.Comment("reaching state \'S26\'");
                this.Manager.Comment("checking step \'return RopSetColumns/success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp23, "return of RopSetColumns, state S26");
                this.Manager.Comment("reaching state \'S30\'");
                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp24;
                this.Manager.Comment("executing step \'call RopQueryPosition()\'");
                temp24 = this.IMS_OXCTABLAdapterInstance.RopQueryPosition();
                this.Manager.Checkpoint("MS-OXCTABL_R846");
                this.Manager.Comment("reaching state \'S34\'");
                this.Manager.Comment("checking step \'return RopQueryPosition/success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp24, "return of RopQueryPosition, state S34");
                this.Manager.Comment("reaching state \'S38\'");
                int temp31 = this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S03_BookmarkRops_Freebookmark_ContentTable_TestSuite.RopQueryPositionResponseInfo, null, new RopQueryPositionResponseDelegate1(this.MSOXCTABL_S03_BookmarkRops_Freebookmark_ContentTable_TestSuite2RopQueryPositionResponseChecker)), new ExpectedEvent(S03_BookmarkRops_Freebookmark_ContentTable_TestSuite.RopQueryPositionResponseInfo, null, new RopQueryPositionResponseDelegate1(this.MSOXCTABL_S03_BookmarkRops_Freebookmark_ContentTable_TestSuite2RopQueryPositionResponseChecker1)), new ExpectedEvent(S03_BookmarkRops_Freebookmark_ContentTable_TestSuite.RopQueryPositionResponseInfo, null, new RopQueryPositionResponseDelegate1(this.MSOXCTABL_S03_BookmarkRops_Freebookmark_ContentTable_TestSuite2RopQueryPositionResponseChecker2)));
                if ((temp31 == 0)) {
                    S03_BookmarkRops_Freebookmark_ContentTable_TestSuiteS42();
                    goto label7;
                }
                if ((temp31 == 1)) {
                    S03_BookmarkRops_Freebookmark_ContentTable_TestSuiteS42();
                    goto label7;
                }
                if ((temp31 == 2)) {
                    S03_BookmarkRops_Freebookmark_ContentTable_TestSuiteS42();
                    goto label7;
                }
                this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S03_BookmarkRops_Freebookmark_ContentTable_TestSuite.RopQueryPositionResponseInfo, null, new RopQueryPositionResponseDelegate1(this.MSOXCTABL_S03_BookmarkRops_Freebookmark_ContentTable_TestSuite2RopQueryPositionResponseChecker)), new ExpectedEvent(S03_BookmarkRops_Freebookmark_ContentTable_TestSuite.RopQueryPositionResponseInfo, null, new RopQueryPositionResponseDelegate1(this.MSOXCTABL_S03_BookmarkRops_Freebookmark_ContentTable_TestSuite2RopQueryPositionResponseChecker1)), new ExpectedEvent(S03_BookmarkRops_Freebookmark_ContentTable_TestSuite.RopQueryPositionResponseInfo, null, new RopQueryPositionResponseDelegate1(this.MSOXCTABL_S03_BookmarkRops_Freebookmark_ContentTable_TestSuite2RopQueryPositionResponseChecker2)));
            label7:
;
                goto label8;
            }
            throw new InvalidOperationException("never reached");
        label8:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCTABL_S03_BookmarkRops_Freebookmark_ContentTable_TestSuite2CheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S5");
        }
        
        private void MSOXCTABL_S03_BookmarkRops_Freebookmark_ContentTable_TestSuite2CheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S5");
        }
        
        private void MSOXCTABL_S03_BookmarkRops_Freebookmark_ContentTable_TestSuite2RopQueryPositionResponseChecker(Microsoft.Protocols.TestSuites.MS_OXCTABL.CursorPosition cursorPosition, bool isRowCount) {
            this.Manager.Comment("checking step \'event RopQueryPositionResponse(CURRENT,True)\'");
            try {
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.CursorPosition>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCTABL.CursorPosition.CURRENT, cursorPosition, "cursorPosition of RopQueryPositionResponse, state S38");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isRowCount, "isRowCount of RopQueryPositionResponse, state S38");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R491");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R491");
        }
        
        private void S03_BookmarkRops_Freebookmark_ContentTable_TestSuiteS42() {
            this.Manager.Comment("reaching state \'S42\'");
            Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp25;
            this.Manager.Comment("executing step \'call RopCreateBookmark()\'");
            temp25 = this.IMS_OXCTABLAdapterInstance.RopCreateBookmark();
            this.Manager.Checkpoint("MS-OXCTABL_R526");
            this.Manager.Comment("reaching state \'S46\'");
            this.Manager.Comment("checking step \'return RopCreateBookmark/success\'");
            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp25, "return of RopCreateBookmark, state S46");
            this.Manager.Comment("reaching state \'S50\'");
            Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp26;
            this.Manager.Comment("executing step \'call RopResetTable()\'");
            temp26 = this.IMS_OXCTABLAdapterInstance.RopResetTable();
            this.Manager.Checkpoint("MS-OXCTABL_R564");
            this.Manager.Comment("reaching state \'S54\'");
            this.Manager.Comment("checking step \'return RopResetTable/success\'");
            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp26, "return of RopResetTable, state S54");
            this.Manager.Comment("reaching state \'S58\'");
            if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S03_BookmarkRops_Freebookmark_ContentTable_TestSuite.RopResetTableResponseInfo, null, new RopResetTableResponseDelegate1(this.MSOXCTABL_S03_BookmarkRops_Freebookmark_ContentTable_TestSuite2RopResetTableResponseChecker))) != -1)) {
                this.Manager.Comment("reaching state \'S63\'");
                bool temp27;
                this.Manager.Comment("executing step \'call CheckRequirementEnabled(549,out _)\'");
                this.IMS_OXCTABLAdapterInstance.CheckRequirementEnabled(549, out temp27);
                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp27);
                this.Manager.Comment("reaching state \'S70\'");
                int temp30 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S03_BookmarkRops_Freebookmark_ContentTable_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S03_BookmarkRops_Freebookmark_ContentTable_TestSuite2CheckRequirementEnabledChecker)), new ExpectedReturn(S03_BookmarkRops_Freebookmark_ContentTable_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S03_BookmarkRops_Freebookmark_ContentTable_TestSuite2CheckRequirementEnabledChecker1)));
                if ((temp30 == 0)) {
                    this.Manager.Comment("reaching state \'S77\'");
                    Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp28;
                    this.Manager.Comment("executing step \'call RopFreeBookmark()\'");
                    temp28 = this.IMS_OXCTABLAdapterInstance.RopFreeBookmark();
                    this.Manager.Comment("reaching state \'S83\'");
                    this.Manager.Comment("checking step \'return RopFreeBookmark/unexpected\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues.unexpected, temp28, "return of RopFreeBookmark, state S83");
                    this.Manager.Comment("reaching state \'S85\'");
                    goto label6;
                }
                if ((temp30 == 1)) {
                    this.Manager.Comment("reaching state \'S78\'");
                    Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp29;
                    this.Manager.Comment("executing step \'call RopFreeBookmark()\'");
                    temp29 = this.IMS_OXCTABLAdapterInstance.RopFreeBookmark();
                    this.Manager.Checkpoint("MS-OXCTABL_R549");
                    this.Manager.Checkpoint("MS-OXCTABL_R863");
                    this.Manager.Checkpoint("MS-OXCTABL_R562");
                    this.Manager.Comment("reaching state \'S84\'");
                    this.Manager.Comment("checking step \'return RopFreeBookmark/ecNullObject\'");
                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues.ecNullObject, temp29, "return of RopFreeBookmark, state S84");
                    this.Manager.Comment("reaching state \'S86\'");
                    goto label6;
                }
                throw new InvalidOperationException("never reached");
            label6:
;
            }
            else {
                this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S03_BookmarkRops_Freebookmark_ContentTable_TestSuite.RopResetTableResponseInfo, null, new RopResetTableResponseDelegate1(this.MSOXCTABL_S03_BookmarkRops_Freebookmark_ContentTable_TestSuite2RopResetTableResponseChecker)));
            }
        }
        
        private void MSOXCTABL_S03_BookmarkRops_Freebookmark_ContentTable_TestSuite2RopResetTableResponseChecker(Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopType ropType, bool isPreviousDataReset) {
            this.Manager.Comment("checking step \'event RopResetTableResponse(CREATEBOOKMARK,True)\'");
            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopType>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopType.CREATEBOOKMARK, ropType, "ropType of RopResetTableResponse, state S58");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isPreviousDataReset, "isPreviousDataReset of RopResetTableResponse, state S58");
        }
        
        private void MSOXCTABL_S03_BookmarkRops_Freebookmark_ContentTable_TestSuite2CheckRequirementEnabledChecker(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S70");
        }
        
        private void MSOXCTABL_S03_BookmarkRops_Freebookmark_ContentTable_TestSuite2CheckRequirementEnabledChecker1(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S70");
        }
        
        private void MSOXCTABL_S03_BookmarkRops_Freebookmark_ContentTable_TestSuite2RopQueryPositionResponseChecker1(Microsoft.Protocols.TestSuites.MS_OXCTABL.CursorPosition cursorPosition, bool isRowCount) {
            this.Manager.Comment("checking step \'event RopQueryPositionResponse(BEGIN,True)\'");
            try {
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.CursorPosition>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.CursorPosition)(0)), cursorPosition, "cursorPosition of RopQueryPositionResponse, state S38");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isRowCount, "isRowCount of RopQueryPositionResponse, state S38");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R491");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R491");
        }
        
        private void MSOXCTABL_S03_BookmarkRops_Freebookmark_ContentTable_TestSuite2RopQueryPositionResponseChecker2(Microsoft.Protocols.TestSuites.MS_OXCTABL.CursorPosition cursorPosition, bool isRowCount) {
            this.Manager.Comment("checking step \'event RopQueryPositionResponse(END,True)\'");
            try {
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.CursorPosition>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.CursorPosition)(1)), cursorPosition, "cursorPosition of RopQueryPositionResponse, state S38");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isRowCount, "isRowCount of RopQueryPositionResponse, state S38");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R491");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R491");
        }
        #endregion
        
        #region Test Starting in S6
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCTABL_S03_BookmarkRops_Freebookmark_ContentTable_TestSuite3() {
            this.Manager.BeginTest("MSOXCTABL_S03_BookmarkRops_Freebookmark_ContentTable_TestSuite3");
            this.Manager.Comment("reaching state \'S6\'");
            bool temp33;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCTABLAdapterInstance.CheckMAPIHTTPTransportSupported(out temp33);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp33);
            this.Manager.Comment("reaching state \'S7\'");
            int temp42 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S03_BookmarkRops_Freebookmark_ContentTable_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCTABL_S03_BookmarkRops_Freebookmark_ContentTable_TestSuite3CheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S03_BookmarkRops_Freebookmark_ContentTable_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCTABL_S03_BookmarkRops_Freebookmark_ContentTable_TestSuite3CheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp42 == 0)) {
                this.Manager.Comment("reaching state \'S14\'");
                goto label11;
            }
            if ((temp42 == 1)) {
                this.Manager.Comment("reaching state \'S15\'");
                this.Manager.Comment("executing step \'call InitializeTable(CONTENT_TABLE)\'");
                this.IMS_OXCTABLAdapterInstance.InitializeTable(((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableType)(0)));
                this.Manager.Comment("reaching state \'S19\'");
                this.Manager.Comment("checking step \'return InitializeTable\'");
                this.Manager.Comment("reaching state \'S23\'");
                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp34;
                this.Manager.Comment("executing step \'call RopSetColumns(1,False,False,False)\'");
                temp34 = this.IMS_OXCTABLAdapterInstance.RopSetColumns(1u, false, false, false);
                this.Manager.Checkpoint("MS-OXCTABL_R831");
                this.Manager.Checkpoint("MS-OXCTABL_R45");
                this.Manager.Comment("reaching state \'S27\'");
                this.Manager.Comment("checking step \'return RopSetColumns/success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp34, "return of RopSetColumns, state S27");
                this.Manager.Comment("reaching state \'S31\'");
                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp35;
                this.Manager.Comment("executing step \'call RopQueryPosition()\'");
                temp35 = this.IMS_OXCTABLAdapterInstance.RopQueryPosition();
                this.Manager.Checkpoint("MS-OXCTABL_R846");
                this.Manager.Comment("reaching state \'S35\'");
                this.Manager.Comment("checking step \'return RopQueryPosition/success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp35, "return of RopQueryPosition, state S35");
                this.Manager.Comment("reaching state \'S39\'");
                int temp41 = this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S03_BookmarkRops_Freebookmark_ContentTable_TestSuite.RopQueryPositionResponseInfo, null, new RopQueryPositionResponseDelegate1(this.MSOXCTABL_S03_BookmarkRops_Freebookmark_ContentTable_TestSuite3RopQueryPositionResponseChecker)), new ExpectedEvent(S03_BookmarkRops_Freebookmark_ContentTable_TestSuite.RopQueryPositionResponseInfo, null, new RopQueryPositionResponseDelegate1(this.MSOXCTABL_S03_BookmarkRops_Freebookmark_ContentTable_TestSuite3RopQueryPositionResponseChecker1)), new ExpectedEvent(S03_BookmarkRops_Freebookmark_ContentTable_TestSuite.RopQueryPositionResponseInfo, null, new RopQueryPositionResponseDelegate1(this.MSOXCTABL_S03_BookmarkRops_Freebookmark_ContentTable_TestSuite3RopQueryPositionResponseChecker2)));
                if ((temp41 == 0)) {
                    S03_BookmarkRops_Freebookmark_ContentTable_TestSuiteS43();
                    goto label10;
                }
                if ((temp41 == 1)) {
                    S03_BookmarkRops_Freebookmark_ContentTable_TestSuiteS43();
                    goto label10;
                }
                if ((temp41 == 2)) {
                    S03_BookmarkRops_Freebookmark_ContentTable_TestSuiteS43();
                    goto label10;
                }
                this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S03_BookmarkRops_Freebookmark_ContentTable_TestSuite.RopQueryPositionResponseInfo, null, new RopQueryPositionResponseDelegate1(this.MSOXCTABL_S03_BookmarkRops_Freebookmark_ContentTable_TestSuite3RopQueryPositionResponseChecker)), new ExpectedEvent(S03_BookmarkRops_Freebookmark_ContentTable_TestSuite.RopQueryPositionResponseInfo, null, new RopQueryPositionResponseDelegate1(this.MSOXCTABL_S03_BookmarkRops_Freebookmark_ContentTable_TestSuite3RopQueryPositionResponseChecker1)), new ExpectedEvent(S03_BookmarkRops_Freebookmark_ContentTable_TestSuite.RopQueryPositionResponseInfo, null, new RopQueryPositionResponseDelegate1(this.MSOXCTABL_S03_BookmarkRops_Freebookmark_ContentTable_TestSuite3RopQueryPositionResponseChecker2)));
            label10:
;
                goto label11;
            }
            throw new InvalidOperationException("never reached");
        label11:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCTABL_S03_BookmarkRops_Freebookmark_ContentTable_TestSuite3CheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S7");
        }
        
        private void MSOXCTABL_S03_BookmarkRops_Freebookmark_ContentTable_TestSuite3CheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S7");
        }
        
        private void MSOXCTABL_S03_BookmarkRops_Freebookmark_ContentTable_TestSuite3RopQueryPositionResponseChecker(Microsoft.Protocols.TestSuites.MS_OXCTABL.CursorPosition cursorPosition, bool isRowCount) {
            this.Manager.Comment("checking step \'event RopQueryPositionResponse(CURRENT,True)\'");
            try {
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.CursorPosition>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCTABL.CursorPosition.CURRENT, cursorPosition, "cursorPosition of RopQueryPositionResponse, state S39");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isRowCount, "isRowCount of RopQueryPositionResponse, state S39");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R491");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R491");
        }
        
        private void S03_BookmarkRops_Freebookmark_ContentTable_TestSuiteS43() {
            this.Manager.Comment("reaching state \'S43\'");
            Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp36;
            this.Manager.Comment("executing step \'call RopCreateBookmark()\'");
            temp36 = this.IMS_OXCTABLAdapterInstance.RopCreateBookmark();
            this.Manager.Checkpoint("MS-OXCTABL_R526");
            this.Manager.Comment("reaching state \'S47\'");
            this.Manager.Comment("checking step \'return RopCreateBookmark/success\'");
            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp36, "return of RopCreateBookmark, state S47");
            this.Manager.Comment("reaching state \'S51\'");
            bool temp37;
            this.Manager.Comment("executing step \'call CheckRequirementEnabled(549,out _)\'");
            this.IMS_OXCTABLAdapterInstance.CheckRequirementEnabled(549, out temp37);
            this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp37);
            this.Manager.Comment("reaching state \'S55\'");
            int temp40 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S03_BookmarkRops_Freebookmark_ContentTable_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S03_BookmarkRops_Freebookmark_ContentTable_TestSuite3CheckRequirementEnabledChecker)), new ExpectedReturn(S03_BookmarkRops_Freebookmark_ContentTable_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S03_BookmarkRops_Freebookmark_ContentTable_TestSuite3CheckRequirementEnabledChecker1)));
            if ((temp40 == 0)) {
                this.Manager.Comment("reaching state \'S59\'");
                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp38;
                this.Manager.Comment("executing step \'call RopFreeBookmark()\'");
                temp38 = this.IMS_OXCTABLAdapterInstance.RopFreeBookmark();
                this.Manager.Comment("reaching state \'S64\'");
                this.Manager.Comment("checking step \'return RopFreeBookmark/unexpected\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues.unexpected, temp38, "return of RopFreeBookmark, state S64");
                this.Manager.Comment("reaching state \'S71\'");
                goto label9;
            }
            if ((temp40 == 1)) {
                this.Manager.Comment("reaching state \'S60\'");
                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp39;
                this.Manager.Comment("executing step \'call RopFreeBookmark()\'");
                temp39 = this.IMS_OXCTABLAdapterInstance.RopFreeBookmark();
                this.Manager.Checkpoint("MS-OXCTABL_R549");
                this.Manager.Comment("reaching state \'S65\'");
                this.Manager.Comment("checking step \'return RopFreeBookmark/success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp39, "return of RopFreeBookmark, state S65");
                this.Manager.Comment("reaching state \'S72\'");
                goto label9;
            }
            throw new InvalidOperationException("never reached");
        label9:
;
        }
        
        private void MSOXCTABL_S03_BookmarkRops_Freebookmark_ContentTable_TestSuite3CheckRequirementEnabledChecker(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S55");
        }
        
        private void MSOXCTABL_S03_BookmarkRops_Freebookmark_ContentTable_TestSuite3CheckRequirementEnabledChecker1(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S55");
        }
        
        private void MSOXCTABL_S03_BookmarkRops_Freebookmark_ContentTable_TestSuite3RopQueryPositionResponseChecker1(Microsoft.Protocols.TestSuites.MS_OXCTABL.CursorPosition cursorPosition, bool isRowCount) {
            this.Manager.Comment("checking step \'event RopQueryPositionResponse(BEGIN,True)\'");
            try {
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.CursorPosition>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.CursorPosition)(0)), cursorPosition, "cursorPosition of RopQueryPositionResponse, state S39");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isRowCount, "isRowCount of RopQueryPositionResponse, state S39");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R491");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R491");
        }
        
        private void MSOXCTABL_S03_BookmarkRops_Freebookmark_ContentTable_TestSuite3RopQueryPositionResponseChecker2(Microsoft.Protocols.TestSuites.MS_OXCTABL.CursorPosition cursorPosition, bool isRowCount) {
            this.Manager.Comment("checking step \'event RopQueryPositionResponse(END,True)\'");
            try {
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.CursorPosition>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.CursorPosition)(1)), cursorPosition, "cursorPosition of RopQueryPositionResponse, state S39");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isRowCount, "isRowCount of RopQueryPositionResponse, state S39");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R491");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R491");
        }
        #endregion
    }
}
