//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18449
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microsoft.Protocols.TestSuites.MS_OXCTABL {
    using System;
    using System.Collections.Generic;
    using System.Text;
    using System.Reflection;
    using Microsoft.SpecExplorer.Runtime.Testing;
    using Microsoft.Protocols.TestTools;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Spec Explorer", "3.5.3130.0")]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class S04_ExpandRowRops_GetorSetCollapseRow_TestSuite : PtfTestClassBase {
        
        public S04_ExpandRowRops_GetorSetCollapseRow_TestSuite() {
            this.SetSwitch("ProceedControlTimeout", "100");
            this.SetSwitch("QuiescenceTimeout", "2000000");
        }
        
        #region Expect Delegates
        public delegate void CheckMAPIHTTPTransportSupportedDelegate1(bool isSupported);
        
        public delegate void CheckRequirementEnabledDelegate1(bool enabled);
        
        public delegate void RopQueryRowsResponseDelegate1(Microsoft.Protocols.TestSuites.Common.QueryRowsFlags queryRowFlags, bool bForwardRead, bool bZeroRow, Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopType ropType, bool bIsCorrectRowCount, bool bCursorPositionChanged, bool bIsLatestRopData, bool bIsLastSuccessRopData, Microsoft.Protocols.TestSuites.MS_OXCTABL.BookmarkType queryRowOrigin, bool isRequestCountTooLarger);
        
        public delegate void RopGetCollapseStateResponseDelegate1(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly);
        
        public delegate void RopExpandRowResponseDelegate1(bool isLastSetColumnData);
        #endregion
        
        #region Event Metadata
        static System.Reflection.MethodBase CheckMAPIHTTPTransportSupportedInfo = TestManagerHelpers.GetMethodInfo(typeof(Microsoft.Protocols.TestSuites.MS_OXCTABL.IMS_OXCTABLAdapter), "CheckMAPIHTTPTransportSupported", typeof(bool).MakeByRefType());
        
        static System.Reflection.MethodBase CheckRequirementEnabledInfo = TestManagerHelpers.GetMethodInfo(typeof(Microsoft.Protocols.TestSuites.MS_OXCTABL.IMS_OXCTABLAdapter), "CheckRequirementEnabled", typeof(int), typeof(bool).MakeByRefType());
        
        static System.Reflection.EventInfo RopQueryRowsResponseInfo = TestManagerHelpers.GetEventInfo(typeof(Microsoft.Protocols.TestSuites.MS_OXCTABL.IMS_OXCTABLAdapter), "RopQueryRowsResponse");
        
        static System.Reflection.EventInfo RopGetCollapseStateResponseInfo = TestManagerHelpers.GetEventInfo(typeof(Microsoft.Protocols.TestSuites.MS_OXCTABL.IMS_OXCTABLAdapter), "RopGetCollapseStateResponse");
        
        static System.Reflection.EventInfo RopExpandRowResponseInfo = TestManagerHelpers.GetEventInfo(typeof(Microsoft.Protocols.TestSuites.MS_OXCTABL.IMS_OXCTABLAdapter), "RopExpandRowResponse");
        #endregion
        
        #region Adapter Instances
        private Microsoft.Protocols.TestSuites.MS_OXCTABL.IMS_OXCTABLAdapter IMS_OXCTABLAdapterInstance;
        #endregion
        
        #region Class Initialization and Cleanup
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void ClassInitialize(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext context) {
            PtfTestClassBase.Initialize(context);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void ClassCleanup() {
            PtfTestClassBase.Cleanup();
        }
        #endregion
        
        #region Test Initialization and Cleanup
        protected override void TestInitialize() {
            this.InitializeTestManager();
            this.IMS_OXCTABLAdapterInstance = ((Microsoft.Protocols.TestSuites.MS_OXCTABL.IMS_OXCTABLAdapter)(this.Manager.GetAdapter(typeof(Microsoft.Protocols.TestSuites.MS_OXCTABL.IMS_OXCTABLAdapter))));
            this.Manager.Subscribe(RopExpandRowResponseInfo, this.IMS_OXCTABLAdapterInstance);
            this.Manager.Subscribe(RopGetCollapseStateResponseInfo, this.IMS_OXCTABLAdapterInstance);
            this.Manager.Subscribe(RopQueryRowsResponseInfo, this.IMS_OXCTABLAdapterInstance);
        }
        
        protected override void TestCleanup() {
            base.TestCleanup();
            this.CleanupTestManager();
        }
        #endregion
        
        #region Test Starting in S0
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite() {
            this.Manager.BeginTest("MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite");
            this.Manager.Comment("reaching state \'S0\'");
            bool temp0;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCTABLAdapterInstance.CheckMAPIHTTPTransportSupported(out temp0);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp0);
            this.Manager.Comment("reaching state \'S1\'");
            int temp163 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteCheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteCheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp163 == 0)) {
                this.Manager.Comment("reaching state \'S6\'");
                goto label27;
            }
            if ((temp163 == 1)) {
                this.Manager.Comment("reaching state \'S7\'");
                this.Manager.Comment("executing step \'call InitializeTable(CONTENT_TABLE)\'");
                this.IMS_OXCTABLAdapterInstance.InitializeTable(((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableType)(0)));
                this.Manager.Comment("reaching state \'S12\'");
                this.Manager.Comment("checking step \'return InitializeTable\'");
                this.Manager.Comment("reaching state \'S15\'");
                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp1;
                this.Manager.Comment("executing step \'call RopSortTable(1,True,True,False,False,True,False,False)\'");
                temp1 = this.IMS_OXCTABLAdapterInstance.RopSortTable(1u, true, true, false, false, true, false, false);
                this.Manager.Checkpoint("MS-OXCTABL_R447");
                this.Manager.Comment("reaching state \'S18\'");
                this.Manager.Comment("checking step \'return RopSortTable/success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp1, "return of RopSortTable, state S18");
                S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteS21();
                goto label27;
            }
            throw new InvalidOperationException("never reached");
        label27:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteCheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S1");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteCheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S1");
        }
        
        private void S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteS21() {
            this.Manager.Comment("reaching state \'S21\'");
            Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp2;
            this.Manager.Comment("executing step \'call RopSetColumns(1,False,False,False)\'");
            temp2 = this.IMS_OXCTABLAdapterInstance.RopSetColumns(1u, false, false, false);
            this.Manager.Checkpoint("MS-OXCTABL_R831");
            this.Manager.Checkpoint("MS-OXCTABL_R45");
            this.Manager.Comment("reaching state \'S23\'");
            this.Manager.Comment("checking step \'return RopSetColumns/success\'");
            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp2, "return of RopSetColumns, state S23");
            this.Manager.Comment("reaching state \'S25\'");
            bool temp3;
            this.Manager.Comment("executing step \'call CheckRequirementEnabled(768,out _)\'");
            this.IMS_OXCTABLAdapterInstance.CheckRequirementEnabled(768, out temp3);
            this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp3);
            this.Manager.Comment("reaching state \'S27\'");
            int temp162 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteCheckRequirementEnabledChecker)), new ExpectedReturn(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteCheckRequirementEnabledChecker21)));
            if ((temp162 == 0)) {
                this.Manager.Comment("reaching state \'S29\'");
                bool temp4;
                this.Manager.Comment("executing step \'call CheckRequirementEnabled(866,out _)\'");
                this.IMS_OXCTABLAdapterInstance.CheckRequirementEnabled(866, out temp4);
                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp4);
                this.Manager.Comment("reaching state \'S33\'");
                int temp82 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteCheckRequirementEnabledChecker1)), new ExpectedReturn(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteCheckRequirementEnabledChecker12)));
                if ((temp82 == 0)) {
                    this.Manager.Comment("reaching state \'S37\'");
                    bool temp5;
                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(867,out _)\'");
                    this.IMS_OXCTABLAdapterInstance.CheckRequirementEnabled(867, out temp5);
                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp5);
                    this.Manager.Comment("reaching state \'S45\'");
                    int temp46 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteCheckRequirementEnabledChecker2)), new ExpectedReturn(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteCheckRequirementEnabledChecker9)));
                    if ((temp46 == 0)) {
                        this.Manager.Comment("reaching state \'S53\'");
                        Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp6;
                        this.Manager.Comment("executing step \'call RopQueryRows(Advance,True)\'");
                        temp6 = this.IMS_OXCTABLAdapterInstance.RopQueryRows(((Microsoft.Protocols.TestSuites.Common.QueryRowsFlags)(0)), true);
                        this.Manager.Checkpoint("MS-OXCTABL_R837");
                        this.Manager.Comment("reaching state \'S69\'");
                        this.Manager.Comment("checking step \'return RopQueryRows/success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp6, "return of RopQueryRows, state S69");
                        this.Manager.Comment("reaching state \'S85\'");
                        bool temp7;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(610,out _)\'");
                        this.IMS_OXCTABLAdapterInstance.CheckRequirementEnabled(610, out temp7);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp7);
                        this.Manager.Comment("reaching state \'S101\'");
                        int temp32 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteCheckRequirementEnabledChecker3)), new ExpectedReturn(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteCheckRequirementEnabledChecker6)));
                        if ((temp32 == 0)) {
                            this.Manager.Comment("reaching state \'S117\'");
                            if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopQueryRowsResponseInfo, null, new RopQueryRowsResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopQueryRowsResponseChecker))) != -1)) {
                                this.Manager.Comment("reaching state \'S149\'");
                                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp8;
                                this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                                temp8 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                                this.Manager.Checkpoint("MS-OXCTABL_R582");
                                this.Manager.Checkpoint("MS-OXCTABL_R579");
                                this.Manager.Comment("reaching state \'S181\'");
                                this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp8, "return of RopGetCollapseState, state S181");
                                this.Manager.Comment("reaching state \'S213\'");
                                if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker))) != -1)) {
                                    this.Manager.Comment("reaching state \'S245\'");
                                    bool temp9;
                                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(748,out _)\'");
                                    this.IMS_OXCTABLAdapterInstance.CheckRequirementEnabled(748, out temp9);
                                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp9);
                                    this.Manager.Comment("reaching state \'S277\'");
                                    int temp19 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteCheckRequirementEnabledChecker4)), new ExpectedReturn(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteCheckRequirementEnabledChecker5)));
                                    if ((temp19 == 0)) {
                                        this.Manager.Comment("reaching state \'S309\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp10;
                                        this.Manager.Comment("executing step \'call RopExpandRow(False,False,False)\'");
                                        temp10 = this.IMS_OXCTABLAdapterInstance.RopExpandRow(false, false, false);
                                        this.Manager.Checkpoint("MS-OXCTABL_R568");
                                        this.Manager.Checkpoint("MS-OXCTABL_R567");
                                        this.Manager.Comment("reaching state \'S357\'");
                                        this.Manager.Comment("checking step \'return RopExpandRow/success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp10, "return of RopExpandRow, state S357");
                                        this.Manager.Comment("reaching state \'S405\'");
                                        int temp14 = this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopExpandRowResponseInfo, null, new RopExpandRowResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopExpandRowResponseChecker)), new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopExpandRowResponseInfo, null, new RopExpandRowResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopExpandRowResponseChecker1)));
                                        if ((temp14 == 0)) {
                                            S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteS453();
                                            goto label0;
                                        }
                                        if ((temp14 == 1)) {
                                            S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteS453();
                                            goto label0;
                                        }
                                        this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopExpandRowResponseInfo, null, new RopExpandRowResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopExpandRowResponseChecker)), new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopExpandRowResponseInfo, null, new RopExpandRowResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopExpandRowResponseChecker1)));
                                    label0:
;
                                        goto label1;
                                    }
                                    if ((temp19 == 1)) {
                                        this.Manager.Comment("reaching state \'S310\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp15;
                                        this.Manager.Comment("executing step \'call RopExpandRow(False,False,False)\'");
                                        temp15 = this.IMS_OXCTABLAdapterInstance.RopExpandRow(false, false, false);
                                        this.Manager.Checkpoint("MS-OXCTABL_R568");
                                        this.Manager.Checkpoint("MS-OXCTABL_R567");
                                        this.Manager.Comment("reaching state \'S358\'");
                                        this.Manager.Comment("checking step \'return RopExpandRow/success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp15, "return of RopExpandRow, state S358");
                                        this.Manager.Comment("reaching state \'S406\'");
                                        if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopExpandRowResponseInfo, null, new RopExpandRowResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopExpandRowResponseChecker2))) != -1)) {
                                            this.Manager.Comment("reaching state \'S454\'");
                                            Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp16;
                                            this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                                            temp16 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                                            this.Manager.Checkpoint("MS-OXCTABL_R582");
                                            this.Manager.Checkpoint("MS-OXCTABL_R579");
                                            this.Manager.Comment("reaching state \'S502\'");
                                            this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp16, "return of RopGetCollapseState, state S502");
                                            this.Manager.Comment("reaching state \'S550\'");
                                            if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker3))) != -1)) {
                                                this.Manager.Comment("reaching state \'S598\'");
                                                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp17;
                                                this.Manager.Comment("executing step \'call RopSetCollapseState()\'");
                                                temp17 = this.IMS_OXCTABLAdapterInstance.RopSetCollapseState();
                                                this.Manager.Checkpoint("MS-OXCTABL_R588");
                                                this.Manager.Checkpoint("MS-OXCTABL_R585");
                                                this.Manager.Checkpoint("MS-OXCTABL_R289");
                                                this.Manager.Comment("reaching state \'S646\'");
                                                this.Manager.Comment("checking step \'return RopSetCollapseState/success\'");
                                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp17, "return of RopSetCollapseState, state S646");
                                                this.Manager.Comment("reaching state \'S694\'");
                                                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp18;
                                                this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                                                temp18 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                                                this.Manager.Checkpoint("MS-OXCTABL_R582");
                                                this.Manager.Checkpoint("MS-OXCTABL_R579");
                                                this.Manager.Comment("reaching state \'S742\'");
                                                this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp18, "return of RopGetCollapseState, state S742");
                                                this.Manager.Comment("reaching state \'S774\'");
                                                if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker4))) != -1)) {
                                                    this.Manager.Comment("reaching state \'S806\'");
                                                }
                                                else {
                                                    this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker4)));
                                                }
                                            }
                                            else {
                                                this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker3)));
                                            }
                                        }
                                        else {
                                            this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopExpandRowResponseInfo, null, new RopExpandRowResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopExpandRowResponseChecker2)));
                                        }
                                        goto label1;
                                    }
                                    throw new InvalidOperationException("never reached");
                                label1:
;
                                }
                                else {
                                    this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker)));
                                }
                            }
                            else {
                                this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopQueryRowsResponseInfo, null, new RopQueryRowsResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopQueryRowsResponseChecker)));
                            }
                            goto label4;
                        }
                        if ((temp32 == 1)) {
                            this.Manager.Comment("reaching state \'S118\'");
                            if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopQueryRowsResponseInfo, null, new RopQueryRowsResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopQueryRowsResponseChecker1))) != -1)) {
                                this.Manager.Comment("reaching state \'S150\'");
                                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp20;
                                this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                                temp20 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                                this.Manager.Checkpoint("MS-OXCTABL_R582");
                                this.Manager.Checkpoint("MS-OXCTABL_R579");
                                this.Manager.Comment("reaching state \'S182\'");
                                this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp20, "return of RopGetCollapseState, state S182");
                                this.Manager.Comment("reaching state \'S214\'");
                                if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker5))) != -1)) {
                                    this.Manager.Comment("reaching state \'S246\'");
                                    bool temp21;
                                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(748,out _)\'");
                                    this.IMS_OXCTABLAdapterInstance.CheckRequirementEnabled(748, out temp21);
                                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp21);
                                    this.Manager.Comment("reaching state \'S278\'");
                                    int temp31 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteCheckRequirementEnabledChecker7)), new ExpectedReturn(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteCheckRequirementEnabledChecker8)));
                                    if ((temp31 == 0)) {
                                        this.Manager.Comment("reaching state \'S311\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp22;
                                        this.Manager.Comment("executing step \'call RopExpandRow(False,False,False)\'");
                                        temp22 = this.IMS_OXCTABLAdapterInstance.RopExpandRow(false, false, false);
                                        this.Manager.Checkpoint("MS-OXCTABL_R568");
                                        this.Manager.Checkpoint("MS-OXCTABL_R567");
                                        this.Manager.Comment("reaching state \'S359\'");
                                        this.Manager.Comment("checking step \'return RopExpandRow/success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp22, "return of RopExpandRow, state S359");
                                        this.Manager.Comment("reaching state \'S407\'");
                                        int temp26 = this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopExpandRowResponseInfo, null, new RopExpandRowResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopExpandRowResponseChecker3)), new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopExpandRowResponseInfo, null, new RopExpandRowResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopExpandRowResponseChecker4)));
                                        if ((temp26 == 0)) {
                                            S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteS455();
                                            goto label2;
                                        }
                                        if ((temp26 == 1)) {
                                            S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteS455();
                                            goto label2;
                                        }
                                        this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopExpandRowResponseInfo, null, new RopExpandRowResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopExpandRowResponseChecker3)), new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopExpandRowResponseInfo, null, new RopExpandRowResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopExpandRowResponseChecker4)));
                                    label2:
;
                                        goto label3;
                                    }
                                    if ((temp31 == 1)) {
                                        this.Manager.Comment("reaching state \'S312\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp27;
                                        this.Manager.Comment("executing step \'call RopExpandRow(False,False,False)\'");
                                        temp27 = this.IMS_OXCTABLAdapterInstance.RopExpandRow(false, false, false);
                                        this.Manager.Checkpoint("MS-OXCTABL_R568");
                                        this.Manager.Checkpoint("MS-OXCTABL_R567");
                                        this.Manager.Comment("reaching state \'S360\'");
                                        this.Manager.Comment("checking step \'return RopExpandRow/success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp27, "return of RopExpandRow, state S360");
                                        this.Manager.Comment("reaching state \'S408\'");
                                        if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopExpandRowResponseInfo, null, new RopExpandRowResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopExpandRowResponseChecker5))) != -1)) {
                                            this.Manager.Comment("reaching state \'S456\'");
                                            Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp28;
                                            this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                                            temp28 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                                            this.Manager.Checkpoint("MS-OXCTABL_R582");
                                            this.Manager.Checkpoint("MS-OXCTABL_R579");
                                            this.Manager.Comment("reaching state \'S504\'");
                                            this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp28, "return of RopGetCollapseState, state S504");
                                            this.Manager.Comment("reaching state \'S552\'");
                                            if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker8))) != -1)) {
                                                this.Manager.Comment("reaching state \'S600\'");
                                                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp29;
                                                this.Manager.Comment("executing step \'call RopSetCollapseState()\'");
                                                temp29 = this.IMS_OXCTABLAdapterInstance.RopSetCollapseState();
                                                this.Manager.Checkpoint("MS-OXCTABL_R588");
                                                this.Manager.Checkpoint("MS-OXCTABL_R585");
                                                this.Manager.Checkpoint("MS-OXCTABL_R289");
                                                this.Manager.Comment("reaching state \'S648\'");
                                                this.Manager.Comment("checking step \'return RopSetCollapseState/success\'");
                                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp29, "return of RopSetCollapseState, state S648");
                                                this.Manager.Comment("reaching state \'S696\'");
                                                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp30;
                                                this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                                                temp30 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                                                this.Manager.Checkpoint("MS-OXCTABL_R582");
                                                this.Manager.Checkpoint("MS-OXCTABL_R579");
                                                this.Manager.Comment("reaching state \'S744\'");
                                                this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp30, "return of RopGetCollapseState, state S744");
                                                this.Manager.Comment("reaching state \'S776\'");
                                                if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker9))) != -1)) {
                                                    this.Manager.Comment("reaching state \'S808\'");
                                                }
                                                else {
                                                    this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker9)));
                                                }
                                            }
                                            else {
                                                this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker8)));
                                            }
                                        }
                                        else {
                                            this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopExpandRowResponseInfo, null, new RopExpandRowResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopExpandRowResponseChecker5)));
                                        }
                                        goto label3;
                                    }
                                    throw new InvalidOperationException("never reached");
                                label3:
;
                                }
                                else {
                                    this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker5)));
                                }
                            }
                            else {
                                this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopQueryRowsResponseInfo, null, new RopQueryRowsResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopQueryRowsResponseChecker1)));
                            }
                            goto label4;
                        }
                        throw new InvalidOperationException("never reached");
                    label4:
;
                        goto label6;
                    }
                    if ((temp46 == 1)) {
                        this.Manager.Comment("reaching state \'S54\'");
                        Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp33;
                        this.Manager.Comment("executing step \'call RopQueryRows(Advance,True)\'");
                        temp33 = this.IMS_OXCTABLAdapterInstance.RopQueryRows(((Microsoft.Protocols.TestSuites.Common.QueryRowsFlags)(0)), true);
                        this.Manager.Checkpoint("MS-OXCTABL_R837");
                        this.Manager.Comment("reaching state \'S70\'");
                        this.Manager.Comment("checking step \'return RopQueryRows/success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp33, "return of RopQueryRows, state S70");
                        this.Manager.Comment("reaching state \'S86\'");
                        bool temp34;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(610,out _)\'");
                        this.IMS_OXCTABLAdapterInstance.CheckRequirementEnabled(610, out temp34);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp34);
                        this.Manager.Comment("reaching state \'S102\'");
                        int temp45 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteCheckRequirementEnabledChecker10)), new ExpectedReturn(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteCheckRequirementEnabledChecker11)));
                        if ((temp45 == 0)) {
                            this.Manager.Comment("reaching state \'S119\'");
                            if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopQueryRowsResponseInfo, null, new RopQueryRowsResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopQueryRowsResponseChecker2))) != -1)) {
                                this.Manager.Comment("reaching state \'S151\'");
                                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp35;
                                this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                                temp35 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                                this.Manager.Checkpoint("MS-OXCTABL_R582");
                                this.Manager.Checkpoint("MS-OXCTABL_R579");
                                this.Manager.Comment("reaching state \'S183\'");
                                this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp35, "return of RopGetCollapseState, state S183");
                                this.Manager.Comment("reaching state \'S215\'");
                                if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker10))) != -1)) {
                                    this.Manager.Comment("reaching state \'S247\'");
                                    Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp36;
                                    this.Manager.Comment("executing step \'call RopCollapseRow(False,False)\'");
                                    temp36 = this.IMS_OXCTABLAdapterInstance.RopCollapseRow(false, false);
                                    this.Manager.Checkpoint("MS-OXCTABL_R574");
                                    this.Manager.Comment("reaching state \'S279\'");
                                    this.Manager.Comment("checking step \'return RopCollapseRow/success\'");
                                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp36, "return of RopCollapseRow, state S279");
                                    this.Manager.Comment("reaching state \'S313\'");
                                    Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp37;
                                    this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                                    temp37 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                                    this.Manager.Checkpoint("MS-OXCTABL_R582");
                                    this.Manager.Checkpoint("MS-OXCTABL_R579");
                                    this.Manager.Comment("reaching state \'S361\'");
                                    this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp37, "return of RopGetCollapseState, state S361");
                                    this.Manager.Comment("reaching state \'S409\'");
                                    if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker11))) != -1)) {
                                        this.Manager.Comment("reaching state \'S457\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp38;
                                        this.Manager.Comment("executing step \'call RopSetCollapseState()\'");
                                        temp38 = this.IMS_OXCTABLAdapterInstance.RopSetCollapseState();
                                        this.Manager.Checkpoint("MS-OXCTABL_R588");
                                        this.Manager.Checkpoint("MS-OXCTABL_R585");
                                        this.Manager.Checkpoint("MS-OXCTABL_R289");
                                        this.Manager.Comment("reaching state \'S505\'");
                                        this.Manager.Comment("checking step \'return RopSetCollapseState/success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp38, "return of RopSetCollapseState, state S505");
                                        this.Manager.Comment("reaching state \'S553\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp39;
                                        this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                                        temp39 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                                        this.Manager.Checkpoint("MS-OXCTABL_R582");
                                        this.Manager.Checkpoint("MS-OXCTABL_R579");
                                        this.Manager.Comment("reaching state \'S601\'");
                                        this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp39, "return of RopGetCollapseState, state S601");
                                        this.Manager.Comment("reaching state \'S649\'");
                                        if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker12))) != -1)) {
                                            this.Manager.Comment("reaching state \'S697\'");
                                        }
                                        else {
                                            this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker12)));
                                        }
                                    }
                                    else {
                                        this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker11)));
                                    }
                                }
                                else {
                                    this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker10)));
                                }
                            }
                            else {
                                this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopQueryRowsResponseInfo, null, new RopQueryRowsResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopQueryRowsResponseChecker2)));
                            }
                            goto label5;
                        }
                        if ((temp45 == 1)) {
                            this.Manager.Comment("reaching state \'S120\'");
                            if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopQueryRowsResponseInfo, null, new RopQueryRowsResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopQueryRowsResponseChecker3))) != -1)) {
                                this.Manager.Comment("reaching state \'S152\'");
                                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp40;
                                this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                                temp40 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                                this.Manager.Checkpoint("MS-OXCTABL_R582");
                                this.Manager.Checkpoint("MS-OXCTABL_R579");
                                this.Manager.Comment("reaching state \'S184\'");
                                this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp40, "return of RopGetCollapseState, state S184");
                                this.Manager.Comment("reaching state \'S216\'");
                                if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker13))) != -1)) {
                                    this.Manager.Comment("reaching state \'S248\'");
                                    Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp41;
                                    this.Manager.Comment("executing step \'call RopCollapseRow(False,False)\'");
                                    temp41 = this.IMS_OXCTABLAdapterInstance.RopCollapseRow(false, false);
                                    this.Manager.Checkpoint("MS-OXCTABL_R574");
                                    this.Manager.Comment("reaching state \'S280\'");
                                    this.Manager.Comment("checking step \'return RopCollapseRow/success\'");
                                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp41, "return of RopCollapseRow, state S280");
                                    this.Manager.Comment("reaching state \'S314\'");
                                    Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp42;
                                    this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                                    temp42 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                                    this.Manager.Checkpoint("MS-OXCTABL_R582");
                                    this.Manager.Checkpoint("MS-OXCTABL_R579");
                                    this.Manager.Comment("reaching state \'S362\'");
                                    this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp42, "return of RopGetCollapseState, state S362");
                                    this.Manager.Comment("reaching state \'S410\'");
                                    if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker14))) != -1)) {
                                        this.Manager.Comment("reaching state \'S458\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp43;
                                        this.Manager.Comment("executing step \'call RopSetCollapseState()\'");
                                        temp43 = this.IMS_OXCTABLAdapterInstance.RopSetCollapseState();
                                        this.Manager.Checkpoint("MS-OXCTABL_R588");
                                        this.Manager.Checkpoint("MS-OXCTABL_R585");
                                        this.Manager.Checkpoint("MS-OXCTABL_R289");
                                        this.Manager.Comment("reaching state \'S506\'");
                                        this.Manager.Comment("checking step \'return RopSetCollapseState/success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp43, "return of RopSetCollapseState, state S506");
                                        this.Manager.Comment("reaching state \'S554\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp44;
                                        this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                                        temp44 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                                        this.Manager.Checkpoint("MS-OXCTABL_R582");
                                        this.Manager.Checkpoint("MS-OXCTABL_R579");
                                        this.Manager.Comment("reaching state \'S602\'");
                                        this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp44, "return of RopGetCollapseState, state S602");
                                        this.Manager.Comment("reaching state \'S650\'");
                                        if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker15))) != -1)) {
                                            this.Manager.Comment("reaching state \'S698\'");
                                        }
                                        else {
                                            this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker15)));
                                        }
                                    }
                                    else {
                                        this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker14)));
                                    }
                                }
                                else {
                                    this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker13)));
                                }
                            }
                            else {
                                this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopQueryRowsResponseInfo, null, new RopQueryRowsResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopQueryRowsResponseChecker3)));
                            }
                            goto label5;
                        }
                        throw new InvalidOperationException("never reached");
                    label5:
;
                        goto label6;
                    }
                    throw new InvalidOperationException("never reached");
                label6:
;
                    goto label12;
                }
                if ((temp82 == 1)) {
                    this.Manager.Comment("reaching state \'S38\'");
                    bool temp47;
                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(867,out _)\'");
                    this.IMS_OXCTABLAdapterInstance.CheckRequirementEnabled(867, out temp47);
                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp47);
                    this.Manager.Comment("reaching state \'S46\'");
                    int temp81 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteCheckRequirementEnabledChecker13)), new ExpectedReturn(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteCheckRequirementEnabledChecker16)));
                    if ((temp81 == 0)) {
                        this.Manager.Comment("reaching state \'S55\'");
                        Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp48;
                        this.Manager.Comment("executing step \'call RopQueryRows(Advance,True)\'");
                        temp48 = this.IMS_OXCTABLAdapterInstance.RopQueryRows(((Microsoft.Protocols.TestSuites.Common.QueryRowsFlags)(0)), true);
                        this.Manager.Checkpoint("MS-OXCTABL_R837");
                        this.Manager.Comment("reaching state \'S71\'");
                        this.Manager.Comment("checking step \'return RopQueryRows/success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp48, "return of RopQueryRows, state S71");
                        this.Manager.Comment("reaching state \'S87\'");
                        bool temp49;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(610,out _)\'");
                        this.IMS_OXCTABLAdapterInstance.CheckRequirementEnabled(610, out temp49);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp49);
                        this.Manager.Comment("reaching state \'S103\'");
                        int temp60 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteCheckRequirementEnabledChecker14)), new ExpectedReturn(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteCheckRequirementEnabledChecker15)));
                        if ((temp60 == 0)) {
                            this.Manager.Comment("reaching state \'S121\'");
                            if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopQueryRowsResponseInfo, null, new RopQueryRowsResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopQueryRowsResponseChecker4))) != -1)) {
                                this.Manager.Comment("reaching state \'S153\'");
                                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp50;
                                this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                                temp50 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                                this.Manager.Checkpoint("MS-OXCTABL_R582");
                                this.Manager.Checkpoint("MS-OXCTABL_R579");
                                this.Manager.Comment("reaching state \'S185\'");
                                this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp50, "return of RopGetCollapseState, state S185");
                                this.Manager.Comment("reaching state \'S217\'");
                                if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker16))) != -1)) {
                                    this.Manager.Comment("reaching state \'S249\'");
                                    Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp51;
                                    this.Manager.Comment("executing step \'call RopCollapseRow(False,False)\'");
                                    temp51 = this.IMS_OXCTABLAdapterInstance.RopCollapseRow(false, false);
                                    this.Manager.Checkpoint("MS-OXCTABL_R574");
                                    this.Manager.Comment("reaching state \'S281\'");
                                    this.Manager.Comment("checking step \'return RopCollapseRow/success\'");
                                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp51, "return of RopCollapseRow, state S281");
                                    this.Manager.Comment("reaching state \'S315\'");
                                    Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp52;
                                    this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                                    temp52 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                                    this.Manager.Checkpoint("MS-OXCTABL_R582");
                                    this.Manager.Checkpoint("MS-OXCTABL_R579");
                                    this.Manager.Comment("reaching state \'S363\'");
                                    this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp52, "return of RopGetCollapseState, state S363");
                                    this.Manager.Comment("reaching state \'S411\'");
                                    if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker17))) != -1)) {
                                        this.Manager.Comment("reaching state \'S459\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp53;
                                        this.Manager.Comment("executing step \'call RopSetCollapseState()\'");
                                        temp53 = this.IMS_OXCTABLAdapterInstance.RopSetCollapseState();
                                        this.Manager.Checkpoint("MS-OXCTABL_R588");
                                        this.Manager.Checkpoint("MS-OXCTABL_R585");
                                        this.Manager.Checkpoint("MS-OXCTABL_R289");
                                        this.Manager.Comment("reaching state \'S507\'");
                                        this.Manager.Comment("checking step \'return RopSetCollapseState/success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp53, "return of RopSetCollapseState, state S507");
                                        this.Manager.Comment("reaching state \'S555\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp54;
                                        this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                                        temp54 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                                        this.Manager.Checkpoint("MS-OXCTABL_R582");
                                        this.Manager.Checkpoint("MS-OXCTABL_R579");
                                        this.Manager.Comment("reaching state \'S603\'");
                                        this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp54, "return of RopGetCollapseState, state S603");
                                        this.Manager.Comment("reaching state \'S651\'");
                                        if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker18))) != -1)) {
                                            this.Manager.Comment("reaching state \'S699\'");
                                        }
                                        else {
                                            this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker18)));
                                        }
                                    }
                                    else {
                                        this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker17)));
                                    }
                                }
                                else {
                                    this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker16)));
                                }
                            }
                            else {
                                this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopQueryRowsResponseInfo, null, new RopQueryRowsResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopQueryRowsResponseChecker4)));
                            }
                            goto label7;
                        }
                        if ((temp60 == 1)) {
                            this.Manager.Comment("reaching state \'S122\'");
                            if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopQueryRowsResponseInfo, null, new RopQueryRowsResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopQueryRowsResponseChecker5))) != -1)) {
                                this.Manager.Comment("reaching state \'S154\'");
                                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp55;
                                this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                                temp55 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                                this.Manager.Checkpoint("MS-OXCTABL_R582");
                                this.Manager.Checkpoint("MS-OXCTABL_R579");
                                this.Manager.Comment("reaching state \'S186\'");
                                this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp55, "return of RopGetCollapseState, state S186");
                                this.Manager.Comment("reaching state \'S218\'");
                                if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker19))) != -1)) {
                                    this.Manager.Comment("reaching state \'S250\'");
                                    Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp56;
                                    this.Manager.Comment("executing step \'call RopCollapseRow(False,False)\'");
                                    temp56 = this.IMS_OXCTABLAdapterInstance.RopCollapseRow(false, false);
                                    this.Manager.Checkpoint("MS-OXCTABL_R574");
                                    this.Manager.Comment("reaching state \'S282\'");
                                    this.Manager.Comment("checking step \'return RopCollapseRow/success\'");
                                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp56, "return of RopCollapseRow, state S282");
                                    this.Manager.Comment("reaching state \'S316\'");
                                    Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp57;
                                    this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                                    temp57 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                                    this.Manager.Checkpoint("MS-OXCTABL_R582");
                                    this.Manager.Checkpoint("MS-OXCTABL_R579");
                                    this.Manager.Comment("reaching state \'S364\'");
                                    this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp57, "return of RopGetCollapseState, state S364");
                                    this.Manager.Comment("reaching state \'S412\'");
                                    if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker20))) != -1)) {
                                        this.Manager.Comment("reaching state \'S460\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp58;
                                        this.Manager.Comment("executing step \'call RopSetCollapseState()\'");
                                        temp58 = this.IMS_OXCTABLAdapterInstance.RopSetCollapseState();
                                        this.Manager.Checkpoint("MS-OXCTABL_R588");
                                        this.Manager.Checkpoint("MS-OXCTABL_R585");
                                        this.Manager.Checkpoint("MS-OXCTABL_R289");
                                        this.Manager.Comment("reaching state \'S508\'");
                                        this.Manager.Comment("checking step \'return RopSetCollapseState/success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp58, "return of RopSetCollapseState, state S508");
                                        this.Manager.Comment("reaching state \'S556\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp59;
                                        this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                                        temp59 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                                        this.Manager.Checkpoint("MS-OXCTABL_R582");
                                        this.Manager.Checkpoint("MS-OXCTABL_R579");
                                        this.Manager.Comment("reaching state \'S604\'");
                                        this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp59, "return of RopGetCollapseState, state S604");
                                        this.Manager.Comment("reaching state \'S652\'");
                                        if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker21))) != -1)) {
                                            this.Manager.Comment("reaching state \'S700\'");
                                        }
                                        else {
                                            this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker21)));
                                        }
                                    }
                                    else {
                                        this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker20)));
                                    }
                                }
                                else {
                                    this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker19)));
                                }
                            }
                            else {
                                this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopQueryRowsResponseInfo, null, new RopQueryRowsResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopQueryRowsResponseChecker5)));
                            }
                            goto label7;
                        }
                        throw new InvalidOperationException("never reached");
                    label7:
;
                        goto label11;
                    }
                    if ((temp81 == 1)) {
                        this.Manager.Comment("reaching state \'S56\'");
                        Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp61;
                        this.Manager.Comment("executing step \'call RopQueryRows(Advance,True)\'");
                        temp61 = this.IMS_OXCTABLAdapterInstance.RopQueryRows(((Microsoft.Protocols.TestSuites.Common.QueryRowsFlags)(0)), true);
                        this.Manager.Checkpoint("MS-OXCTABL_R837");
                        this.Manager.Comment("reaching state \'S72\'");
                        this.Manager.Comment("checking step \'return RopQueryRows/success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp61, "return of RopQueryRows, state S72");
                        this.Manager.Comment("reaching state \'S88\'");
                        bool temp62;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(610,out _)\'");
                        this.IMS_OXCTABLAdapterInstance.CheckRequirementEnabled(610, out temp62);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp62);
                        this.Manager.Comment("reaching state \'S104\'");
                        int temp80 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteCheckRequirementEnabledChecker17)), new ExpectedReturn(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteCheckRequirementEnabledChecker20)));
                        if ((temp80 == 0)) {
                            this.Manager.Comment("reaching state \'S123\'");
                            if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopQueryRowsResponseInfo, null, new RopQueryRowsResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopQueryRowsResponseChecker6))) != -1)) {
                                this.Manager.Comment("reaching state \'S155\'");
                                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp63;
                                this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                                temp63 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                                this.Manager.Checkpoint("MS-OXCTABL_R582");
                                this.Manager.Checkpoint("MS-OXCTABL_R579");
                                this.Manager.Comment("reaching state \'S187\'");
                                this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp63, "return of RopGetCollapseState, state S187");
                                this.Manager.Comment("reaching state \'S219\'");
                                if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker22))) != -1)) {
                                    this.Manager.Comment("reaching state \'S251\'");
                                    bool temp64;
                                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(748,out _)\'");
                                    this.IMS_OXCTABLAdapterInstance.CheckRequirementEnabled(748, out temp64);
                                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp64);
                                    this.Manager.Comment("reaching state \'S283\'");
                                    int temp74 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteCheckRequirementEnabledChecker18)), new ExpectedReturn(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteCheckRequirementEnabledChecker19)));
                                    if ((temp74 == 0)) {
                                        this.Manager.Comment("reaching state \'S317\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp65;
                                        this.Manager.Comment("executing step \'call RopExpandRow(False,False,False)\'");
                                        temp65 = this.IMS_OXCTABLAdapterInstance.RopExpandRow(false, false, false);
                                        this.Manager.Checkpoint("MS-OXCTABL_R568");
                                        this.Manager.Checkpoint("MS-OXCTABL_R567");
                                        this.Manager.Comment("reaching state \'S365\'");
                                        this.Manager.Comment("checking step \'return RopExpandRow/success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp65, "return of RopExpandRow, state S365");
                                        this.Manager.Comment("reaching state \'S413\'");
                                        if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopExpandRowResponseInfo, null, new RopExpandRowResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopExpandRowResponseChecker6))) != -1)) {
                                            this.Manager.Comment("reaching state \'S461\'");
                                            Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp66;
                                            this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                                            temp66 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                                            this.Manager.Checkpoint("MS-OXCTABL_R582");
                                            this.Manager.Checkpoint("MS-OXCTABL_R579");
                                            this.Manager.Comment("reaching state \'S509\'");
                                            this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp66, "return of RopGetCollapseState, state S509");
                                            this.Manager.Comment("reaching state \'S557\'");
                                            if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker23))) != -1)) {
                                                this.Manager.Comment("reaching state \'S605\'");
                                                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp67;
                                                this.Manager.Comment("executing step \'call RopSetCollapseState()\'");
                                                temp67 = this.IMS_OXCTABLAdapterInstance.RopSetCollapseState();
                                                this.Manager.Checkpoint("MS-OXCTABL_R588");
                                                this.Manager.Checkpoint("MS-OXCTABL_R585");
                                                this.Manager.Checkpoint("MS-OXCTABL_R289");
                                                this.Manager.Comment("reaching state \'S653\'");
                                                this.Manager.Comment("checking step \'return RopSetCollapseState/success\'");
                                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp67, "return of RopSetCollapseState, state S653");
                                                this.Manager.Comment("reaching state \'S701\'");
                                                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp68;
                                                this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                                                temp68 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                                                this.Manager.Checkpoint("MS-OXCTABL_R582");
                                                this.Manager.Checkpoint("MS-OXCTABL_R579");
                                                this.Manager.Comment("reaching state \'S745\'");
                                                this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp68, "return of RopGetCollapseState, state S745");
                                                this.Manager.Comment("reaching state \'S777\'");
                                                if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker24))) != -1)) {
                                                    this.Manager.Comment("reaching state \'S809\'");
                                                }
                                                else {
                                                    this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker24)));
                                                }
                                            }
                                            else {
                                                this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker23)));
                                            }
                                        }
                                        else {
                                            this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopExpandRowResponseInfo, null, new RopExpandRowResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopExpandRowResponseChecker6)));
                                        }
                                        goto label9;
                                    }
                                    if ((temp74 == 1)) {
                                        this.Manager.Comment("reaching state \'S318\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp69;
                                        this.Manager.Comment("executing step \'call RopExpandRow(False,False,False)\'");
                                        temp69 = this.IMS_OXCTABLAdapterInstance.RopExpandRow(false, false, false);
                                        this.Manager.Checkpoint("MS-OXCTABL_R568");
                                        this.Manager.Checkpoint("MS-OXCTABL_R567");
                                        this.Manager.Comment("reaching state \'S366\'");
                                        this.Manager.Comment("checking step \'return RopExpandRow/success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp69, "return of RopExpandRow, state S366");
                                        this.Manager.Comment("reaching state \'S414\'");
                                        int temp73 = this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopExpandRowResponseInfo, null, new RopExpandRowResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopExpandRowResponseChecker7)), new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopExpandRowResponseInfo, null, new RopExpandRowResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopExpandRowResponseChecker8)));
                                        if ((temp73 == 0)) {
                                            S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteS462();
                                            goto label8;
                                        }
                                        if ((temp73 == 1)) {
                                            S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteS462();
                                            goto label8;
                                        }
                                        this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopExpandRowResponseInfo, null, new RopExpandRowResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopExpandRowResponseChecker7)), new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopExpandRowResponseInfo, null, new RopExpandRowResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopExpandRowResponseChecker8)));
                                    label8:
;
                                        goto label9;
                                    }
                                    throw new InvalidOperationException("never reached");
                                label9:
;
                                }
                                else {
                                    this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker22)));
                                }
                            }
                            else {
                                this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopQueryRowsResponseInfo, null, new RopQueryRowsResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopQueryRowsResponseChecker6)));
                            }
                            goto label10;
                        }
                        if ((temp80 == 1)) {
                            this.Manager.Comment("reaching state \'S124\'");
                            if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopQueryRowsResponseInfo, null, new RopQueryRowsResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopQueryRowsResponseChecker7))) != -1)) {
                                this.Manager.Comment("reaching state \'S156\'");
                                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp75;
                                this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                                temp75 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                                this.Manager.Checkpoint("MS-OXCTABL_R582");
                                this.Manager.Checkpoint("MS-OXCTABL_R579");
                                this.Manager.Comment("reaching state \'S188\'");
                                this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp75, "return of RopGetCollapseState, state S188");
                                this.Manager.Comment("reaching state \'S220\'");
                                if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker27))) != -1)) {
                                    this.Manager.Comment("reaching state \'S252\'");
                                    Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp76;
                                    this.Manager.Comment("executing step \'call RopCollapseRow(False,False)\'");
                                    temp76 = this.IMS_OXCTABLAdapterInstance.RopCollapseRow(false, false);
                                    this.Manager.Checkpoint("MS-OXCTABL_R574");
                                    this.Manager.Comment("reaching state \'S284\'");
                                    this.Manager.Comment("checking step \'return RopCollapseRow/success\'");
                                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp76, "return of RopCollapseRow, state S284");
                                    this.Manager.Comment("reaching state \'S319\'");
                                    Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp77;
                                    this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                                    temp77 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                                    this.Manager.Checkpoint("MS-OXCTABL_R582");
                                    this.Manager.Checkpoint("MS-OXCTABL_R579");
                                    this.Manager.Comment("reaching state \'S367\'");
                                    this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp77, "return of RopGetCollapseState, state S367");
                                    this.Manager.Comment("reaching state \'S415\'");
                                    if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker28))) != -1)) {
                                        this.Manager.Comment("reaching state \'S463\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp78;
                                        this.Manager.Comment("executing step \'call RopSetCollapseState()\'");
                                        temp78 = this.IMS_OXCTABLAdapterInstance.RopSetCollapseState();
                                        this.Manager.Checkpoint("MS-OXCTABL_R588");
                                        this.Manager.Checkpoint("MS-OXCTABL_R585");
                                        this.Manager.Checkpoint("MS-OXCTABL_R289");
                                        this.Manager.Comment("reaching state \'S511\'");
                                        this.Manager.Comment("checking step \'return RopSetCollapseState/success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp78, "return of RopSetCollapseState, state S511");
                                        this.Manager.Comment("reaching state \'S559\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp79;
                                        this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                                        temp79 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                                        this.Manager.Checkpoint("MS-OXCTABL_R582");
                                        this.Manager.Checkpoint("MS-OXCTABL_R579");
                                        this.Manager.Comment("reaching state \'S607\'");
                                        this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp79, "return of RopGetCollapseState, state S607");
                                        this.Manager.Comment("reaching state \'S655\'");
                                        if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker29))) != -1)) {
                                            this.Manager.Comment("reaching state \'S703\'");
                                        }
                                        else {
                                            this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker29)));
                                        }
                                    }
                                    else {
                                        this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker28)));
                                    }
                                }
                                else {
                                    this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker27)));
                                }
                            }
                            else {
                                this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopQueryRowsResponseInfo, null, new RopQueryRowsResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopQueryRowsResponseChecker7)));
                            }
                            goto label10;
                        }
                        throw new InvalidOperationException("never reached");
                    label10:
;
                        goto label11;
                    }
                    throw new InvalidOperationException("never reached");
                label11:
;
                    goto label12;
                }
                throw new InvalidOperationException("never reached");
            label12:
;
                goto label26;
            }
            if ((temp162 == 1)) {
                this.Manager.Comment("reaching state \'S30\'");
                bool temp83;
                this.Manager.Comment("executing step \'call CheckRequirementEnabled(866,out _)\'");
                this.IMS_OXCTABLAdapterInstance.CheckRequirementEnabled(866, out temp83);
                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp83);
                this.Manager.Comment("reaching state \'S34\'");
                int temp161 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteCheckRequirementEnabledChecker22)), new ExpectedReturn(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteCheckRequirementEnabledChecker33)));
                if ((temp161 == 0)) {
                    this.Manager.Comment("reaching state \'S39\'");
                    bool temp84;
                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(867,out _)\'");
                    this.IMS_OXCTABLAdapterInstance.CheckRequirementEnabled(867, out temp84);
                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp84);
                    this.Manager.Comment("reaching state \'S47\'");
                    int temp125 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteCheckRequirementEnabledChecker23)), new ExpectedReturn(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteCheckRequirementEnabledChecker28)));
                    if ((temp125 == 0)) {
                        this.Manager.Comment("reaching state \'S57\'");
                        Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp85;
                        this.Manager.Comment("executing step \'call RopQueryRows(Advance,True)\'");
                        temp85 = this.IMS_OXCTABLAdapterInstance.RopQueryRows(((Microsoft.Protocols.TestSuites.Common.QueryRowsFlags)(0)), true);
                        this.Manager.Checkpoint("MS-OXCTABL_R837");
                        this.Manager.Comment("reaching state \'S73\'");
                        this.Manager.Comment("checking step \'return RopQueryRows/success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp85, "return of RopQueryRows, state S73");
                        this.Manager.Comment("reaching state \'S89\'");
                        bool temp86;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(610,out _)\'");
                        this.IMS_OXCTABLAdapterInstance.CheckRequirementEnabled(610, out temp86);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp86);
                        this.Manager.Comment("reaching state \'S105\'");
                        int temp104 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteCheckRequirementEnabledChecker24)), new ExpectedReturn(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteCheckRequirementEnabledChecker27)));
                        if ((temp104 == 0)) {
                            this.Manager.Comment("reaching state \'S125\'");
                            if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopQueryRowsResponseInfo, null, new RopQueryRowsResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopQueryRowsResponseChecker8))) != -1)) {
                                this.Manager.Comment("reaching state \'S157\'");
                                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp87;
                                this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                                temp87 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                                this.Manager.Checkpoint("MS-OXCTABL_R582");
                                this.Manager.Checkpoint("MS-OXCTABL_R579");
                                this.Manager.Comment("reaching state \'S189\'");
                                this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp87, "return of RopGetCollapseState, state S189");
                                this.Manager.Comment("reaching state \'S221\'");
                                if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker30))) != -1)) {
                                    this.Manager.Comment("reaching state \'S253\'");
                                    bool temp88;
                                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(748,out _)\'");
                                    this.IMS_OXCTABLAdapterInstance.CheckRequirementEnabled(748, out temp88);
                                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp88);
                                    this.Manager.Comment("reaching state \'S285\'");
                                    int temp98 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteCheckRequirementEnabledChecker25)), new ExpectedReturn(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteCheckRequirementEnabledChecker26)));
                                    if ((temp98 == 0)) {
                                        this.Manager.Comment("reaching state \'S320\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp89;
                                        this.Manager.Comment("executing step \'call RopExpandRow(False,False,False)\'");
                                        temp89 = this.IMS_OXCTABLAdapterInstance.RopExpandRow(false, false, false);
                                        this.Manager.Checkpoint("MS-OXCTABL_R568");
                                        this.Manager.Checkpoint("MS-OXCTABL_R567");
                                        this.Manager.Comment("reaching state \'S368\'");
                                        this.Manager.Comment("checking step \'return RopExpandRow/success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp89, "return of RopExpandRow, state S368");
                                        this.Manager.Comment("reaching state \'S416\'");
                                        int temp93 = this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopExpandRowResponseInfo, null, new RopExpandRowResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopExpandRowResponseChecker9)), new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopExpandRowResponseInfo, null, new RopExpandRowResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopExpandRowResponseChecker10)));
                                        if ((temp93 == 0)) {
                                            S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteS464();
                                            goto label13;
                                        }
                                        if ((temp93 == 1)) {
                                            S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteS464();
                                            goto label13;
                                        }
                                        this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopExpandRowResponseInfo, null, new RopExpandRowResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopExpandRowResponseChecker9)), new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopExpandRowResponseInfo, null, new RopExpandRowResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopExpandRowResponseChecker10)));
                                    label13:
;
                                        goto label14;
                                    }
                                    if ((temp98 == 1)) {
                                        this.Manager.Comment("reaching state \'S321\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp94;
                                        this.Manager.Comment("executing step \'call RopExpandRow(False,False,False)\'");
                                        temp94 = this.IMS_OXCTABLAdapterInstance.RopExpandRow(false, false, false);
                                        this.Manager.Checkpoint("MS-OXCTABL_R568");
                                        this.Manager.Checkpoint("MS-OXCTABL_R567");
                                        this.Manager.Comment("reaching state \'S369\'");
                                        this.Manager.Comment("checking step \'return RopExpandRow/success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp94, "return of RopExpandRow, state S369");
                                        this.Manager.Comment("reaching state \'S417\'");
                                        if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopExpandRowResponseInfo, null, new RopExpandRowResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopExpandRowResponseChecker11))) != -1)) {
                                            this.Manager.Comment("reaching state \'S465\'");
                                            Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp95;
                                            this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                                            temp95 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                                            this.Manager.Checkpoint("MS-OXCTABL_R582");
                                            this.Manager.Checkpoint("MS-OXCTABL_R579");
                                            this.Manager.Comment("reaching state \'S513\'");
                                            this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp95, "return of RopGetCollapseState, state S513");
                                            this.Manager.Comment("reaching state \'S561\'");
                                            if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker33))) != -1)) {
                                                this.Manager.Comment("reaching state \'S609\'");
                                                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp96;
                                                this.Manager.Comment("executing step \'call RopSetCollapseState()\'");
                                                temp96 = this.IMS_OXCTABLAdapterInstance.RopSetCollapseState();
                                                this.Manager.Checkpoint("MS-OXCTABL_R588");
                                                this.Manager.Checkpoint("MS-OXCTABL_R585");
                                                this.Manager.Checkpoint("MS-OXCTABL_R289");
                                                this.Manager.Comment("reaching state \'S657\'");
                                                this.Manager.Comment("checking step \'return RopSetCollapseState/success\'");
                                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp96, "return of RopSetCollapseState, state S657");
                                                this.Manager.Comment("reaching state \'S705\'");
                                                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp97;
                                                this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                                                temp97 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                                                this.Manager.Checkpoint("MS-OXCTABL_R582");
                                                this.Manager.Checkpoint("MS-OXCTABL_R579");
                                                this.Manager.Comment("reaching state \'S748\'");
                                                this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp97, "return of RopGetCollapseState, state S748");
                                                this.Manager.Comment("reaching state \'S780\'");
                                                if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker34))) != -1)) {
                                                    this.Manager.Comment("reaching state \'S812\'");
                                                }
                                                else {
                                                    this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker34)));
                                                }
                                            }
                                            else {
                                                this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker33)));
                                            }
                                        }
                                        else {
                                            this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopExpandRowResponseInfo, null, new RopExpandRowResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopExpandRowResponseChecker11)));
                                        }
                                        goto label14;
                                    }
                                    throw new InvalidOperationException("never reached");
                                label14:
;
                                }
                                else {
                                    this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker30)));
                                }
                            }
                            else {
                                this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopQueryRowsResponseInfo, null, new RopQueryRowsResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopQueryRowsResponseChecker8)));
                            }
                            goto label15;
                        }
                        if ((temp104 == 1)) {
                            this.Manager.Comment("reaching state \'S126\'");
                            if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopQueryRowsResponseInfo, null, new RopQueryRowsResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopQueryRowsResponseChecker9))) != -1)) {
                                this.Manager.Comment("reaching state \'S158\'");
                                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp99;
                                this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                                temp99 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                                this.Manager.Checkpoint("MS-OXCTABL_R582");
                                this.Manager.Checkpoint("MS-OXCTABL_R579");
                                this.Manager.Comment("reaching state \'S190\'");
                                this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp99, "return of RopGetCollapseState, state S190");
                                this.Manager.Comment("reaching state \'S222\'");
                                if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker35))) != -1)) {
                                    this.Manager.Comment("reaching state \'S254\'");
                                    Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp100;
                                    this.Manager.Comment("executing step \'call RopCollapseRow(False,False)\'");
                                    temp100 = this.IMS_OXCTABLAdapterInstance.RopCollapseRow(false, false);
                                    this.Manager.Checkpoint("MS-OXCTABL_R574");
                                    this.Manager.Comment("reaching state \'S286\'");
                                    this.Manager.Comment("checking step \'return RopCollapseRow/success\'");
                                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp100, "return of RopCollapseRow, state S286");
                                    this.Manager.Comment("reaching state \'S322\'");
                                    Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp101;
                                    this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                                    temp101 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                                    this.Manager.Checkpoint("MS-OXCTABL_R582");
                                    this.Manager.Checkpoint("MS-OXCTABL_R579");
                                    this.Manager.Comment("reaching state \'S370\'");
                                    this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp101, "return of RopGetCollapseState, state S370");
                                    this.Manager.Comment("reaching state \'S418\'");
                                    if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker36))) != -1)) {
                                        this.Manager.Comment("reaching state \'S466\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp102;
                                        this.Manager.Comment("executing step \'call RopSetCollapseState()\'");
                                        temp102 = this.IMS_OXCTABLAdapterInstance.RopSetCollapseState();
                                        this.Manager.Checkpoint("MS-OXCTABL_R588");
                                        this.Manager.Checkpoint("MS-OXCTABL_R585");
                                        this.Manager.Checkpoint("MS-OXCTABL_R289");
                                        this.Manager.Comment("reaching state \'S514\'");
                                        this.Manager.Comment("checking step \'return RopSetCollapseState/success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp102, "return of RopSetCollapseState, state S514");
                                        this.Manager.Comment("reaching state \'S562\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp103;
                                        this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                                        temp103 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                                        this.Manager.Checkpoint("MS-OXCTABL_R582");
                                        this.Manager.Checkpoint("MS-OXCTABL_R579");
                                        this.Manager.Comment("reaching state \'S610\'");
                                        this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp103, "return of RopGetCollapseState, state S610");
                                        this.Manager.Comment("reaching state \'S658\'");
                                        if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker37))) != -1)) {
                                            this.Manager.Comment("reaching state \'S706\'");
                                        }
                                        else {
                                            this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker37)));
                                        }
                                    }
                                    else {
                                        this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker36)));
                                    }
                                }
                                else {
                                    this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker35)));
                                }
                            }
                            else {
                                this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopQueryRowsResponseInfo, null, new RopQueryRowsResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopQueryRowsResponseChecker9)));
                            }
                            goto label15;
                        }
                        throw new InvalidOperationException("never reached");
                    label15:
;
                        goto label19;
                    }
                    if ((temp125 == 1)) {
                        this.Manager.Comment("reaching state \'S58\'");
                        Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp105;
                        this.Manager.Comment("executing step \'call RopQueryRows(Advance,True)\'");
                        temp105 = this.IMS_OXCTABLAdapterInstance.RopQueryRows(((Microsoft.Protocols.TestSuites.Common.QueryRowsFlags)(0)), true);
                        this.Manager.Checkpoint("MS-OXCTABL_R837");
                        this.Manager.Comment("reaching state \'S74\'");
                        this.Manager.Comment("checking step \'return RopQueryRows/success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp105, "return of RopQueryRows, state S74");
                        this.Manager.Comment("reaching state \'S90\'");
                        bool temp106;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(610,out _)\'");
                        this.IMS_OXCTABLAdapterInstance.CheckRequirementEnabled(610, out temp106);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp106);
                        this.Manager.Comment("reaching state \'S106\'");
                        int temp124 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteCheckRequirementEnabledChecker29)), new ExpectedReturn(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteCheckRequirementEnabledChecker32)));
                        if ((temp124 == 0)) {
                            this.Manager.Comment("reaching state \'S127\'");
                            if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopQueryRowsResponseInfo, null, new RopQueryRowsResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopQueryRowsResponseChecker10))) != -1)) {
                                this.Manager.Comment("reaching state \'S159\'");
                                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp107;
                                this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                                temp107 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                                this.Manager.Checkpoint("MS-OXCTABL_R582");
                                this.Manager.Checkpoint("MS-OXCTABL_R579");
                                this.Manager.Comment("reaching state \'S191\'");
                                this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp107, "return of RopGetCollapseState, state S191");
                                this.Manager.Comment("reaching state \'S223\'");
                                if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker38))) != -1)) {
                                    this.Manager.Comment("reaching state \'S255\'");
                                    bool temp108;
                                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(748,out _)\'");
                                    this.IMS_OXCTABLAdapterInstance.CheckRequirementEnabled(748, out temp108);
                                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp108);
                                    this.Manager.Comment("reaching state \'S287\'");
                                    int temp118 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteCheckRequirementEnabledChecker30)), new ExpectedReturn(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteCheckRequirementEnabledChecker31)));
                                    if ((temp118 == 0)) {
                                        this.Manager.Comment("reaching state \'S323\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp109;
                                        this.Manager.Comment("executing step \'call RopExpandRow(False,False,False)\'");
                                        temp109 = this.IMS_OXCTABLAdapterInstance.RopExpandRow(false, false, false);
                                        this.Manager.Checkpoint("MS-OXCTABL_R568");
                                        this.Manager.Checkpoint("MS-OXCTABL_R567");
                                        this.Manager.Comment("reaching state \'S371\'");
                                        this.Manager.Comment("checking step \'return RopExpandRow/success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp109, "return of RopExpandRow, state S371");
                                        this.Manager.Comment("reaching state \'S419\'");
                                        int temp113 = this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopExpandRowResponseInfo, null, new RopExpandRowResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopExpandRowResponseChecker12)), new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopExpandRowResponseInfo, null, new RopExpandRowResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopExpandRowResponseChecker13)));
                                        if ((temp113 == 0)) {
                                            S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteS467();
                                            goto label16;
                                        }
                                        if ((temp113 == 1)) {
                                            S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteS467();
                                            goto label16;
                                        }
                                        this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopExpandRowResponseInfo, null, new RopExpandRowResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopExpandRowResponseChecker12)), new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopExpandRowResponseInfo, null, new RopExpandRowResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopExpandRowResponseChecker13)));
                                    label16:
;
                                        goto label17;
                                    }
                                    if ((temp118 == 1)) {
                                        this.Manager.Comment("reaching state \'S324\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp114;
                                        this.Manager.Comment("executing step \'call RopExpandRow(False,False,False)\'");
                                        temp114 = this.IMS_OXCTABLAdapterInstance.RopExpandRow(false, false, false);
                                        this.Manager.Checkpoint("MS-OXCTABL_R568");
                                        this.Manager.Checkpoint("MS-OXCTABL_R567");
                                        this.Manager.Comment("reaching state \'S372\'");
                                        this.Manager.Comment("checking step \'return RopExpandRow/success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp114, "return of RopExpandRow, state S372");
                                        this.Manager.Comment("reaching state \'S420\'");
                                        if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopExpandRowResponseInfo, null, new RopExpandRowResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopExpandRowResponseChecker14))) != -1)) {
                                            this.Manager.Comment("reaching state \'S468\'");
                                            Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp115;
                                            this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                                            temp115 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                                            this.Manager.Checkpoint("MS-OXCTABL_R582");
                                            this.Manager.Checkpoint("MS-OXCTABL_R579");
                                            this.Manager.Comment("reaching state \'S516\'");
                                            this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp115, "return of RopGetCollapseState, state S516");
                                            this.Manager.Comment("reaching state \'S564\'");
                                            if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker41))) != -1)) {
                                                this.Manager.Comment("reaching state \'S612\'");
                                                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp116;
                                                this.Manager.Comment("executing step \'call RopSetCollapseState()\'");
                                                temp116 = this.IMS_OXCTABLAdapterInstance.RopSetCollapseState();
                                                this.Manager.Checkpoint("MS-OXCTABL_R588");
                                                this.Manager.Checkpoint("MS-OXCTABL_R585");
                                                this.Manager.Checkpoint("MS-OXCTABL_R289");
                                                this.Manager.Comment("reaching state \'S660\'");
                                                this.Manager.Comment("checking step \'return RopSetCollapseState/success\'");
                                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp116, "return of RopSetCollapseState, state S660");
                                                this.Manager.Comment("reaching state \'S708\'");
                                                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp117;
                                                this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                                                temp117 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                                                this.Manager.Checkpoint("MS-OXCTABL_R582");
                                                this.Manager.Checkpoint("MS-OXCTABL_R579");
                                                this.Manager.Comment("reaching state \'S750\'");
                                                this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp117, "return of RopGetCollapseState, state S750");
                                                this.Manager.Comment("reaching state \'S782\'");
                                                if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker42))) != -1)) {
                                                    this.Manager.Comment("reaching state \'S814\'");
                                                }
                                                else {
                                                    this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker42)));
                                                }
                                            }
                                            else {
                                                this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker41)));
                                            }
                                        }
                                        else {
                                            this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopExpandRowResponseInfo, null, new RopExpandRowResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopExpandRowResponseChecker14)));
                                        }
                                        goto label17;
                                    }
                                    throw new InvalidOperationException("never reached");
                                label17:
;
                                }
                                else {
                                    this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker38)));
                                }
                            }
                            else {
                                this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopQueryRowsResponseInfo, null, new RopQueryRowsResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopQueryRowsResponseChecker10)));
                            }
                            goto label18;
                        }
                        if ((temp124 == 1)) {
                            this.Manager.Comment("reaching state \'S128\'");
                            if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopQueryRowsResponseInfo, null, new RopQueryRowsResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopQueryRowsResponseChecker11))) != -1)) {
                                this.Manager.Comment("reaching state \'S160\'");
                                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp119;
                                this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                                temp119 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                                this.Manager.Checkpoint("MS-OXCTABL_R582");
                                this.Manager.Checkpoint("MS-OXCTABL_R579");
                                this.Manager.Comment("reaching state \'S192\'");
                                this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp119, "return of RopGetCollapseState, state S192");
                                this.Manager.Comment("reaching state \'S224\'");
                                if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker43))) != -1)) {
                                    this.Manager.Comment("reaching state \'S256\'");
                                    Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp120;
                                    this.Manager.Comment("executing step \'call RopCollapseRow(False,False)\'");
                                    temp120 = this.IMS_OXCTABLAdapterInstance.RopCollapseRow(false, false);
                                    this.Manager.Checkpoint("MS-OXCTABL_R574");
                                    this.Manager.Comment("reaching state \'S288\'");
                                    this.Manager.Comment("checking step \'return RopCollapseRow/success\'");
                                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp120, "return of RopCollapseRow, state S288");
                                    this.Manager.Comment("reaching state \'S325\'");
                                    Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp121;
                                    this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                                    temp121 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                                    this.Manager.Checkpoint("MS-OXCTABL_R582");
                                    this.Manager.Checkpoint("MS-OXCTABL_R579");
                                    this.Manager.Comment("reaching state \'S373\'");
                                    this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp121, "return of RopGetCollapseState, state S373");
                                    this.Manager.Comment("reaching state \'S421\'");
                                    if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker44))) != -1)) {
                                        this.Manager.Comment("reaching state \'S469\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp122;
                                        this.Manager.Comment("executing step \'call RopSetCollapseState()\'");
                                        temp122 = this.IMS_OXCTABLAdapterInstance.RopSetCollapseState();
                                        this.Manager.Checkpoint("MS-OXCTABL_R588");
                                        this.Manager.Checkpoint("MS-OXCTABL_R585");
                                        this.Manager.Checkpoint("MS-OXCTABL_R289");
                                        this.Manager.Comment("reaching state \'S517\'");
                                        this.Manager.Comment("checking step \'return RopSetCollapseState/success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp122, "return of RopSetCollapseState, state S517");
                                        this.Manager.Comment("reaching state \'S565\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp123;
                                        this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                                        temp123 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                                        this.Manager.Checkpoint("MS-OXCTABL_R582");
                                        this.Manager.Checkpoint("MS-OXCTABL_R579");
                                        this.Manager.Comment("reaching state \'S613\'");
                                        this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp123, "return of RopGetCollapseState, state S613");
                                        this.Manager.Comment("reaching state \'S661\'");
                                        if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker45))) != -1)) {
                                            this.Manager.Comment("reaching state \'S709\'");
                                        }
                                        else {
                                            this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker45)));
                                        }
                                    }
                                    else {
                                        this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker44)));
                                    }
                                }
                                else {
                                    this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker43)));
                                }
                            }
                            else {
                                this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopQueryRowsResponseInfo, null, new RopQueryRowsResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopQueryRowsResponseChecker11)));
                            }
                            goto label18;
                        }
                        throw new InvalidOperationException("never reached");
                    label18:
;
                        goto label19;
                    }
                    throw new InvalidOperationException("never reached");
                label19:
;
                    goto label25;
                }
                if ((temp161 == 1)) {
                    this.Manager.Comment("reaching state \'S40\'");
                    bool temp126;
                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(867,out _)\'");
                    this.IMS_OXCTABLAdapterInstance.CheckRequirementEnabled(867, out temp126);
                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp126);
                    this.Manager.Comment("reaching state \'S48\'");
                    int temp160 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteCheckRequirementEnabledChecker34)), new ExpectedReturn(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteCheckRequirementEnabledChecker39)));
                    if ((temp160 == 0)) {
                        this.Manager.Comment("reaching state \'S59\'");
                        Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp127;
                        this.Manager.Comment("executing step \'call RopQueryRows(Advance,True)\'");
                        temp127 = this.IMS_OXCTABLAdapterInstance.RopQueryRows(((Microsoft.Protocols.TestSuites.Common.QueryRowsFlags)(0)), true);
                        this.Manager.Checkpoint("MS-OXCTABL_R837");
                        this.Manager.Comment("reaching state \'S75\'");
                        this.Manager.Comment("checking step \'return RopQueryRows/success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp127, "return of RopQueryRows, state S75");
                        this.Manager.Comment("reaching state \'S91\'");
                        bool temp128;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(610,out _)\'");
                        this.IMS_OXCTABLAdapterInstance.CheckRequirementEnabled(610, out temp128);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp128);
                        this.Manager.Comment("reaching state \'S107\'");
                        int temp146 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteCheckRequirementEnabledChecker35)), new ExpectedReturn(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteCheckRequirementEnabledChecker38)));
                        if ((temp146 == 0)) {
                            this.Manager.Comment("reaching state \'S129\'");
                            if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopQueryRowsResponseInfo, null, new RopQueryRowsResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopQueryRowsResponseChecker12))) != -1)) {
                                this.Manager.Comment("reaching state \'S161\'");
                                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp129;
                                this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                                temp129 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                                this.Manager.Checkpoint("MS-OXCTABL_R582");
                                this.Manager.Checkpoint("MS-OXCTABL_R579");
                                this.Manager.Comment("reaching state \'S193\'");
                                this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp129, "return of RopGetCollapseState, state S193");
                                this.Manager.Comment("reaching state \'S225\'");
                                if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker46))) != -1)) {
                                    this.Manager.Comment("reaching state \'S257\'");
                                    bool temp130;
                                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(748,out _)\'");
                                    this.IMS_OXCTABLAdapterInstance.CheckRequirementEnabled(748, out temp130);
                                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp130);
                                    this.Manager.Comment("reaching state \'S289\'");
                                    int temp140 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteCheckRequirementEnabledChecker36)), new ExpectedReturn(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteCheckRequirementEnabledChecker37)));
                                    if ((temp140 == 0)) {
                                        this.Manager.Comment("reaching state \'S326\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp131;
                                        this.Manager.Comment("executing step \'call RopExpandRow(False,False,False)\'");
                                        temp131 = this.IMS_OXCTABLAdapterInstance.RopExpandRow(false, false, false);
                                        this.Manager.Checkpoint("MS-OXCTABL_R568");
                                        this.Manager.Checkpoint("MS-OXCTABL_R567");
                                        this.Manager.Comment("reaching state \'S374\'");
                                        this.Manager.Comment("checking step \'return RopExpandRow/success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp131, "return of RopExpandRow, state S374");
                                        this.Manager.Comment("reaching state \'S422\'");
                                        int temp135 = this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopExpandRowResponseInfo, null, new RopExpandRowResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopExpandRowResponseChecker15)), new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopExpandRowResponseInfo, null, new RopExpandRowResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopExpandRowResponseChecker16)));
                                        if ((temp135 == 0)) {
                                            S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteS470();
                                            goto label20;
                                        }
                                        if ((temp135 == 1)) {
                                            S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteS470();
                                            goto label20;
                                        }
                                        this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopExpandRowResponseInfo, null, new RopExpandRowResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopExpandRowResponseChecker15)), new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopExpandRowResponseInfo, null, new RopExpandRowResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopExpandRowResponseChecker16)));
                                    label20:
;
                                        goto label21;
                                    }
                                    if ((temp140 == 1)) {
                                        this.Manager.Comment("reaching state \'S327\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp136;
                                        this.Manager.Comment("executing step \'call RopExpandRow(False,False,False)\'");
                                        temp136 = this.IMS_OXCTABLAdapterInstance.RopExpandRow(false, false, false);
                                        this.Manager.Checkpoint("MS-OXCTABL_R568");
                                        this.Manager.Checkpoint("MS-OXCTABL_R567");
                                        this.Manager.Comment("reaching state \'S375\'");
                                        this.Manager.Comment("checking step \'return RopExpandRow/success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp136, "return of RopExpandRow, state S375");
                                        this.Manager.Comment("reaching state \'S423\'");
                                        if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopExpandRowResponseInfo, null, new RopExpandRowResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopExpandRowResponseChecker17))) != -1)) {
                                            this.Manager.Comment("reaching state \'S471\'");
                                            Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp137;
                                            this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                                            temp137 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                                            this.Manager.Checkpoint("MS-OXCTABL_R582");
                                            this.Manager.Checkpoint("MS-OXCTABL_R579");
                                            this.Manager.Comment("reaching state \'S519\'");
                                            this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp137, "return of RopGetCollapseState, state S519");
                                            this.Manager.Comment("reaching state \'S567\'");
                                            if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker49))) != -1)) {
                                                this.Manager.Comment("reaching state \'S615\'");
                                                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp138;
                                                this.Manager.Comment("executing step \'call RopSetCollapseState()\'");
                                                temp138 = this.IMS_OXCTABLAdapterInstance.RopSetCollapseState();
                                                this.Manager.Checkpoint("MS-OXCTABL_R588");
                                                this.Manager.Checkpoint("MS-OXCTABL_R585");
                                                this.Manager.Checkpoint("MS-OXCTABL_R289");
                                                this.Manager.Comment("reaching state \'S663\'");
                                                this.Manager.Comment("checking step \'return RopSetCollapseState/success\'");
                                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp138, "return of RopSetCollapseState, state S663");
                                                this.Manager.Comment("reaching state \'S711\'");
                                                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp139;
                                                this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                                                temp139 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                                                this.Manager.Checkpoint("MS-OXCTABL_R582");
                                                this.Manager.Checkpoint("MS-OXCTABL_R579");
                                                this.Manager.Comment("reaching state \'S752\'");
                                                this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp139, "return of RopGetCollapseState, state S752");
                                                this.Manager.Comment("reaching state \'S784\'");
                                                if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker50))) != -1)) {
                                                    this.Manager.Comment("reaching state \'S816\'");
                                                }
                                                else {
                                                    this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker50)));
                                                }
                                            }
                                            else {
                                                this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker49)));
                                            }
                                        }
                                        else {
                                            this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopExpandRowResponseInfo, null, new RopExpandRowResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopExpandRowResponseChecker17)));
                                        }
                                        goto label21;
                                    }
                                    throw new InvalidOperationException("never reached");
                                label21:
;
                                }
                                else {
                                    this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker46)));
                                }
                            }
                            else {
                                this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopQueryRowsResponseInfo, null, new RopQueryRowsResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopQueryRowsResponseChecker12)));
                            }
                            goto label22;
                        }
                        if ((temp146 == 1)) {
                            this.Manager.Comment("reaching state \'S130\'");
                            if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopQueryRowsResponseInfo, null, new RopQueryRowsResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopQueryRowsResponseChecker13))) != -1)) {
                                this.Manager.Comment("reaching state \'S162\'");
                                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp141;
                                this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                                temp141 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                                this.Manager.Checkpoint("MS-OXCTABL_R582");
                                this.Manager.Checkpoint("MS-OXCTABL_R579");
                                this.Manager.Comment("reaching state \'S194\'");
                                this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp141, "return of RopGetCollapseState, state S194");
                                this.Manager.Comment("reaching state \'S226\'");
                                if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker51))) != -1)) {
                                    this.Manager.Comment("reaching state \'S258\'");
                                    Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp142;
                                    this.Manager.Comment("executing step \'call RopCollapseRow(False,False)\'");
                                    temp142 = this.IMS_OXCTABLAdapterInstance.RopCollapseRow(false, false);
                                    this.Manager.Checkpoint("MS-OXCTABL_R574");
                                    this.Manager.Comment("reaching state \'S290\'");
                                    this.Manager.Comment("checking step \'return RopCollapseRow/success\'");
                                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp142, "return of RopCollapseRow, state S290");
                                    this.Manager.Comment("reaching state \'S328\'");
                                    Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp143;
                                    this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                                    temp143 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                                    this.Manager.Checkpoint("MS-OXCTABL_R582");
                                    this.Manager.Checkpoint("MS-OXCTABL_R579");
                                    this.Manager.Comment("reaching state \'S376\'");
                                    this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp143, "return of RopGetCollapseState, state S376");
                                    this.Manager.Comment("reaching state \'S424\'");
                                    if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker52))) != -1)) {
                                        this.Manager.Comment("reaching state \'S472\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp144;
                                        this.Manager.Comment("executing step \'call RopSetCollapseState()\'");
                                        temp144 = this.IMS_OXCTABLAdapterInstance.RopSetCollapseState();
                                        this.Manager.Checkpoint("MS-OXCTABL_R588");
                                        this.Manager.Checkpoint("MS-OXCTABL_R585");
                                        this.Manager.Checkpoint("MS-OXCTABL_R289");
                                        this.Manager.Comment("reaching state \'S520\'");
                                        this.Manager.Comment("checking step \'return RopSetCollapseState/success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp144, "return of RopSetCollapseState, state S520");
                                        this.Manager.Comment("reaching state \'S568\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp145;
                                        this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                                        temp145 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                                        this.Manager.Checkpoint("MS-OXCTABL_R582");
                                        this.Manager.Checkpoint("MS-OXCTABL_R579");
                                        this.Manager.Comment("reaching state \'S616\'");
                                        this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp145, "return of RopGetCollapseState, state S616");
                                        this.Manager.Comment("reaching state \'S664\'");
                                        if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker53))) != -1)) {
                                            this.Manager.Comment("reaching state \'S712\'");
                                        }
                                        else {
                                            this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker53)));
                                        }
                                    }
                                    else {
                                        this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker52)));
                                    }
                                }
                                else {
                                    this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker51)));
                                }
                            }
                            else {
                                this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopQueryRowsResponseInfo, null, new RopQueryRowsResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopQueryRowsResponseChecker13)));
                            }
                            goto label22;
                        }
                        throw new InvalidOperationException("never reached");
                    label22:
;
                        goto label24;
                    }
                    if ((temp160 == 1)) {
                        this.Manager.Comment("reaching state \'S60\'");
                        Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp147;
                        this.Manager.Comment("executing step \'call RopQueryRows(Advance,True)\'");
                        temp147 = this.IMS_OXCTABLAdapterInstance.RopQueryRows(((Microsoft.Protocols.TestSuites.Common.QueryRowsFlags)(0)), true);
                        this.Manager.Checkpoint("MS-OXCTABL_R837");
                        this.Manager.Comment("reaching state \'S76\'");
                        this.Manager.Comment("checking step \'return RopQueryRows/success\'");
                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp147, "return of RopQueryRows, state S76");
                        this.Manager.Comment("reaching state \'S92\'");
                        bool temp148;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(610,out _)\'");
                        this.IMS_OXCTABLAdapterInstance.CheckRequirementEnabled(610, out temp148);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp148);
                        this.Manager.Comment("reaching state \'S108\'");
                        int temp159 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteCheckRequirementEnabledChecker40)), new ExpectedReturn(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteCheckRequirementEnabledChecker41)));
                        if ((temp159 == 0)) {
                            this.Manager.Comment("reaching state \'S131\'");
                            if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopQueryRowsResponseInfo, null, new RopQueryRowsResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopQueryRowsResponseChecker14))) != -1)) {
                                this.Manager.Comment("reaching state \'S163\'");
                                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp149;
                                this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                                temp149 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                                this.Manager.Checkpoint("MS-OXCTABL_R582");
                                this.Manager.Checkpoint("MS-OXCTABL_R579");
                                this.Manager.Comment("reaching state \'S195\'");
                                this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp149, "return of RopGetCollapseState, state S195");
                                this.Manager.Comment("reaching state \'S227\'");
                                if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker54))) != -1)) {
                                    this.Manager.Comment("reaching state \'S259\'");
                                    Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp150;
                                    this.Manager.Comment("executing step \'call RopCollapseRow(False,False)\'");
                                    temp150 = this.IMS_OXCTABLAdapterInstance.RopCollapseRow(false, false);
                                    this.Manager.Checkpoint("MS-OXCTABL_R574");
                                    this.Manager.Comment("reaching state \'S291\'");
                                    this.Manager.Comment("checking step \'return RopCollapseRow/success\'");
                                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp150, "return of RopCollapseRow, state S291");
                                    this.Manager.Comment("reaching state \'S329\'");
                                    Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp151;
                                    this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                                    temp151 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                                    this.Manager.Checkpoint("MS-OXCTABL_R582");
                                    this.Manager.Checkpoint("MS-OXCTABL_R579");
                                    this.Manager.Comment("reaching state \'S377\'");
                                    this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp151, "return of RopGetCollapseState, state S377");
                                    this.Manager.Comment("reaching state \'S425\'");
                                    if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker55))) != -1)) {
                                        this.Manager.Comment("reaching state \'S473\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp152;
                                        this.Manager.Comment("executing step \'call RopSetCollapseState()\'");
                                        temp152 = this.IMS_OXCTABLAdapterInstance.RopSetCollapseState();
                                        this.Manager.Checkpoint("MS-OXCTABL_R588");
                                        this.Manager.Checkpoint("MS-OXCTABL_R585");
                                        this.Manager.Checkpoint("MS-OXCTABL_R289");
                                        this.Manager.Comment("reaching state \'S521\'");
                                        this.Manager.Comment("checking step \'return RopSetCollapseState/success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp152, "return of RopSetCollapseState, state S521");
                                        this.Manager.Comment("reaching state \'S569\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp153;
                                        this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                                        temp153 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                                        this.Manager.Checkpoint("MS-OXCTABL_R582");
                                        this.Manager.Checkpoint("MS-OXCTABL_R579");
                                        this.Manager.Comment("reaching state \'S617\'");
                                        this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp153, "return of RopGetCollapseState, state S617");
                                        this.Manager.Comment("reaching state \'S665\'");
                                        if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker56))) != -1)) {
                                            this.Manager.Comment("reaching state \'S713\'");
                                        }
                                        else {
                                            this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker56)));
                                        }
                                    }
                                    else {
                                        this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker55)));
                                    }
                                }
                                else {
                                    this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker54)));
                                }
                            }
                            else {
                                this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopQueryRowsResponseInfo, null, new RopQueryRowsResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopQueryRowsResponseChecker14)));
                            }
                            goto label23;
                        }
                        if ((temp159 == 1)) {
                            this.Manager.Comment("reaching state \'S132\'");
                            if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopQueryRowsResponseInfo, null, new RopQueryRowsResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopQueryRowsResponseChecker15))) != -1)) {
                                this.Manager.Comment("reaching state \'S164\'");
                                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp154;
                                this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                                temp154 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                                this.Manager.Checkpoint("MS-OXCTABL_R582");
                                this.Manager.Checkpoint("MS-OXCTABL_R579");
                                this.Manager.Comment("reaching state \'S196\'");
                                this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp154, "return of RopGetCollapseState, state S196");
                                this.Manager.Comment("reaching state \'S228\'");
                                if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker57))) != -1)) {
                                    this.Manager.Comment("reaching state \'S260\'");
                                    Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp155;
                                    this.Manager.Comment("executing step \'call RopCollapseRow(False,False)\'");
                                    temp155 = this.IMS_OXCTABLAdapterInstance.RopCollapseRow(false, false);
                                    this.Manager.Checkpoint("MS-OXCTABL_R574");
                                    this.Manager.Comment("reaching state \'S292\'");
                                    this.Manager.Comment("checking step \'return RopCollapseRow/success\'");
                                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp155, "return of RopCollapseRow, state S292");
                                    this.Manager.Comment("reaching state \'S330\'");
                                    Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp156;
                                    this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                                    temp156 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                                    this.Manager.Checkpoint("MS-OXCTABL_R582");
                                    this.Manager.Checkpoint("MS-OXCTABL_R579");
                                    this.Manager.Comment("reaching state \'S378\'");
                                    this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp156, "return of RopGetCollapseState, state S378");
                                    this.Manager.Comment("reaching state \'S426\'");
                                    if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker58))) != -1)) {
                                        this.Manager.Comment("reaching state \'S474\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp157;
                                        this.Manager.Comment("executing step \'call RopSetCollapseState()\'");
                                        temp157 = this.IMS_OXCTABLAdapterInstance.RopSetCollapseState();
                                        this.Manager.Checkpoint("MS-OXCTABL_R588");
                                        this.Manager.Checkpoint("MS-OXCTABL_R585");
                                        this.Manager.Checkpoint("MS-OXCTABL_R289");
                                        this.Manager.Comment("reaching state \'S522\'");
                                        this.Manager.Comment("checking step \'return RopSetCollapseState/success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp157, "return of RopSetCollapseState, state S522");
                                        this.Manager.Comment("reaching state \'S570\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp158;
                                        this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                                        temp158 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                                        this.Manager.Checkpoint("MS-OXCTABL_R582");
                                        this.Manager.Checkpoint("MS-OXCTABL_R579");
                                        this.Manager.Comment("reaching state \'S618\'");
                                        this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp158, "return of RopGetCollapseState, state S618");
                                        this.Manager.Comment("reaching state \'S666\'");
                                        if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker59))) != -1)) {
                                            this.Manager.Comment("reaching state \'S714\'");
                                        }
                                        else {
                                            this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker59)));
                                        }
                                    }
                                    else {
                                        this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker58)));
                                    }
                                }
                                else {
                                    this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker57)));
                                }
                            }
                            else {
                                this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopQueryRowsResponseInfo, null, new RopQueryRowsResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopQueryRowsResponseChecker15)));
                            }
                            goto label23;
                        }
                        throw new InvalidOperationException("never reached");
                    label23:
;
                        goto label24;
                    }
                    throw new InvalidOperationException("never reached");
                label24:
;
                    goto label25;
                }
                throw new InvalidOperationException("never reached");
            label25:
;
                goto label26;
            }
            throw new InvalidOperationException("never reached");
        label26:
;
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteCheckRequirementEnabledChecker(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S27");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteCheckRequirementEnabledChecker1(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S33");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteCheckRequirementEnabledChecker2(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S45");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteCheckRequirementEnabledChecker3(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S101");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopQueryRowsResponseChecker(Microsoft.Protocols.TestSuites.Common.QueryRowsFlags queryRowFlags, bool bForwardRead, bool bZeroRow, Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopType ropType, bool bIsCorrectRowCount, bool bCursorPositionChanged, bool bIsLatestRopData, bool bIsLastSuccessRopData, Microsoft.Protocols.TestSuites.MS_OXCTABL.BookmarkType queryRowOrigin, bool isRequestCountTooLarger) {
            this.Manager.Comment("checking step \'event RopQueryRowsResponse(Advance,True,False,SETCOLUMNS,True,True" +
                    ",True,True,BOOKMARK_CURRENT,False)\'");
            try {
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.Common.QueryRowsFlags>(this.Manager, ((Microsoft.Protocols.TestSuites.Common.QueryRowsFlags)(0)), queryRowFlags, "queryRowFlags of RopQueryRowsResponse, state S117");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bForwardRead, "bForwardRead of RopQueryRowsResponse, state S117");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, bZeroRow, "bZeroRow of RopQueryRowsResponse, state S117");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopType>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopType)(0)), ropType, "ropType of RopQueryRowsResponse, state S117");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bIsCorrectRowCount, "bIsCorrectRowCount of RopQueryRowsResponse, state S117");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bCursorPositionChanged, "bCursorPositionChanged of RopQueryRowsResponse, state S117");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bIsLatestRopData, "bIsLatestRopData of RopQueryRowsResponse, state S117");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bIsLastSuccessRopData, "bIsLastSuccessRopData of RopQueryRowsResponse, state S117");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.BookmarkType>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.BookmarkType)(1)), queryRowOrigin, "queryRowOrigin of RopQueryRowsResponse, state S117");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isRequestCountTooLarger, "isRequestCountTooLarger of RopQueryRowsResponse, state S117");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R468, MS-OXCTABL_R118, MS-OXCTABL_R462, M" +
                        "S-OXCTABL_R28, MS-OXCTABL_R726, MS-OXCTABL_R472, MS-OXCTABL_R427, MS-OXCTABL_R42" +
                        "6, MS-OXCTABL_R116, MS-OXCTABL_R610");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R468");
            this.Manager.Checkpoint("MS-OXCTABL_R118");
            this.Manager.Checkpoint("MS-OXCTABL_R462");
            this.Manager.Checkpoint("MS-OXCTABL_R28");
            this.Manager.Checkpoint("MS-OXCTABL_R726");
            this.Manager.Checkpoint("MS-OXCTABL_R472");
            this.Manager.Checkpoint("MS-OXCTABL_R427");
            this.Manager.Checkpoint("MS-OXCTABL_R426");
            this.Manager.Checkpoint("MS-OXCTABL_R116");
            this.Manager.Checkpoint("MS-OXCTABL_R610");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(False,False)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S213");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S213");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteCheckRequirementEnabledChecker4(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S277");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopExpandRowResponseChecker(bool isLastSetColumnData) {
            this.Manager.Comment("checking step \'event RopExpandRowResponse(True)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isLastSetColumnData, "isLastSetColumnData of RopExpandRowResponse, state S405");
        }
        
        private void S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteS453() {
            this.Manager.Comment("reaching state \'S453\'");
            Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp11;
            this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
            temp11 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
            this.Manager.Checkpoint("MS-OXCTABL_R582");
            this.Manager.Checkpoint("MS-OXCTABL_R579");
            this.Manager.Comment("reaching state \'S501\'");
            this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp11, "return of RopGetCollapseState, state S501");
            this.Manager.Comment("reaching state \'S549\'");
            if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker1))) != -1)) {
                this.Manager.Comment("reaching state \'S597\'");
                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp12;
                this.Manager.Comment("executing step \'call RopSetCollapseState()\'");
                temp12 = this.IMS_OXCTABLAdapterInstance.RopSetCollapseState();
                this.Manager.Checkpoint("MS-OXCTABL_R588");
                this.Manager.Checkpoint("MS-OXCTABL_R585");
                this.Manager.Checkpoint("MS-OXCTABL_R289");
                this.Manager.Comment("reaching state \'S645\'");
                this.Manager.Comment("checking step \'return RopSetCollapseState/success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp12, "return of RopSetCollapseState, state S645");
                this.Manager.Comment("reaching state \'S693\'");
                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp13;
                this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                temp13 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                this.Manager.Checkpoint("MS-OXCTABL_R582");
                this.Manager.Checkpoint("MS-OXCTABL_R579");
                this.Manager.Comment("reaching state \'S741\'");
                this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp13, "return of RopGetCollapseState, state S741");
                this.Manager.Comment("reaching state \'S773\'");
                if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker2))) != -1)) {
                    this.Manager.Comment("reaching state \'S805\'");
                }
                else {
                    this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker2)));
                }
            }
            else {
                this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker1)));
            }
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker1(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(False,False)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S549");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S549");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker2(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(True,True)\'");
            try {
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S773");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S773");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R304");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R304");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopExpandRowResponseChecker1(bool isLastSetColumnData) {
            this.Manager.Comment("checking step \'event RopExpandRowResponse(False)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isLastSetColumnData, "isLastSetColumnData of RopExpandRowResponse, state S405");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteCheckRequirementEnabledChecker5(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S277");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopExpandRowResponseChecker2(bool isLastSetColumnData) {
            this.Manager.Comment("checking step \'event RopExpandRowResponse(True)\'");
            try {
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isLastSetColumnData, "isLastSetColumnData of RopExpandRowResponse, state S406");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R814, MS-OXCTABL_R825");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R814");
            this.Manager.Checkpoint("MS-OXCTABL_R825");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker3(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(False,False)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S550");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S550");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker4(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(True,True)\'");
            try {
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S774");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S774");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R304");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R304");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteCheckRequirementEnabledChecker6(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S101");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopQueryRowsResponseChecker1(Microsoft.Protocols.TestSuites.Common.QueryRowsFlags queryRowFlags, bool bForwardRead, bool bZeroRow, Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopType ropType, bool bIsCorrectRowCount, bool bCursorPositionChanged, bool bIsLatestRopData, bool bIsLastSuccessRopData, Microsoft.Protocols.TestSuites.MS_OXCTABL.BookmarkType queryRowOrigin, bool isRequestCountTooLarger) {
            this.Manager.Comment("checking step \'event RopQueryRowsResponse(Advance,True,False,SETCOLUMNS,True,True" +
                    ",True,True,BOOKMARK_CURRENT,False)\'");
            try {
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.Common.QueryRowsFlags>(this.Manager, ((Microsoft.Protocols.TestSuites.Common.QueryRowsFlags)(0)), queryRowFlags, "queryRowFlags of RopQueryRowsResponse, state S118");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bForwardRead, "bForwardRead of RopQueryRowsResponse, state S118");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, bZeroRow, "bZeroRow of RopQueryRowsResponse, state S118");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopType>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopType)(0)), ropType, "ropType of RopQueryRowsResponse, state S118");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bIsCorrectRowCount, "bIsCorrectRowCount of RopQueryRowsResponse, state S118");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bCursorPositionChanged, "bCursorPositionChanged of RopQueryRowsResponse, state S118");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bIsLatestRopData, "bIsLatestRopData of RopQueryRowsResponse, state S118");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bIsLastSuccessRopData, "bIsLastSuccessRopData of RopQueryRowsResponse, state S118");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.BookmarkType>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.BookmarkType)(1)), queryRowOrigin, "queryRowOrigin of RopQueryRowsResponse, state S118");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isRequestCountTooLarger, "isRequestCountTooLarger of RopQueryRowsResponse, state S118");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R468, MS-OXCTABL_R118, MS-OXCTABL_R462, M" +
                        "S-OXCTABL_R28, MS-OXCTABL_R726, MS-OXCTABL_R472, MS-OXCTABL_R427, MS-OXCTABL_R42" +
                        "6, MS-OXCTABL_R116");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R468");
            this.Manager.Checkpoint("MS-OXCTABL_R118");
            this.Manager.Checkpoint("MS-OXCTABL_R462");
            this.Manager.Checkpoint("MS-OXCTABL_R28");
            this.Manager.Checkpoint("MS-OXCTABL_R726");
            this.Manager.Checkpoint("MS-OXCTABL_R472");
            this.Manager.Checkpoint("MS-OXCTABL_R427");
            this.Manager.Checkpoint("MS-OXCTABL_R426");
            this.Manager.Checkpoint("MS-OXCTABL_R116");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker5(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(False,False)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S214");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S214");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteCheckRequirementEnabledChecker7(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S278");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopExpandRowResponseChecker3(bool isLastSetColumnData) {
            this.Manager.Comment("checking step \'event RopExpandRowResponse(True)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isLastSetColumnData, "isLastSetColumnData of RopExpandRowResponse, state S407");
        }
        
        private void S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteS455() {
            this.Manager.Comment("reaching state \'S455\'");
            Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp23;
            this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
            temp23 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
            this.Manager.Checkpoint("MS-OXCTABL_R582");
            this.Manager.Checkpoint("MS-OXCTABL_R579");
            this.Manager.Comment("reaching state \'S503\'");
            this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp23, "return of RopGetCollapseState, state S503");
            this.Manager.Comment("reaching state \'S551\'");
            if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker6))) != -1)) {
                this.Manager.Comment("reaching state \'S599\'");
                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp24;
                this.Manager.Comment("executing step \'call RopSetCollapseState()\'");
                temp24 = this.IMS_OXCTABLAdapterInstance.RopSetCollapseState();
                this.Manager.Checkpoint("MS-OXCTABL_R588");
                this.Manager.Checkpoint("MS-OXCTABL_R585");
                this.Manager.Checkpoint("MS-OXCTABL_R289");
                this.Manager.Comment("reaching state \'S647\'");
                this.Manager.Comment("checking step \'return RopSetCollapseState/success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp24, "return of RopSetCollapseState, state S647");
                this.Manager.Comment("reaching state \'S695\'");
                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp25;
                this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                temp25 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                this.Manager.Checkpoint("MS-OXCTABL_R582");
                this.Manager.Checkpoint("MS-OXCTABL_R579");
                this.Manager.Comment("reaching state \'S743\'");
                this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp25, "return of RopGetCollapseState, state S743");
                this.Manager.Comment("reaching state \'S775\'");
                if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker7))) != -1)) {
                    this.Manager.Comment("reaching state \'S807\'");
                }
                else {
                    this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker7)));
                }
            }
            else {
                this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker6)));
            }
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker6(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(False,False)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S551");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S551");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker7(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(True,True)\'");
            try {
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S775");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S775");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R304");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R304");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopExpandRowResponseChecker4(bool isLastSetColumnData) {
            this.Manager.Comment("checking step \'event RopExpandRowResponse(False)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isLastSetColumnData, "isLastSetColumnData of RopExpandRowResponse, state S407");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteCheckRequirementEnabledChecker8(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S278");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopExpandRowResponseChecker5(bool isLastSetColumnData) {
            this.Manager.Comment("checking step \'event RopExpandRowResponse(True)\'");
            try {
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isLastSetColumnData, "isLastSetColumnData of RopExpandRowResponse, state S408");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R814, MS-OXCTABL_R825");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R814");
            this.Manager.Checkpoint("MS-OXCTABL_R825");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker8(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(False,False)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S552");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S552");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker9(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(True,True)\'");
            try {
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S776");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S776");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R304");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R304");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteCheckRequirementEnabledChecker9(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S45");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteCheckRequirementEnabledChecker10(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S102");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopQueryRowsResponseChecker2(Microsoft.Protocols.TestSuites.Common.QueryRowsFlags queryRowFlags, bool bForwardRead, bool bZeroRow, Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopType ropType, bool bIsCorrectRowCount, bool bCursorPositionChanged, bool bIsLatestRopData, bool bIsLastSuccessRopData, Microsoft.Protocols.TestSuites.MS_OXCTABL.BookmarkType queryRowOrigin, bool isRequestCountTooLarger) {
            this.Manager.Comment("checking step \'event RopQueryRowsResponse(Advance,True,False,SETCOLUMNS,True,True" +
                    ",True,True,BOOKMARK_CURRENT,False)\'");
            try {
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.Common.QueryRowsFlags>(this.Manager, ((Microsoft.Protocols.TestSuites.Common.QueryRowsFlags)(0)), queryRowFlags, "queryRowFlags of RopQueryRowsResponse, state S119");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bForwardRead, "bForwardRead of RopQueryRowsResponse, state S119");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, bZeroRow, "bZeroRow of RopQueryRowsResponse, state S119");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopType>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopType)(0)), ropType, "ropType of RopQueryRowsResponse, state S119");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bIsCorrectRowCount, "bIsCorrectRowCount of RopQueryRowsResponse, state S119");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bCursorPositionChanged, "bCursorPositionChanged of RopQueryRowsResponse, state S119");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bIsLatestRopData, "bIsLatestRopData of RopQueryRowsResponse, state S119");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bIsLastSuccessRopData, "bIsLastSuccessRopData of RopQueryRowsResponse, state S119");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.BookmarkType>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.BookmarkType)(1)), queryRowOrigin, "queryRowOrigin of RopQueryRowsResponse, state S119");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isRequestCountTooLarger, "isRequestCountTooLarger of RopQueryRowsResponse, state S119");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R468, MS-OXCTABL_R118, MS-OXCTABL_R462, M" +
                        "S-OXCTABL_R28, MS-OXCTABL_R726, MS-OXCTABL_R472, MS-OXCTABL_R427, MS-OXCTABL_R42" +
                        "6, MS-OXCTABL_R116, MS-OXCTABL_R610");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R468");
            this.Manager.Checkpoint("MS-OXCTABL_R118");
            this.Manager.Checkpoint("MS-OXCTABL_R462");
            this.Manager.Checkpoint("MS-OXCTABL_R28");
            this.Manager.Checkpoint("MS-OXCTABL_R726");
            this.Manager.Checkpoint("MS-OXCTABL_R472");
            this.Manager.Checkpoint("MS-OXCTABL_R427");
            this.Manager.Checkpoint("MS-OXCTABL_R426");
            this.Manager.Checkpoint("MS-OXCTABL_R116");
            this.Manager.Checkpoint("MS-OXCTABL_R610");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker10(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(False,False)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S215");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S215");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker11(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(False,False)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S409");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S409");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker12(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(True,True)\'");
            try {
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S649");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S649");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R304");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R304");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteCheckRequirementEnabledChecker11(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S102");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopQueryRowsResponseChecker3(Microsoft.Protocols.TestSuites.Common.QueryRowsFlags queryRowFlags, bool bForwardRead, bool bZeroRow, Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopType ropType, bool bIsCorrectRowCount, bool bCursorPositionChanged, bool bIsLatestRopData, bool bIsLastSuccessRopData, Microsoft.Protocols.TestSuites.MS_OXCTABL.BookmarkType queryRowOrigin, bool isRequestCountTooLarger) {
            this.Manager.Comment("checking step \'event RopQueryRowsResponse(Advance,True,False,SETCOLUMNS,True,True" +
                    ",True,True,BOOKMARK_CURRENT,False)\'");
            try {
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.Common.QueryRowsFlags>(this.Manager, ((Microsoft.Protocols.TestSuites.Common.QueryRowsFlags)(0)), queryRowFlags, "queryRowFlags of RopQueryRowsResponse, state S120");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bForwardRead, "bForwardRead of RopQueryRowsResponse, state S120");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, bZeroRow, "bZeroRow of RopQueryRowsResponse, state S120");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopType>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopType)(0)), ropType, "ropType of RopQueryRowsResponse, state S120");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bIsCorrectRowCount, "bIsCorrectRowCount of RopQueryRowsResponse, state S120");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bCursorPositionChanged, "bCursorPositionChanged of RopQueryRowsResponse, state S120");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bIsLatestRopData, "bIsLatestRopData of RopQueryRowsResponse, state S120");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bIsLastSuccessRopData, "bIsLastSuccessRopData of RopQueryRowsResponse, state S120");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.BookmarkType>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.BookmarkType)(1)), queryRowOrigin, "queryRowOrigin of RopQueryRowsResponse, state S120");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isRequestCountTooLarger, "isRequestCountTooLarger of RopQueryRowsResponse, state S120");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R468, MS-OXCTABL_R118, MS-OXCTABL_R462, M" +
                        "S-OXCTABL_R28, MS-OXCTABL_R726, MS-OXCTABL_R472, MS-OXCTABL_R427, MS-OXCTABL_R42" +
                        "6, MS-OXCTABL_R116");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R468");
            this.Manager.Checkpoint("MS-OXCTABL_R118");
            this.Manager.Checkpoint("MS-OXCTABL_R462");
            this.Manager.Checkpoint("MS-OXCTABL_R28");
            this.Manager.Checkpoint("MS-OXCTABL_R726");
            this.Manager.Checkpoint("MS-OXCTABL_R472");
            this.Manager.Checkpoint("MS-OXCTABL_R427");
            this.Manager.Checkpoint("MS-OXCTABL_R426");
            this.Manager.Checkpoint("MS-OXCTABL_R116");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker13(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(False,False)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S216");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S216");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker14(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(False,False)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S410");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S410");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker15(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(True,True)\'");
            try {
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S650");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S650");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R304");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R304");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteCheckRequirementEnabledChecker12(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S33");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteCheckRequirementEnabledChecker13(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S46");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteCheckRequirementEnabledChecker14(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S103");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopQueryRowsResponseChecker4(Microsoft.Protocols.TestSuites.Common.QueryRowsFlags queryRowFlags, bool bForwardRead, bool bZeroRow, Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopType ropType, bool bIsCorrectRowCount, bool bCursorPositionChanged, bool bIsLatestRopData, bool bIsLastSuccessRopData, Microsoft.Protocols.TestSuites.MS_OXCTABL.BookmarkType queryRowOrigin, bool isRequestCountTooLarger) {
            this.Manager.Comment("checking step \'event RopQueryRowsResponse(Advance,True,False,SETCOLUMNS,True,True" +
                    ",True,True,BOOKMARK_CURRENT,False)\'");
            try {
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.Common.QueryRowsFlags>(this.Manager, ((Microsoft.Protocols.TestSuites.Common.QueryRowsFlags)(0)), queryRowFlags, "queryRowFlags of RopQueryRowsResponse, state S121");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bForwardRead, "bForwardRead of RopQueryRowsResponse, state S121");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, bZeroRow, "bZeroRow of RopQueryRowsResponse, state S121");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopType>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopType)(0)), ropType, "ropType of RopQueryRowsResponse, state S121");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bIsCorrectRowCount, "bIsCorrectRowCount of RopQueryRowsResponse, state S121");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bCursorPositionChanged, "bCursorPositionChanged of RopQueryRowsResponse, state S121");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bIsLatestRopData, "bIsLatestRopData of RopQueryRowsResponse, state S121");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bIsLastSuccessRopData, "bIsLastSuccessRopData of RopQueryRowsResponse, state S121");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.BookmarkType>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.BookmarkType)(1)), queryRowOrigin, "queryRowOrigin of RopQueryRowsResponse, state S121");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isRequestCountTooLarger, "isRequestCountTooLarger of RopQueryRowsResponse, state S121");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R468, MS-OXCTABL_R118, MS-OXCTABL_R462, M" +
                        "S-OXCTABL_R28, MS-OXCTABL_R726, MS-OXCTABL_R472, MS-OXCTABL_R427, MS-OXCTABL_R42" +
                        "6, MS-OXCTABL_R116, MS-OXCTABL_R610");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R468");
            this.Manager.Checkpoint("MS-OXCTABL_R118");
            this.Manager.Checkpoint("MS-OXCTABL_R462");
            this.Manager.Checkpoint("MS-OXCTABL_R28");
            this.Manager.Checkpoint("MS-OXCTABL_R726");
            this.Manager.Checkpoint("MS-OXCTABL_R472");
            this.Manager.Checkpoint("MS-OXCTABL_R427");
            this.Manager.Checkpoint("MS-OXCTABL_R426");
            this.Manager.Checkpoint("MS-OXCTABL_R116");
            this.Manager.Checkpoint("MS-OXCTABL_R610");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker16(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(False,False)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S217");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S217");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker17(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(False,False)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S411");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S411");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker18(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(True,True)\'");
            try {
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S651");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S651");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R304");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R304");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteCheckRequirementEnabledChecker15(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S103");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopQueryRowsResponseChecker5(Microsoft.Protocols.TestSuites.Common.QueryRowsFlags queryRowFlags, bool bForwardRead, bool bZeroRow, Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopType ropType, bool bIsCorrectRowCount, bool bCursorPositionChanged, bool bIsLatestRopData, bool bIsLastSuccessRopData, Microsoft.Protocols.TestSuites.MS_OXCTABL.BookmarkType queryRowOrigin, bool isRequestCountTooLarger) {
            this.Manager.Comment("checking step \'event RopQueryRowsResponse(Advance,True,False,SETCOLUMNS,True,True" +
                    ",True,True,BOOKMARK_CURRENT,False)\'");
            try {
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.Common.QueryRowsFlags>(this.Manager, ((Microsoft.Protocols.TestSuites.Common.QueryRowsFlags)(0)), queryRowFlags, "queryRowFlags of RopQueryRowsResponse, state S122");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bForwardRead, "bForwardRead of RopQueryRowsResponse, state S122");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, bZeroRow, "bZeroRow of RopQueryRowsResponse, state S122");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopType>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopType)(0)), ropType, "ropType of RopQueryRowsResponse, state S122");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bIsCorrectRowCount, "bIsCorrectRowCount of RopQueryRowsResponse, state S122");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bCursorPositionChanged, "bCursorPositionChanged of RopQueryRowsResponse, state S122");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bIsLatestRopData, "bIsLatestRopData of RopQueryRowsResponse, state S122");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bIsLastSuccessRopData, "bIsLastSuccessRopData of RopQueryRowsResponse, state S122");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.BookmarkType>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.BookmarkType)(1)), queryRowOrigin, "queryRowOrigin of RopQueryRowsResponse, state S122");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isRequestCountTooLarger, "isRequestCountTooLarger of RopQueryRowsResponse, state S122");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R468, MS-OXCTABL_R118, MS-OXCTABL_R462, M" +
                        "S-OXCTABL_R28, MS-OXCTABL_R726, MS-OXCTABL_R472, MS-OXCTABL_R427, MS-OXCTABL_R42" +
                        "6, MS-OXCTABL_R116");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R468");
            this.Manager.Checkpoint("MS-OXCTABL_R118");
            this.Manager.Checkpoint("MS-OXCTABL_R462");
            this.Manager.Checkpoint("MS-OXCTABL_R28");
            this.Manager.Checkpoint("MS-OXCTABL_R726");
            this.Manager.Checkpoint("MS-OXCTABL_R472");
            this.Manager.Checkpoint("MS-OXCTABL_R427");
            this.Manager.Checkpoint("MS-OXCTABL_R426");
            this.Manager.Checkpoint("MS-OXCTABL_R116");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker19(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(False,False)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S218");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S218");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker20(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(False,False)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S412");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S412");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker21(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(True,True)\'");
            try {
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S652");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S652");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R304");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R304");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteCheckRequirementEnabledChecker16(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S46");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteCheckRequirementEnabledChecker17(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S104");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopQueryRowsResponseChecker6(Microsoft.Protocols.TestSuites.Common.QueryRowsFlags queryRowFlags, bool bForwardRead, bool bZeroRow, Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopType ropType, bool bIsCorrectRowCount, bool bCursorPositionChanged, bool bIsLatestRopData, bool bIsLastSuccessRopData, Microsoft.Protocols.TestSuites.MS_OXCTABL.BookmarkType queryRowOrigin, bool isRequestCountTooLarger) {
            this.Manager.Comment("checking step \'event RopQueryRowsResponse(Advance,True,False,SETCOLUMNS,True,True" +
                    ",True,True,BOOKMARK_CURRENT,False)\'");
            try {
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.Common.QueryRowsFlags>(this.Manager, ((Microsoft.Protocols.TestSuites.Common.QueryRowsFlags)(0)), queryRowFlags, "queryRowFlags of RopQueryRowsResponse, state S123");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bForwardRead, "bForwardRead of RopQueryRowsResponse, state S123");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, bZeroRow, "bZeroRow of RopQueryRowsResponse, state S123");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopType>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopType)(0)), ropType, "ropType of RopQueryRowsResponse, state S123");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bIsCorrectRowCount, "bIsCorrectRowCount of RopQueryRowsResponse, state S123");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bCursorPositionChanged, "bCursorPositionChanged of RopQueryRowsResponse, state S123");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bIsLatestRopData, "bIsLatestRopData of RopQueryRowsResponse, state S123");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bIsLastSuccessRopData, "bIsLastSuccessRopData of RopQueryRowsResponse, state S123");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.BookmarkType>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.BookmarkType)(1)), queryRowOrigin, "queryRowOrigin of RopQueryRowsResponse, state S123");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isRequestCountTooLarger, "isRequestCountTooLarger of RopQueryRowsResponse, state S123");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R468, MS-OXCTABL_R118, MS-OXCTABL_R462, M" +
                        "S-OXCTABL_R28, MS-OXCTABL_R726, MS-OXCTABL_R472, MS-OXCTABL_R427, MS-OXCTABL_R42" +
                        "6, MS-OXCTABL_R116, MS-OXCTABL_R610");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R468");
            this.Manager.Checkpoint("MS-OXCTABL_R118");
            this.Manager.Checkpoint("MS-OXCTABL_R462");
            this.Manager.Checkpoint("MS-OXCTABL_R28");
            this.Manager.Checkpoint("MS-OXCTABL_R726");
            this.Manager.Checkpoint("MS-OXCTABL_R472");
            this.Manager.Checkpoint("MS-OXCTABL_R427");
            this.Manager.Checkpoint("MS-OXCTABL_R426");
            this.Manager.Checkpoint("MS-OXCTABL_R116");
            this.Manager.Checkpoint("MS-OXCTABL_R610");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker22(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(False,False)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S219");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S219");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteCheckRequirementEnabledChecker18(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S283");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopExpandRowResponseChecker6(bool isLastSetColumnData) {
            this.Manager.Comment("checking step \'event RopExpandRowResponse(True)\'");
            try {
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isLastSetColumnData, "isLastSetColumnData of RopExpandRowResponse, state S413");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R814, MS-OXCTABL_R825");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R814");
            this.Manager.Checkpoint("MS-OXCTABL_R825");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker23(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(False,False)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S557");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S557");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker24(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(True,True)\'");
            try {
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S777");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S777");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R304");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R304");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteCheckRequirementEnabledChecker19(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S283");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopExpandRowResponseChecker7(bool isLastSetColumnData) {
            this.Manager.Comment("checking step \'event RopExpandRowResponse(True)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isLastSetColumnData, "isLastSetColumnData of RopExpandRowResponse, state S414");
        }
        
        private void S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteS462() {
            this.Manager.Comment("reaching state \'S462\'");
            Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp70;
            this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
            temp70 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
            this.Manager.Checkpoint("MS-OXCTABL_R582");
            this.Manager.Checkpoint("MS-OXCTABL_R579");
            this.Manager.Comment("reaching state \'S510\'");
            this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp70, "return of RopGetCollapseState, state S510");
            this.Manager.Comment("reaching state \'S558\'");
            if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker25))) != -1)) {
                this.Manager.Comment("reaching state \'S606\'");
                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp71;
                this.Manager.Comment("executing step \'call RopSetCollapseState()\'");
                temp71 = this.IMS_OXCTABLAdapterInstance.RopSetCollapseState();
                this.Manager.Checkpoint("MS-OXCTABL_R588");
                this.Manager.Checkpoint("MS-OXCTABL_R585");
                this.Manager.Checkpoint("MS-OXCTABL_R289");
                this.Manager.Comment("reaching state \'S654\'");
                this.Manager.Comment("checking step \'return RopSetCollapseState/success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp71, "return of RopSetCollapseState, state S654");
                this.Manager.Comment("reaching state \'S702\'");
                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp72;
                this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                temp72 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                this.Manager.Checkpoint("MS-OXCTABL_R582");
                this.Manager.Checkpoint("MS-OXCTABL_R579");
                this.Manager.Comment("reaching state \'S746\'");
                this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp72, "return of RopGetCollapseState, state S746");
                this.Manager.Comment("reaching state \'S778\'");
                if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker26))) != -1)) {
                    this.Manager.Comment("reaching state \'S810\'");
                }
                else {
                    this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker26)));
                }
            }
            else {
                this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker25)));
            }
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker25(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(False,False)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S558");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S558");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker26(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(True,True)\'");
            try {
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S778");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S778");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R304");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R304");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopExpandRowResponseChecker8(bool isLastSetColumnData) {
            this.Manager.Comment("checking step \'event RopExpandRowResponse(False)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isLastSetColumnData, "isLastSetColumnData of RopExpandRowResponse, state S414");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteCheckRequirementEnabledChecker20(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S104");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopQueryRowsResponseChecker7(Microsoft.Protocols.TestSuites.Common.QueryRowsFlags queryRowFlags, bool bForwardRead, bool bZeroRow, Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopType ropType, bool bIsCorrectRowCount, bool bCursorPositionChanged, bool bIsLatestRopData, bool bIsLastSuccessRopData, Microsoft.Protocols.TestSuites.MS_OXCTABL.BookmarkType queryRowOrigin, bool isRequestCountTooLarger) {
            this.Manager.Comment("checking step \'event RopQueryRowsResponse(Advance,True,False,SETCOLUMNS,True,True" +
                    ",True,True,BOOKMARK_CURRENT,False)\'");
            try {
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.Common.QueryRowsFlags>(this.Manager, ((Microsoft.Protocols.TestSuites.Common.QueryRowsFlags)(0)), queryRowFlags, "queryRowFlags of RopQueryRowsResponse, state S124");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bForwardRead, "bForwardRead of RopQueryRowsResponse, state S124");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, bZeroRow, "bZeroRow of RopQueryRowsResponse, state S124");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopType>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopType)(0)), ropType, "ropType of RopQueryRowsResponse, state S124");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bIsCorrectRowCount, "bIsCorrectRowCount of RopQueryRowsResponse, state S124");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bCursorPositionChanged, "bCursorPositionChanged of RopQueryRowsResponse, state S124");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bIsLatestRopData, "bIsLatestRopData of RopQueryRowsResponse, state S124");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bIsLastSuccessRopData, "bIsLastSuccessRopData of RopQueryRowsResponse, state S124");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.BookmarkType>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.BookmarkType)(1)), queryRowOrigin, "queryRowOrigin of RopQueryRowsResponse, state S124");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isRequestCountTooLarger, "isRequestCountTooLarger of RopQueryRowsResponse, state S124");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R468, MS-OXCTABL_R118, MS-OXCTABL_R462, M" +
                        "S-OXCTABL_R28, MS-OXCTABL_R726, MS-OXCTABL_R472, MS-OXCTABL_R427, MS-OXCTABL_R42" +
                        "6, MS-OXCTABL_R116");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R468");
            this.Manager.Checkpoint("MS-OXCTABL_R118");
            this.Manager.Checkpoint("MS-OXCTABL_R462");
            this.Manager.Checkpoint("MS-OXCTABL_R28");
            this.Manager.Checkpoint("MS-OXCTABL_R726");
            this.Manager.Checkpoint("MS-OXCTABL_R472");
            this.Manager.Checkpoint("MS-OXCTABL_R427");
            this.Manager.Checkpoint("MS-OXCTABL_R426");
            this.Manager.Checkpoint("MS-OXCTABL_R116");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker27(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(False,False)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S220");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S220");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker28(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(False,False)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S415");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S415");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker29(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(True,True)\'");
            try {
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S655");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S655");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R304");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R304");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteCheckRequirementEnabledChecker21(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S27");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteCheckRequirementEnabledChecker22(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S34");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteCheckRequirementEnabledChecker23(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S47");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteCheckRequirementEnabledChecker24(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S105");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopQueryRowsResponseChecker8(Microsoft.Protocols.TestSuites.Common.QueryRowsFlags queryRowFlags, bool bForwardRead, bool bZeroRow, Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopType ropType, bool bIsCorrectRowCount, bool bCursorPositionChanged, bool bIsLatestRopData, bool bIsLastSuccessRopData, Microsoft.Protocols.TestSuites.MS_OXCTABL.BookmarkType queryRowOrigin, bool isRequestCountTooLarger) {
            this.Manager.Comment("checking step \'event RopQueryRowsResponse(Advance,True,False,SETCOLUMNS,True,True" +
                    ",True,True,BOOKMARK_CURRENT,False)\'");
            try {
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.Common.QueryRowsFlags>(this.Manager, ((Microsoft.Protocols.TestSuites.Common.QueryRowsFlags)(0)), queryRowFlags, "queryRowFlags of RopQueryRowsResponse, state S125");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bForwardRead, "bForwardRead of RopQueryRowsResponse, state S125");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, bZeroRow, "bZeroRow of RopQueryRowsResponse, state S125");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopType>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopType)(0)), ropType, "ropType of RopQueryRowsResponse, state S125");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bIsCorrectRowCount, "bIsCorrectRowCount of RopQueryRowsResponse, state S125");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bCursorPositionChanged, "bCursorPositionChanged of RopQueryRowsResponse, state S125");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bIsLatestRopData, "bIsLatestRopData of RopQueryRowsResponse, state S125");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bIsLastSuccessRopData, "bIsLastSuccessRopData of RopQueryRowsResponse, state S125");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.BookmarkType>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.BookmarkType)(1)), queryRowOrigin, "queryRowOrigin of RopQueryRowsResponse, state S125");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isRequestCountTooLarger, "isRequestCountTooLarger of RopQueryRowsResponse, state S125");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R468, MS-OXCTABL_R118, MS-OXCTABL_R462, M" +
                        "S-OXCTABL_R28, MS-OXCTABL_R726, MS-OXCTABL_R472, MS-OXCTABL_R427, MS-OXCTABL_R42" +
                        "6, MS-OXCTABL_R116, MS-OXCTABL_R610");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R468");
            this.Manager.Checkpoint("MS-OXCTABL_R118");
            this.Manager.Checkpoint("MS-OXCTABL_R462");
            this.Manager.Checkpoint("MS-OXCTABL_R28");
            this.Manager.Checkpoint("MS-OXCTABL_R726");
            this.Manager.Checkpoint("MS-OXCTABL_R472");
            this.Manager.Checkpoint("MS-OXCTABL_R427");
            this.Manager.Checkpoint("MS-OXCTABL_R426");
            this.Manager.Checkpoint("MS-OXCTABL_R116");
            this.Manager.Checkpoint("MS-OXCTABL_R610");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker30(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(False,False)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S221");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S221");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteCheckRequirementEnabledChecker25(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S285");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopExpandRowResponseChecker9(bool isLastSetColumnData) {
            this.Manager.Comment("checking step \'event RopExpandRowResponse(True)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isLastSetColumnData, "isLastSetColumnData of RopExpandRowResponse, state S416");
        }
        
        private void S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteS464() {
            this.Manager.Comment("reaching state \'S464\'");
            Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp90;
            this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
            temp90 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
            this.Manager.Checkpoint("MS-OXCTABL_R582");
            this.Manager.Checkpoint("MS-OXCTABL_R579");
            this.Manager.Comment("reaching state \'S512\'");
            this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp90, "return of RopGetCollapseState, state S512");
            this.Manager.Comment("reaching state \'S560\'");
            if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker31))) != -1)) {
                this.Manager.Comment("reaching state \'S608\'");
                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp91;
                this.Manager.Comment("executing step \'call RopSetCollapseState()\'");
                temp91 = this.IMS_OXCTABLAdapterInstance.RopSetCollapseState();
                this.Manager.Checkpoint("MS-OXCTABL_R588");
                this.Manager.Checkpoint("MS-OXCTABL_R585");
                this.Manager.Checkpoint("MS-OXCTABL_R289");
                this.Manager.Comment("reaching state \'S656\'");
                this.Manager.Comment("checking step \'return RopSetCollapseState/success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp91, "return of RopSetCollapseState, state S656");
                this.Manager.Comment("reaching state \'S704\'");
                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp92;
                this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                temp92 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                this.Manager.Checkpoint("MS-OXCTABL_R582");
                this.Manager.Checkpoint("MS-OXCTABL_R579");
                this.Manager.Comment("reaching state \'S747\'");
                this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp92, "return of RopGetCollapseState, state S747");
                this.Manager.Comment("reaching state \'S779\'");
                if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker32))) != -1)) {
                    this.Manager.Comment("reaching state \'S811\'");
                }
                else {
                    this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker32)));
                }
            }
            else {
                this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker31)));
            }
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker31(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(False,False)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S560");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S560");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker32(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(True,True)\'");
            try {
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S779");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S779");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R304");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R304");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopExpandRowResponseChecker10(bool isLastSetColumnData) {
            this.Manager.Comment("checking step \'event RopExpandRowResponse(False)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isLastSetColumnData, "isLastSetColumnData of RopExpandRowResponse, state S416");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteCheckRequirementEnabledChecker26(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S285");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopExpandRowResponseChecker11(bool isLastSetColumnData) {
            this.Manager.Comment("checking step \'event RopExpandRowResponse(True)\'");
            try {
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isLastSetColumnData, "isLastSetColumnData of RopExpandRowResponse, state S417");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R814, MS-OXCTABL_R825");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R814");
            this.Manager.Checkpoint("MS-OXCTABL_R825");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker33(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(False,False)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S561");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S561");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker34(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(True,True)\'");
            try {
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S780");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S780");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R304");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R304");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteCheckRequirementEnabledChecker27(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S105");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopQueryRowsResponseChecker9(Microsoft.Protocols.TestSuites.Common.QueryRowsFlags queryRowFlags, bool bForwardRead, bool bZeroRow, Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopType ropType, bool bIsCorrectRowCount, bool bCursorPositionChanged, bool bIsLatestRopData, bool bIsLastSuccessRopData, Microsoft.Protocols.TestSuites.MS_OXCTABL.BookmarkType queryRowOrigin, bool isRequestCountTooLarger) {
            this.Manager.Comment("checking step \'event RopQueryRowsResponse(Advance,True,False,SETCOLUMNS,True,True" +
                    ",True,True,BOOKMARK_CURRENT,False)\'");
            try {
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.Common.QueryRowsFlags>(this.Manager, ((Microsoft.Protocols.TestSuites.Common.QueryRowsFlags)(0)), queryRowFlags, "queryRowFlags of RopQueryRowsResponse, state S126");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bForwardRead, "bForwardRead of RopQueryRowsResponse, state S126");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, bZeroRow, "bZeroRow of RopQueryRowsResponse, state S126");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopType>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopType)(0)), ropType, "ropType of RopQueryRowsResponse, state S126");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bIsCorrectRowCount, "bIsCorrectRowCount of RopQueryRowsResponse, state S126");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bCursorPositionChanged, "bCursorPositionChanged of RopQueryRowsResponse, state S126");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bIsLatestRopData, "bIsLatestRopData of RopQueryRowsResponse, state S126");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bIsLastSuccessRopData, "bIsLastSuccessRopData of RopQueryRowsResponse, state S126");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.BookmarkType>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.BookmarkType)(1)), queryRowOrigin, "queryRowOrigin of RopQueryRowsResponse, state S126");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isRequestCountTooLarger, "isRequestCountTooLarger of RopQueryRowsResponse, state S126");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R468, MS-OXCTABL_R118, MS-OXCTABL_R462, M" +
                        "S-OXCTABL_R28, MS-OXCTABL_R726, MS-OXCTABL_R472, MS-OXCTABL_R427, MS-OXCTABL_R42" +
                        "6, MS-OXCTABL_R116");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R468");
            this.Manager.Checkpoint("MS-OXCTABL_R118");
            this.Manager.Checkpoint("MS-OXCTABL_R462");
            this.Manager.Checkpoint("MS-OXCTABL_R28");
            this.Manager.Checkpoint("MS-OXCTABL_R726");
            this.Manager.Checkpoint("MS-OXCTABL_R472");
            this.Manager.Checkpoint("MS-OXCTABL_R427");
            this.Manager.Checkpoint("MS-OXCTABL_R426");
            this.Manager.Checkpoint("MS-OXCTABL_R116");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker35(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(False,False)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S222");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S222");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker36(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(False,False)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S418");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S418");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker37(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(True,True)\'");
            try {
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S658");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S658");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R304");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R304");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteCheckRequirementEnabledChecker28(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S47");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteCheckRequirementEnabledChecker29(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S106");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopQueryRowsResponseChecker10(Microsoft.Protocols.TestSuites.Common.QueryRowsFlags queryRowFlags, bool bForwardRead, bool bZeroRow, Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopType ropType, bool bIsCorrectRowCount, bool bCursorPositionChanged, bool bIsLatestRopData, bool bIsLastSuccessRopData, Microsoft.Protocols.TestSuites.MS_OXCTABL.BookmarkType queryRowOrigin, bool isRequestCountTooLarger) {
            this.Manager.Comment("checking step \'event RopQueryRowsResponse(Advance,True,False,SETCOLUMNS,True,True" +
                    ",True,True,BOOKMARK_CURRENT,False)\'");
            try {
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.Common.QueryRowsFlags>(this.Manager, ((Microsoft.Protocols.TestSuites.Common.QueryRowsFlags)(0)), queryRowFlags, "queryRowFlags of RopQueryRowsResponse, state S127");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bForwardRead, "bForwardRead of RopQueryRowsResponse, state S127");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, bZeroRow, "bZeroRow of RopQueryRowsResponse, state S127");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopType>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopType)(0)), ropType, "ropType of RopQueryRowsResponse, state S127");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bIsCorrectRowCount, "bIsCorrectRowCount of RopQueryRowsResponse, state S127");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bCursorPositionChanged, "bCursorPositionChanged of RopQueryRowsResponse, state S127");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bIsLatestRopData, "bIsLatestRopData of RopQueryRowsResponse, state S127");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bIsLastSuccessRopData, "bIsLastSuccessRopData of RopQueryRowsResponse, state S127");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.BookmarkType>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.BookmarkType)(1)), queryRowOrigin, "queryRowOrigin of RopQueryRowsResponse, state S127");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isRequestCountTooLarger, "isRequestCountTooLarger of RopQueryRowsResponse, state S127");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R468, MS-OXCTABL_R118, MS-OXCTABL_R462, M" +
                        "S-OXCTABL_R28, MS-OXCTABL_R726, MS-OXCTABL_R472, MS-OXCTABL_R427, MS-OXCTABL_R42" +
                        "6, MS-OXCTABL_R116");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R468");
            this.Manager.Checkpoint("MS-OXCTABL_R118");
            this.Manager.Checkpoint("MS-OXCTABL_R462");
            this.Manager.Checkpoint("MS-OXCTABL_R28");
            this.Manager.Checkpoint("MS-OXCTABL_R726");
            this.Manager.Checkpoint("MS-OXCTABL_R472");
            this.Manager.Checkpoint("MS-OXCTABL_R427");
            this.Manager.Checkpoint("MS-OXCTABL_R426");
            this.Manager.Checkpoint("MS-OXCTABL_R116");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker38(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(False,False)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S223");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S223");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteCheckRequirementEnabledChecker30(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S287");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopExpandRowResponseChecker12(bool isLastSetColumnData) {
            this.Manager.Comment("checking step \'event RopExpandRowResponse(True)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isLastSetColumnData, "isLastSetColumnData of RopExpandRowResponse, state S419");
        }
        
        private void S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteS467() {
            this.Manager.Comment("reaching state \'S467\'");
            Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp110;
            this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
            temp110 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
            this.Manager.Checkpoint("MS-OXCTABL_R582");
            this.Manager.Checkpoint("MS-OXCTABL_R579");
            this.Manager.Comment("reaching state \'S515\'");
            this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp110, "return of RopGetCollapseState, state S515");
            this.Manager.Comment("reaching state \'S563\'");
            if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker39))) != -1)) {
                this.Manager.Comment("reaching state \'S611\'");
                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp111;
                this.Manager.Comment("executing step \'call RopSetCollapseState()\'");
                temp111 = this.IMS_OXCTABLAdapterInstance.RopSetCollapseState();
                this.Manager.Checkpoint("MS-OXCTABL_R588");
                this.Manager.Checkpoint("MS-OXCTABL_R585");
                this.Manager.Checkpoint("MS-OXCTABL_R289");
                this.Manager.Comment("reaching state \'S659\'");
                this.Manager.Comment("checking step \'return RopSetCollapseState/success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp111, "return of RopSetCollapseState, state S659");
                this.Manager.Comment("reaching state \'S707\'");
                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp112;
                this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                temp112 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                this.Manager.Checkpoint("MS-OXCTABL_R582");
                this.Manager.Checkpoint("MS-OXCTABL_R579");
                this.Manager.Comment("reaching state \'S749\'");
                this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp112, "return of RopGetCollapseState, state S749");
                this.Manager.Comment("reaching state \'S781\'");
                if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker40))) != -1)) {
                    this.Manager.Comment("reaching state \'S813\'");
                }
                else {
                    this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker40)));
                }
            }
            else {
                this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker39)));
            }
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker39(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(False,False)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S563");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S563");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker40(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(True,True)\'");
            try {
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S781");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S781");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R304");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R304");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopExpandRowResponseChecker13(bool isLastSetColumnData) {
            this.Manager.Comment("checking step \'event RopExpandRowResponse(False)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isLastSetColumnData, "isLastSetColumnData of RopExpandRowResponse, state S419");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteCheckRequirementEnabledChecker31(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S287");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopExpandRowResponseChecker14(bool isLastSetColumnData) {
            this.Manager.Comment("checking step \'event RopExpandRowResponse(True)\'");
            try {
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isLastSetColumnData, "isLastSetColumnData of RopExpandRowResponse, state S420");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R814, MS-OXCTABL_R825");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R814");
            this.Manager.Checkpoint("MS-OXCTABL_R825");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker41(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(False,False)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S564");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S564");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker42(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(True,True)\'");
            try {
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S782");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S782");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R304");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R304");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteCheckRequirementEnabledChecker32(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S106");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopQueryRowsResponseChecker11(Microsoft.Protocols.TestSuites.Common.QueryRowsFlags queryRowFlags, bool bForwardRead, bool bZeroRow, Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopType ropType, bool bIsCorrectRowCount, bool bCursorPositionChanged, bool bIsLatestRopData, bool bIsLastSuccessRopData, Microsoft.Protocols.TestSuites.MS_OXCTABL.BookmarkType queryRowOrigin, bool isRequestCountTooLarger) {
            this.Manager.Comment("checking step \'event RopQueryRowsResponse(Advance,True,False,SETCOLUMNS,True,True" +
                    ",True,True,BOOKMARK_CURRENT,False)\'");
            try {
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.Common.QueryRowsFlags>(this.Manager, ((Microsoft.Protocols.TestSuites.Common.QueryRowsFlags)(0)), queryRowFlags, "queryRowFlags of RopQueryRowsResponse, state S128");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bForwardRead, "bForwardRead of RopQueryRowsResponse, state S128");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, bZeroRow, "bZeroRow of RopQueryRowsResponse, state S128");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopType>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopType)(0)), ropType, "ropType of RopQueryRowsResponse, state S128");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bIsCorrectRowCount, "bIsCorrectRowCount of RopQueryRowsResponse, state S128");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bCursorPositionChanged, "bCursorPositionChanged of RopQueryRowsResponse, state S128");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bIsLatestRopData, "bIsLatestRopData of RopQueryRowsResponse, state S128");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bIsLastSuccessRopData, "bIsLastSuccessRopData of RopQueryRowsResponse, state S128");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.BookmarkType>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.BookmarkType)(1)), queryRowOrigin, "queryRowOrigin of RopQueryRowsResponse, state S128");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isRequestCountTooLarger, "isRequestCountTooLarger of RopQueryRowsResponse, state S128");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R468, MS-OXCTABL_R118, MS-OXCTABL_R462, M" +
                        "S-OXCTABL_R28, MS-OXCTABL_R726, MS-OXCTABL_R472, MS-OXCTABL_R427, MS-OXCTABL_R42" +
                        "6, MS-OXCTABL_R116, MS-OXCTABL_R610");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R468");
            this.Manager.Checkpoint("MS-OXCTABL_R118");
            this.Manager.Checkpoint("MS-OXCTABL_R462");
            this.Manager.Checkpoint("MS-OXCTABL_R28");
            this.Manager.Checkpoint("MS-OXCTABL_R726");
            this.Manager.Checkpoint("MS-OXCTABL_R472");
            this.Manager.Checkpoint("MS-OXCTABL_R427");
            this.Manager.Checkpoint("MS-OXCTABL_R426");
            this.Manager.Checkpoint("MS-OXCTABL_R116");
            this.Manager.Checkpoint("MS-OXCTABL_R610");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker43(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(False,False)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S224");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S224");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker44(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(False,False)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S421");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S421");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker45(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(True,True)\'");
            try {
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S661");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S661");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R304");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R304");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteCheckRequirementEnabledChecker33(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S34");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteCheckRequirementEnabledChecker34(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S48");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteCheckRequirementEnabledChecker35(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S107");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopQueryRowsResponseChecker12(Microsoft.Protocols.TestSuites.Common.QueryRowsFlags queryRowFlags, bool bForwardRead, bool bZeroRow, Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopType ropType, bool bIsCorrectRowCount, bool bCursorPositionChanged, bool bIsLatestRopData, bool bIsLastSuccessRopData, Microsoft.Protocols.TestSuites.MS_OXCTABL.BookmarkType queryRowOrigin, bool isRequestCountTooLarger) {
            this.Manager.Comment("checking step \'event RopQueryRowsResponse(Advance,True,False,SETCOLUMNS,True,True" +
                    ",True,True,BOOKMARK_CURRENT,False)\'");
            try {
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.Common.QueryRowsFlags>(this.Manager, ((Microsoft.Protocols.TestSuites.Common.QueryRowsFlags)(0)), queryRowFlags, "queryRowFlags of RopQueryRowsResponse, state S129");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bForwardRead, "bForwardRead of RopQueryRowsResponse, state S129");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, bZeroRow, "bZeroRow of RopQueryRowsResponse, state S129");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopType>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopType)(0)), ropType, "ropType of RopQueryRowsResponse, state S129");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bIsCorrectRowCount, "bIsCorrectRowCount of RopQueryRowsResponse, state S129");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bCursorPositionChanged, "bCursorPositionChanged of RopQueryRowsResponse, state S129");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bIsLatestRopData, "bIsLatestRopData of RopQueryRowsResponse, state S129");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bIsLastSuccessRopData, "bIsLastSuccessRopData of RopQueryRowsResponse, state S129");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.BookmarkType>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.BookmarkType)(1)), queryRowOrigin, "queryRowOrigin of RopQueryRowsResponse, state S129");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isRequestCountTooLarger, "isRequestCountTooLarger of RopQueryRowsResponse, state S129");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R468, MS-OXCTABL_R118, MS-OXCTABL_R462, M" +
                        "S-OXCTABL_R28, MS-OXCTABL_R726, MS-OXCTABL_R472, MS-OXCTABL_R427, MS-OXCTABL_R42" +
                        "6, MS-OXCTABL_R116, MS-OXCTABL_R610");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R468");
            this.Manager.Checkpoint("MS-OXCTABL_R118");
            this.Manager.Checkpoint("MS-OXCTABL_R462");
            this.Manager.Checkpoint("MS-OXCTABL_R28");
            this.Manager.Checkpoint("MS-OXCTABL_R726");
            this.Manager.Checkpoint("MS-OXCTABL_R472");
            this.Manager.Checkpoint("MS-OXCTABL_R427");
            this.Manager.Checkpoint("MS-OXCTABL_R426");
            this.Manager.Checkpoint("MS-OXCTABL_R116");
            this.Manager.Checkpoint("MS-OXCTABL_R610");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker46(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(False,False)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S225");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S225");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteCheckRequirementEnabledChecker36(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S289");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopExpandRowResponseChecker15(bool isLastSetColumnData) {
            this.Manager.Comment("checking step \'event RopExpandRowResponse(True)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isLastSetColumnData, "isLastSetColumnData of RopExpandRowResponse, state S422");
        }
        
        private void S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteS470() {
            this.Manager.Comment("reaching state \'S470\'");
            Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp132;
            this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
            temp132 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
            this.Manager.Checkpoint("MS-OXCTABL_R582");
            this.Manager.Checkpoint("MS-OXCTABL_R579");
            this.Manager.Comment("reaching state \'S518\'");
            this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp132, "return of RopGetCollapseState, state S518");
            this.Manager.Comment("reaching state \'S566\'");
            if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker47))) != -1)) {
                this.Manager.Comment("reaching state \'S614\'");
                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp133;
                this.Manager.Comment("executing step \'call RopSetCollapseState()\'");
                temp133 = this.IMS_OXCTABLAdapterInstance.RopSetCollapseState();
                this.Manager.Checkpoint("MS-OXCTABL_R588");
                this.Manager.Checkpoint("MS-OXCTABL_R585");
                this.Manager.Checkpoint("MS-OXCTABL_R289");
                this.Manager.Comment("reaching state \'S662\'");
                this.Manager.Comment("checking step \'return RopSetCollapseState/success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp133, "return of RopSetCollapseState, state S662");
                this.Manager.Comment("reaching state \'S710\'");
                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp134;
                this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                temp134 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                this.Manager.Checkpoint("MS-OXCTABL_R582");
                this.Manager.Checkpoint("MS-OXCTABL_R579");
                this.Manager.Comment("reaching state \'S751\'");
                this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp134, "return of RopGetCollapseState, state S751");
                this.Manager.Comment("reaching state \'S783\'");
                if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker48))) != -1)) {
                    this.Manager.Comment("reaching state \'S815\'");
                }
                else {
                    this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker48)));
                }
            }
            else {
                this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker47)));
            }
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker47(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(False,False)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S566");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S566");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker48(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(True,True)\'");
            try {
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S783");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S783");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R304");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R304");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopExpandRowResponseChecker16(bool isLastSetColumnData) {
            this.Manager.Comment("checking step \'event RopExpandRowResponse(False)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isLastSetColumnData, "isLastSetColumnData of RopExpandRowResponse, state S422");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteCheckRequirementEnabledChecker37(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S289");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopExpandRowResponseChecker17(bool isLastSetColumnData) {
            this.Manager.Comment("checking step \'event RopExpandRowResponse(True)\'");
            try {
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isLastSetColumnData, "isLastSetColumnData of RopExpandRowResponse, state S423");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R814, MS-OXCTABL_R825");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R814");
            this.Manager.Checkpoint("MS-OXCTABL_R825");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker49(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(False,False)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S567");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S567");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker50(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(True,True)\'");
            try {
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S784");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S784");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R304");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R304");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteCheckRequirementEnabledChecker38(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S107");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopQueryRowsResponseChecker13(Microsoft.Protocols.TestSuites.Common.QueryRowsFlags queryRowFlags, bool bForwardRead, bool bZeroRow, Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopType ropType, bool bIsCorrectRowCount, bool bCursorPositionChanged, bool bIsLatestRopData, bool bIsLastSuccessRopData, Microsoft.Protocols.TestSuites.MS_OXCTABL.BookmarkType queryRowOrigin, bool isRequestCountTooLarger) {
            this.Manager.Comment("checking step \'event RopQueryRowsResponse(Advance,True,False,SETCOLUMNS,True,True" +
                    ",True,True,BOOKMARK_CURRENT,False)\'");
            try {
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.Common.QueryRowsFlags>(this.Manager, ((Microsoft.Protocols.TestSuites.Common.QueryRowsFlags)(0)), queryRowFlags, "queryRowFlags of RopQueryRowsResponse, state S130");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bForwardRead, "bForwardRead of RopQueryRowsResponse, state S130");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, bZeroRow, "bZeroRow of RopQueryRowsResponse, state S130");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopType>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopType)(0)), ropType, "ropType of RopQueryRowsResponse, state S130");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bIsCorrectRowCount, "bIsCorrectRowCount of RopQueryRowsResponse, state S130");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bCursorPositionChanged, "bCursorPositionChanged of RopQueryRowsResponse, state S130");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bIsLatestRopData, "bIsLatestRopData of RopQueryRowsResponse, state S130");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bIsLastSuccessRopData, "bIsLastSuccessRopData of RopQueryRowsResponse, state S130");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.BookmarkType>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.BookmarkType)(1)), queryRowOrigin, "queryRowOrigin of RopQueryRowsResponse, state S130");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isRequestCountTooLarger, "isRequestCountTooLarger of RopQueryRowsResponse, state S130");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R468, MS-OXCTABL_R118, MS-OXCTABL_R462, M" +
                        "S-OXCTABL_R28, MS-OXCTABL_R726, MS-OXCTABL_R472, MS-OXCTABL_R427, MS-OXCTABL_R42" +
                        "6, MS-OXCTABL_R116");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R468");
            this.Manager.Checkpoint("MS-OXCTABL_R118");
            this.Manager.Checkpoint("MS-OXCTABL_R462");
            this.Manager.Checkpoint("MS-OXCTABL_R28");
            this.Manager.Checkpoint("MS-OXCTABL_R726");
            this.Manager.Checkpoint("MS-OXCTABL_R472");
            this.Manager.Checkpoint("MS-OXCTABL_R427");
            this.Manager.Checkpoint("MS-OXCTABL_R426");
            this.Manager.Checkpoint("MS-OXCTABL_R116");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker51(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(False,False)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S226");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S226");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker52(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(False,False)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S424");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S424");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker53(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(True,True)\'");
            try {
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S664");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S664");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R304");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R304");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteCheckRequirementEnabledChecker39(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S48");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteCheckRequirementEnabledChecker40(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S108");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopQueryRowsResponseChecker14(Microsoft.Protocols.TestSuites.Common.QueryRowsFlags queryRowFlags, bool bForwardRead, bool bZeroRow, Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopType ropType, bool bIsCorrectRowCount, bool bCursorPositionChanged, bool bIsLatestRopData, bool bIsLastSuccessRopData, Microsoft.Protocols.TestSuites.MS_OXCTABL.BookmarkType queryRowOrigin, bool isRequestCountTooLarger) {
            this.Manager.Comment("checking step \'event RopQueryRowsResponse(Advance,True,False,SETCOLUMNS,True,True" +
                    ",True,True,BOOKMARK_CURRENT,False)\'");
            try {
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.Common.QueryRowsFlags>(this.Manager, ((Microsoft.Protocols.TestSuites.Common.QueryRowsFlags)(0)), queryRowFlags, "queryRowFlags of RopQueryRowsResponse, state S131");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bForwardRead, "bForwardRead of RopQueryRowsResponse, state S131");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, bZeroRow, "bZeroRow of RopQueryRowsResponse, state S131");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopType>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopType)(0)), ropType, "ropType of RopQueryRowsResponse, state S131");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bIsCorrectRowCount, "bIsCorrectRowCount of RopQueryRowsResponse, state S131");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bCursorPositionChanged, "bCursorPositionChanged of RopQueryRowsResponse, state S131");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bIsLatestRopData, "bIsLatestRopData of RopQueryRowsResponse, state S131");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bIsLastSuccessRopData, "bIsLastSuccessRopData of RopQueryRowsResponse, state S131");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.BookmarkType>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.BookmarkType)(1)), queryRowOrigin, "queryRowOrigin of RopQueryRowsResponse, state S131");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isRequestCountTooLarger, "isRequestCountTooLarger of RopQueryRowsResponse, state S131");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R468, MS-OXCTABL_R118, MS-OXCTABL_R462, M" +
                        "S-OXCTABL_R28, MS-OXCTABL_R726, MS-OXCTABL_R472, MS-OXCTABL_R427, MS-OXCTABL_R42" +
                        "6, MS-OXCTABL_R116, MS-OXCTABL_R610");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R468");
            this.Manager.Checkpoint("MS-OXCTABL_R118");
            this.Manager.Checkpoint("MS-OXCTABL_R462");
            this.Manager.Checkpoint("MS-OXCTABL_R28");
            this.Manager.Checkpoint("MS-OXCTABL_R726");
            this.Manager.Checkpoint("MS-OXCTABL_R472");
            this.Manager.Checkpoint("MS-OXCTABL_R427");
            this.Manager.Checkpoint("MS-OXCTABL_R426");
            this.Manager.Checkpoint("MS-OXCTABL_R116");
            this.Manager.Checkpoint("MS-OXCTABL_R610");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker54(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(False,False)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S227");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S227");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker55(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(False,False)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S425");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S425");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker56(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(True,True)\'");
            try {
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S665");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S665");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R304");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R304");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteCheckRequirementEnabledChecker41(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S108");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopQueryRowsResponseChecker15(Microsoft.Protocols.TestSuites.Common.QueryRowsFlags queryRowFlags, bool bForwardRead, bool bZeroRow, Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopType ropType, bool bIsCorrectRowCount, bool bCursorPositionChanged, bool bIsLatestRopData, bool bIsLastSuccessRopData, Microsoft.Protocols.TestSuites.MS_OXCTABL.BookmarkType queryRowOrigin, bool isRequestCountTooLarger) {
            this.Manager.Comment("checking step \'event RopQueryRowsResponse(Advance,True,False,SETCOLUMNS,True,True" +
                    ",True,True,BOOKMARK_CURRENT,False)\'");
            try {
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.Common.QueryRowsFlags>(this.Manager, ((Microsoft.Protocols.TestSuites.Common.QueryRowsFlags)(0)), queryRowFlags, "queryRowFlags of RopQueryRowsResponse, state S132");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bForwardRead, "bForwardRead of RopQueryRowsResponse, state S132");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, bZeroRow, "bZeroRow of RopQueryRowsResponse, state S132");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopType>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopType)(0)), ropType, "ropType of RopQueryRowsResponse, state S132");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bIsCorrectRowCount, "bIsCorrectRowCount of RopQueryRowsResponse, state S132");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bCursorPositionChanged, "bCursorPositionChanged of RopQueryRowsResponse, state S132");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bIsLatestRopData, "bIsLatestRopData of RopQueryRowsResponse, state S132");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bIsLastSuccessRopData, "bIsLastSuccessRopData of RopQueryRowsResponse, state S132");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.BookmarkType>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.BookmarkType)(1)), queryRowOrigin, "queryRowOrigin of RopQueryRowsResponse, state S132");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isRequestCountTooLarger, "isRequestCountTooLarger of RopQueryRowsResponse, state S132");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R468, MS-OXCTABL_R118, MS-OXCTABL_R462, M" +
                        "S-OXCTABL_R28, MS-OXCTABL_R726, MS-OXCTABL_R472, MS-OXCTABL_R427, MS-OXCTABL_R42" +
                        "6, MS-OXCTABL_R116");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R468");
            this.Manager.Checkpoint("MS-OXCTABL_R118");
            this.Manager.Checkpoint("MS-OXCTABL_R462");
            this.Manager.Checkpoint("MS-OXCTABL_R28");
            this.Manager.Checkpoint("MS-OXCTABL_R726");
            this.Manager.Checkpoint("MS-OXCTABL_R472");
            this.Manager.Checkpoint("MS-OXCTABL_R427");
            this.Manager.Checkpoint("MS-OXCTABL_R426");
            this.Manager.Checkpoint("MS-OXCTABL_R116");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker57(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(False,False)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S228");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S228");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker58(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(False,False)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S426");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S426");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteRopGetCollapseStateResponseChecker59(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(True,True)\'");
            try {
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S666");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S666");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R304");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R304");
        }
        #endregion
        
        #region Test Starting in S2
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1() {
            this.Manager.BeginTest("MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1");
            this.Manager.Comment("reaching state \'S2\'");
            bool temp164;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCTABLAdapterInstance.CheckMAPIHTTPTransportSupported(out temp164);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp164);
            this.Manager.Comment("reaching state \'S3\'");
            int temp355 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1CheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1CheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp355 == 0)) {
                this.Manager.Comment("reaching state \'S8\'");
                this.Manager.Comment("executing step \'call InitializeTable(CONTENT_TABLE)\'");
                this.IMS_OXCTABLAdapterInstance.InitializeTable(((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableType)(0)));
                this.Manager.Comment("reaching state \'S13\'");
                this.Manager.Comment("checking step \'return InitializeTable\'");
                this.Manager.Comment("reaching state \'S16\'");
                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp165;
                this.Manager.Comment("executing step \'call RopSortTable(1,True,True,False,True,False,False,False)\'");
                temp165 = this.IMS_OXCTABLAdapterInstance.RopSortTable(1u, true, true, false, true, false, false, false);
                this.Manager.Checkpoint("MS-OXCTABL_R447");
                this.Manager.Comment("reaching state \'S19\'");
                this.Manager.Comment("checking step \'return RopSortTable/success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp165, "return of RopSortTable, state S19");
                this.Manager.Comment("reaching state \'S22\'");
                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp166;
                this.Manager.Comment("executing step \'call RopSetColumns(1,False,False,False)\'");
                temp166 = this.IMS_OXCTABLAdapterInstance.RopSetColumns(1u, false, false, false);
                this.Manager.Checkpoint("MS-OXCTABL_R831");
                this.Manager.Checkpoint("MS-OXCTABL_R45");
                this.Manager.Comment("reaching state \'S24\'");
                this.Manager.Comment("checking step \'return RopSetColumns/success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp166, "return of RopSetColumns, state S24");
                this.Manager.Comment("reaching state \'S26\'");
                bool temp167;
                this.Manager.Comment("executing step \'call CheckRequirementEnabled(768,out _)\'");
                this.IMS_OXCTABLAdapterInstance.CheckRequirementEnabled(768, out temp167);
                this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp167);
                this.Manager.Comment("reaching state \'S28\'");
                int temp354 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1CheckRequirementEnabledChecker)), new ExpectedReturn(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1CheckRequirementEnabledChecker25)));
                if ((temp354 == 0)) {
                    this.Manager.Comment("reaching state \'S31\'");
                    bool temp168;
                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(866,out _)\'");
                    this.IMS_OXCTABLAdapterInstance.CheckRequirementEnabled(866, out temp168);
                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp168);
                    this.Manager.Comment("reaching state \'S35\'");
                    int temp260 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1CheckRequirementEnabledChecker1)), new ExpectedReturn(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1CheckRequirementEnabledChecker14)));
                    if ((temp260 == 0)) {
                        this.Manager.Comment("reaching state \'S41\'");
                        bool temp169;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(867,out _)\'");
                        this.IMS_OXCTABLAdapterInstance.CheckRequirementEnabled(867, out temp169);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp169);
                        this.Manager.Comment("reaching state \'S49\'");
                        int temp217 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1CheckRequirementEnabledChecker2)), new ExpectedReturn(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1CheckRequirementEnabledChecker7)));
                        if ((temp217 == 0)) {
                            this.Manager.Comment("reaching state \'S61\'");
                            Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp170;
                            this.Manager.Comment("executing step \'call RopQueryRows(Advance,True)\'");
                            temp170 = this.IMS_OXCTABLAdapterInstance.RopQueryRows(((Microsoft.Protocols.TestSuites.Common.QueryRowsFlags)(0)), true);
                            this.Manager.Checkpoint("MS-OXCTABL_R837");
                            this.Manager.Comment("reaching state \'S77\'");
                            this.Manager.Comment("checking step \'return RopQueryRows/success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp170, "return of RopQueryRows, state S77");
                            this.Manager.Comment("reaching state \'S93\'");
                            bool temp171;
                            this.Manager.Comment("executing step \'call CheckRequirementEnabled(610,out _)\'");
                            this.IMS_OXCTABLAdapterInstance.CheckRequirementEnabled(610, out temp171);
                            this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp171);
                            this.Manager.Comment("reaching state \'S109\'");
                            int temp189 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1CheckRequirementEnabledChecker3)), new ExpectedReturn(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1CheckRequirementEnabledChecker6)));
                            if ((temp189 == 0)) {
                                this.Manager.Comment("reaching state \'S133\'");
                                if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopQueryRowsResponseInfo, null, new RopQueryRowsResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopQueryRowsResponseChecker))) != -1)) {
                                    this.Manager.Comment("reaching state \'S165\'");
                                    Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp172;
                                    this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                                    temp172 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                                    this.Manager.Checkpoint("MS-OXCTABL_R582");
                                    this.Manager.Checkpoint("MS-OXCTABL_R579");
                                    this.Manager.Comment("reaching state \'S197\'");
                                    this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp172, "return of RopGetCollapseState, state S197");
                                    this.Manager.Comment("reaching state \'S229\'");
                                    if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker))) != -1)) {
                                        this.Manager.Comment("reaching state \'S261\'");
                                        bool temp173;
                                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(748,out _)\'");
                                        this.IMS_OXCTABLAdapterInstance.CheckRequirementEnabled(748, out temp173);
                                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp173);
                                        this.Manager.Comment("reaching state \'S293\'");
                                        int temp183 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1CheckRequirementEnabledChecker4)), new ExpectedReturn(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1CheckRequirementEnabledChecker5)));
                                        if ((temp183 == 0)) {
                                            this.Manager.Comment("reaching state \'S331\'");
                                            Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp174;
                                            this.Manager.Comment("executing step \'call RopExpandRow(False,False,False)\'");
                                            temp174 = this.IMS_OXCTABLAdapterInstance.RopExpandRow(false, false, false);
                                            this.Manager.Checkpoint("MS-OXCTABL_R568");
                                            this.Manager.Checkpoint("MS-OXCTABL_R567");
                                            this.Manager.Comment("reaching state \'S379\'");
                                            this.Manager.Comment("checking step \'return RopExpandRow/success\'");
                                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp174, "return of RopExpandRow, state S379");
                                            this.Manager.Comment("reaching state \'S427\'");
                                            int temp178 = this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopExpandRowResponseInfo, null, new RopExpandRowResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopExpandRowResponseChecker)), new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopExpandRowResponseInfo, null, new RopExpandRowResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopExpandRowResponseChecker1)));
                                            if ((temp178 == 0)) {
                                                S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteS475();
                                                goto label28;
                                            }
                                            if ((temp178 == 1)) {
                                                S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteS475();
                                                goto label28;
                                            }
                                            this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopExpandRowResponseInfo, null, new RopExpandRowResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopExpandRowResponseChecker)), new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopExpandRowResponseInfo, null, new RopExpandRowResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopExpandRowResponseChecker1)));
                                        label28:
;
                                            goto label29;
                                        }
                                        if ((temp183 == 1)) {
                                            this.Manager.Comment("reaching state \'S332\'");
                                            Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp179;
                                            this.Manager.Comment("executing step \'call RopExpandRow(False,False,False)\'");
                                            temp179 = this.IMS_OXCTABLAdapterInstance.RopExpandRow(false, false, false);
                                            this.Manager.Checkpoint("MS-OXCTABL_R568");
                                            this.Manager.Checkpoint("MS-OXCTABL_R567");
                                            this.Manager.Comment("reaching state \'S380\'");
                                            this.Manager.Comment("checking step \'return RopExpandRow/success\'");
                                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp179, "return of RopExpandRow, state S380");
                                            this.Manager.Comment("reaching state \'S428\'");
                                            if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopExpandRowResponseInfo, null, new RopExpandRowResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopExpandRowResponseChecker2))) != -1)) {
                                                this.Manager.Comment("reaching state \'S476\'");
                                                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp180;
                                                this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                                                temp180 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                                                this.Manager.Checkpoint("MS-OXCTABL_R582");
                                                this.Manager.Checkpoint("MS-OXCTABL_R579");
                                                this.Manager.Comment("reaching state \'S524\'");
                                                this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp180, "return of RopGetCollapseState, state S524");
                                                this.Manager.Comment("reaching state \'S572\'");
                                                if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker3))) != -1)) {
                                                    this.Manager.Comment("reaching state \'S620\'");
                                                    Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp181;
                                                    this.Manager.Comment("executing step \'call RopSetCollapseState()\'");
                                                    temp181 = this.IMS_OXCTABLAdapterInstance.RopSetCollapseState();
                                                    this.Manager.Checkpoint("MS-OXCTABL_R588");
                                                    this.Manager.Checkpoint("MS-OXCTABL_R585");
                                                    this.Manager.Checkpoint("MS-OXCTABL_R289");
                                                    this.Manager.Comment("reaching state \'S668\'");
                                                    this.Manager.Comment("checking step \'return RopSetCollapseState/success\'");
                                                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp181, "return of RopSetCollapseState, state S668");
                                                    this.Manager.Comment("reaching state \'S716\'");
                                                    Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp182;
                                                    this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                                                    temp182 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                                                    this.Manager.Checkpoint("MS-OXCTABL_R582");
                                                    this.Manager.Checkpoint("MS-OXCTABL_R579");
                                                    this.Manager.Comment("reaching state \'S754\'");
                                                    this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                                                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp182, "return of RopGetCollapseState, state S754");
                                                    this.Manager.Comment("reaching state \'S786\'");
                                                    if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker4))) != -1)) {
                                                        this.Manager.Comment("reaching state \'S818\'");
                                                    }
                                                    else {
                                                        this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker4)));
                                                    }
                                                }
                                                else {
                                                    this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker3)));
                                                }
                                            }
                                            else {
                                                this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopExpandRowResponseInfo, null, new RopExpandRowResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopExpandRowResponseChecker2)));
                                            }
                                            goto label29;
                                        }
                                        throw new InvalidOperationException("never reached");
                                    label29:
;
                                    }
                                    else {
                                        this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker)));
                                    }
                                }
                                else {
                                    this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopQueryRowsResponseInfo, null, new RopQueryRowsResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopQueryRowsResponseChecker)));
                                }
                                goto label30;
                            }
                            if ((temp189 == 1)) {
                                this.Manager.Comment("reaching state \'S134\'");
                                if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopQueryRowsResponseInfo, null, new RopQueryRowsResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopQueryRowsResponseChecker1))) != -1)) {
                                    this.Manager.Comment("reaching state \'S166\'");
                                    Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp184;
                                    this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                                    temp184 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                                    this.Manager.Checkpoint("MS-OXCTABL_R582");
                                    this.Manager.Checkpoint("MS-OXCTABL_R579");
                                    this.Manager.Comment("reaching state \'S198\'");
                                    this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp184, "return of RopGetCollapseState, state S198");
                                    this.Manager.Comment("reaching state \'S230\'");
                                    if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker5))) != -1)) {
                                        this.Manager.Comment("reaching state \'S262\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp185;
                                        this.Manager.Comment("executing step \'call RopCollapseRow(False,False)\'");
                                        temp185 = this.IMS_OXCTABLAdapterInstance.RopCollapseRow(false, false);
                                        this.Manager.Checkpoint("MS-OXCTABL_R574");
                                        this.Manager.Comment("reaching state \'S294\'");
                                        this.Manager.Comment("checking step \'return RopCollapseRow/success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp185, "return of RopCollapseRow, state S294");
                                        this.Manager.Comment("reaching state \'S333\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp186;
                                        this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                                        temp186 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                                        this.Manager.Checkpoint("MS-OXCTABL_R582");
                                        this.Manager.Checkpoint("MS-OXCTABL_R579");
                                        this.Manager.Comment("reaching state \'S381\'");
                                        this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp186, "return of RopGetCollapseState, state S381");
                                        this.Manager.Comment("reaching state \'S429\'");
                                        if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker6))) != -1)) {
                                            this.Manager.Comment("reaching state \'S477\'");
                                            Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp187;
                                            this.Manager.Comment("executing step \'call RopSetCollapseState()\'");
                                            temp187 = this.IMS_OXCTABLAdapterInstance.RopSetCollapseState();
                                            this.Manager.Checkpoint("MS-OXCTABL_R588");
                                            this.Manager.Checkpoint("MS-OXCTABL_R585");
                                            this.Manager.Checkpoint("MS-OXCTABL_R289");
                                            this.Manager.Comment("reaching state \'S525\'");
                                            this.Manager.Comment("checking step \'return RopSetCollapseState/success\'");
                                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp187, "return of RopSetCollapseState, state S525");
                                            this.Manager.Comment("reaching state \'S573\'");
                                            Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp188;
                                            this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                                            temp188 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                                            this.Manager.Checkpoint("MS-OXCTABL_R582");
                                            this.Manager.Checkpoint("MS-OXCTABL_R579");
                                            this.Manager.Comment("reaching state \'S621\'");
                                            this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp188, "return of RopGetCollapseState, state S621");
                                            this.Manager.Comment("reaching state \'S669\'");
                                            if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker7))) != -1)) {
                                                this.Manager.Comment("reaching state \'S717\'");
                                            }
                                            else {
                                                this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker7)));
                                            }
                                        }
                                        else {
                                            this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker6)));
                                        }
                                    }
                                    else {
                                        this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker5)));
                                    }
                                }
                                else {
                                    this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopQueryRowsResponseInfo, null, new RopQueryRowsResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopQueryRowsResponseChecker1)));
                                }
                                goto label30;
                            }
                            throw new InvalidOperationException("never reached");
                        label30:
;
                            goto label36;
                        }
                        if ((temp217 == 1)) {
                            this.Manager.Comment("reaching state \'S62\'");
                            Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp190;
                            this.Manager.Comment("executing step \'call RopQueryRows(Advance,True)\'");
                            temp190 = this.IMS_OXCTABLAdapterInstance.RopQueryRows(((Microsoft.Protocols.TestSuites.Common.QueryRowsFlags)(0)), true);
                            this.Manager.Checkpoint("MS-OXCTABL_R837");
                            this.Manager.Comment("reaching state \'S78\'");
                            this.Manager.Comment("checking step \'return RopQueryRows/success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp190, "return of RopQueryRows, state S78");
                            this.Manager.Comment("reaching state \'S94\'");
                            bool temp191;
                            this.Manager.Comment("executing step \'call CheckRequirementEnabled(610,out _)\'");
                            this.IMS_OXCTABLAdapterInstance.CheckRequirementEnabled(610, out temp191);
                            this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp191);
                            this.Manager.Comment("reaching state \'S110\'");
                            int temp216 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1CheckRequirementEnabledChecker8)), new ExpectedReturn(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1CheckRequirementEnabledChecker11)));
                            if ((temp216 == 0)) {
                                this.Manager.Comment("reaching state \'S135\'");
                                if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopQueryRowsResponseInfo, null, new RopQueryRowsResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopQueryRowsResponseChecker2))) != -1)) {
                                    this.Manager.Comment("reaching state \'S167\'");
                                    Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp192;
                                    this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                                    temp192 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                                    this.Manager.Checkpoint("MS-OXCTABL_R582");
                                    this.Manager.Checkpoint("MS-OXCTABL_R579");
                                    this.Manager.Comment("reaching state \'S199\'");
                                    this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp192, "return of RopGetCollapseState, state S199");
                                    this.Manager.Comment("reaching state \'S231\'");
                                    if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker8))) != -1)) {
                                        this.Manager.Comment("reaching state \'S263\'");
                                        bool temp193;
                                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(748,out _)\'");
                                        this.IMS_OXCTABLAdapterInstance.CheckRequirementEnabled(748, out temp193);
                                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp193);
                                        this.Manager.Comment("reaching state \'S295\'");
                                        int temp203 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1CheckRequirementEnabledChecker9)), new ExpectedReturn(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1CheckRequirementEnabledChecker10)));
                                        if ((temp203 == 0)) {
                                            this.Manager.Comment("reaching state \'S334\'");
                                            Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp194;
                                            this.Manager.Comment("executing step \'call RopExpandRow(False,False,False)\'");
                                            temp194 = this.IMS_OXCTABLAdapterInstance.RopExpandRow(false, false, false);
                                            this.Manager.Checkpoint("MS-OXCTABL_R568");
                                            this.Manager.Checkpoint("MS-OXCTABL_R567");
                                            this.Manager.Comment("reaching state \'S382\'");
                                            this.Manager.Comment("checking step \'return RopExpandRow/success\'");
                                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp194, "return of RopExpandRow, state S382");
                                            this.Manager.Comment("reaching state \'S430\'");
                                            if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopExpandRowResponseInfo, null, new RopExpandRowResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopExpandRowResponseChecker3))) != -1)) {
                                                this.Manager.Comment("reaching state \'S478\'");
                                                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp195;
                                                this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                                                temp195 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                                                this.Manager.Checkpoint("MS-OXCTABL_R582");
                                                this.Manager.Checkpoint("MS-OXCTABL_R579");
                                                this.Manager.Comment("reaching state \'S526\'");
                                                this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp195, "return of RopGetCollapseState, state S526");
                                                this.Manager.Comment("reaching state \'S574\'");
                                                if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker9))) != -1)) {
                                                    this.Manager.Comment("reaching state \'S622\'");
                                                    Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp196;
                                                    this.Manager.Comment("executing step \'call RopSetCollapseState()\'");
                                                    temp196 = this.IMS_OXCTABLAdapterInstance.RopSetCollapseState();
                                                    this.Manager.Checkpoint("MS-OXCTABL_R588");
                                                    this.Manager.Checkpoint("MS-OXCTABL_R585");
                                                    this.Manager.Checkpoint("MS-OXCTABL_R289");
                                                    this.Manager.Comment("reaching state \'S670\'");
                                                    this.Manager.Comment("checking step \'return RopSetCollapseState/success\'");
                                                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp196, "return of RopSetCollapseState, state S670");
                                                    this.Manager.Comment("reaching state \'S718\'");
                                                    Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp197;
                                                    this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                                                    temp197 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                                                    this.Manager.Checkpoint("MS-OXCTABL_R582");
                                                    this.Manager.Checkpoint("MS-OXCTABL_R579");
                                                    this.Manager.Comment("reaching state \'S755\'");
                                                    this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                                                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp197, "return of RopGetCollapseState, state S755");
                                                    this.Manager.Comment("reaching state \'S787\'");
                                                    if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker10))) != -1)) {
                                                        this.Manager.Comment("reaching state \'S819\'");
                                                    }
                                                    else {
                                                        this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker10)));
                                                    }
                                                }
                                                else {
                                                    this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker9)));
                                                }
                                            }
                                            else {
                                                this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopExpandRowResponseInfo, null, new RopExpandRowResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopExpandRowResponseChecker3)));
                                            }
                                            goto label32;
                                        }
                                        if ((temp203 == 1)) {
                                            this.Manager.Comment("reaching state \'S335\'");
                                            Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp198;
                                            this.Manager.Comment("executing step \'call RopExpandRow(False,False,False)\'");
                                            temp198 = this.IMS_OXCTABLAdapterInstance.RopExpandRow(false, false, false);
                                            this.Manager.Checkpoint("MS-OXCTABL_R568");
                                            this.Manager.Checkpoint("MS-OXCTABL_R567");
                                            this.Manager.Comment("reaching state \'S383\'");
                                            this.Manager.Comment("checking step \'return RopExpandRow/success\'");
                                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp198, "return of RopExpandRow, state S383");
                                            this.Manager.Comment("reaching state \'S431\'");
                                            int temp202 = this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopExpandRowResponseInfo, null, new RopExpandRowResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopExpandRowResponseChecker4)), new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopExpandRowResponseInfo, null, new RopExpandRowResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopExpandRowResponseChecker5)));
                                            if ((temp202 == 0)) {
                                                S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteS479();
                                                goto label31;
                                            }
                                            if ((temp202 == 1)) {
                                                S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteS479();
                                                goto label31;
                                            }
                                            this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopExpandRowResponseInfo, null, new RopExpandRowResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopExpandRowResponseChecker4)), new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopExpandRowResponseInfo, null, new RopExpandRowResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopExpandRowResponseChecker5)));
                                        label31:
;
                                            goto label32;
                                        }
                                        throw new InvalidOperationException("never reached");
                                    label32:
;
                                    }
                                    else {
                                        this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker8)));
                                    }
                                }
                                else {
                                    this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopQueryRowsResponseInfo, null, new RopQueryRowsResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopQueryRowsResponseChecker2)));
                                }
                                goto label35;
                            }
                            if ((temp216 == 1)) {
                                this.Manager.Comment("reaching state \'S136\'");
                                if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopQueryRowsResponseInfo, null, new RopQueryRowsResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopQueryRowsResponseChecker3))) != -1)) {
                                    this.Manager.Comment("reaching state \'S168\'");
                                    Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp204;
                                    this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                                    temp204 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                                    this.Manager.Checkpoint("MS-OXCTABL_R582");
                                    this.Manager.Checkpoint("MS-OXCTABL_R579");
                                    this.Manager.Comment("reaching state \'S200\'");
                                    this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp204, "return of RopGetCollapseState, state S200");
                                    this.Manager.Comment("reaching state \'S232\'");
                                    if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker13))) != -1)) {
                                        this.Manager.Comment("reaching state \'S264\'");
                                        bool temp205;
                                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(748,out _)\'");
                                        this.IMS_OXCTABLAdapterInstance.CheckRequirementEnabled(748, out temp205);
                                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp205);
                                        this.Manager.Comment("reaching state \'S296\'");
                                        int temp215 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1CheckRequirementEnabledChecker12)), new ExpectedReturn(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1CheckRequirementEnabledChecker13)));
                                        if ((temp215 == 0)) {
                                            this.Manager.Comment("reaching state \'S336\'");
                                            Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp206;
                                            this.Manager.Comment("executing step \'call RopExpandRow(False,False,False)\'");
                                            temp206 = this.IMS_OXCTABLAdapterInstance.RopExpandRow(false, false, false);
                                            this.Manager.Checkpoint("MS-OXCTABL_R568");
                                            this.Manager.Checkpoint("MS-OXCTABL_R567");
                                            this.Manager.Comment("reaching state \'S384\'");
                                            this.Manager.Comment("checking step \'return RopExpandRow/success\'");
                                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp206, "return of RopExpandRow, state S384");
                                            this.Manager.Comment("reaching state \'S432\'");
                                            if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopExpandRowResponseInfo, null, new RopExpandRowResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopExpandRowResponseChecker6))) != -1)) {
                                                this.Manager.Comment("reaching state \'S480\'");
                                                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp207;
                                                this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                                                temp207 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                                                this.Manager.Checkpoint("MS-OXCTABL_R582");
                                                this.Manager.Checkpoint("MS-OXCTABL_R579");
                                                this.Manager.Comment("reaching state \'S528\'");
                                                this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp207, "return of RopGetCollapseState, state S528");
                                                this.Manager.Comment("reaching state \'S576\'");
                                                if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker14))) != -1)) {
                                                    this.Manager.Comment("reaching state \'S624\'");
                                                    Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp208;
                                                    this.Manager.Comment("executing step \'call RopSetCollapseState()\'");
                                                    temp208 = this.IMS_OXCTABLAdapterInstance.RopSetCollapseState();
                                                    this.Manager.Checkpoint("MS-OXCTABL_R588");
                                                    this.Manager.Checkpoint("MS-OXCTABL_R585");
                                                    this.Manager.Checkpoint("MS-OXCTABL_R289");
                                                    this.Manager.Comment("reaching state \'S672\'");
                                                    this.Manager.Comment("checking step \'return RopSetCollapseState/success\'");
                                                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp208, "return of RopSetCollapseState, state S672");
                                                    this.Manager.Comment("reaching state \'S720\'");
                                                    Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp209;
                                                    this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                                                    temp209 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                                                    this.Manager.Checkpoint("MS-OXCTABL_R582");
                                                    this.Manager.Checkpoint("MS-OXCTABL_R579");
                                                    this.Manager.Comment("reaching state \'S757\'");
                                                    this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                                                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp209, "return of RopGetCollapseState, state S757");
                                                    this.Manager.Comment("reaching state \'S789\'");
                                                    if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker15))) != -1)) {
                                                        this.Manager.Comment("reaching state \'S821\'");
                                                    }
                                                    else {
                                                        this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker15)));
                                                    }
                                                }
                                                else {
                                                    this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker14)));
                                                }
                                            }
                                            else {
                                                this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopExpandRowResponseInfo, null, new RopExpandRowResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopExpandRowResponseChecker6)));
                                            }
                                            goto label34;
                                        }
                                        if ((temp215 == 1)) {
                                            this.Manager.Comment("reaching state \'S337\'");
                                            Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp210;
                                            this.Manager.Comment("executing step \'call RopExpandRow(False,False,False)\'");
                                            temp210 = this.IMS_OXCTABLAdapterInstance.RopExpandRow(false, false, false);
                                            this.Manager.Checkpoint("MS-OXCTABL_R568");
                                            this.Manager.Checkpoint("MS-OXCTABL_R567");
                                            this.Manager.Comment("reaching state \'S385\'");
                                            this.Manager.Comment("checking step \'return RopExpandRow/success\'");
                                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp210, "return of RopExpandRow, state S385");
                                            this.Manager.Comment("reaching state \'S433\'");
                                            int temp214 = this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopExpandRowResponseInfo, null, new RopExpandRowResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopExpandRowResponseChecker7)), new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopExpandRowResponseInfo, null, new RopExpandRowResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopExpandRowResponseChecker8)));
                                            if ((temp214 == 0)) {
                                                S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteS481();
                                                goto label33;
                                            }
                                            if ((temp214 == 1)) {
                                                S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteS481();
                                                goto label33;
                                            }
                                            this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopExpandRowResponseInfo, null, new RopExpandRowResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopExpandRowResponseChecker7)), new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopExpandRowResponseInfo, null, new RopExpandRowResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopExpandRowResponseChecker8)));
                                        label33:
;
                                            goto label34;
                                        }
                                        throw new InvalidOperationException("never reached");
                                    label34:
;
                                    }
                                    else {
                                        this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker13)));
                                    }
                                }
                                else {
                                    this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopQueryRowsResponseInfo, null, new RopQueryRowsResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopQueryRowsResponseChecker3)));
                                }
                                goto label35;
                            }
                            throw new InvalidOperationException("never reached");
                        label35:
;
                            goto label36;
                        }
                        throw new InvalidOperationException("never reached");
                    label36:
;
                        goto label44;
                    }
                    if ((temp260 == 1)) {
                        this.Manager.Comment("reaching state \'S42\'");
                        bool temp218;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(867,out _)\'");
                        this.IMS_OXCTABLAdapterInstance.CheckRequirementEnabled(867, out temp218);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp218);
                        this.Manager.Comment("reaching state \'S50\'");
                        int temp259 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1CheckRequirementEnabledChecker15)), new ExpectedReturn(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1CheckRequirementEnabledChecker22)));
                        if ((temp259 == 0)) {
                            this.Manager.Comment("reaching state \'S63\'");
                            Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp219;
                            this.Manager.Comment("executing step \'call RopQueryRows(Advance,True)\'");
                            temp219 = this.IMS_OXCTABLAdapterInstance.RopQueryRows(((Microsoft.Protocols.TestSuites.Common.QueryRowsFlags)(0)), true);
                            this.Manager.Checkpoint("MS-OXCTABL_R837");
                            this.Manager.Comment("reaching state \'S79\'");
                            this.Manager.Comment("checking step \'return RopQueryRows/success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp219, "return of RopQueryRows, state S79");
                            this.Manager.Comment("reaching state \'S95\'");
                            bool temp220;
                            this.Manager.Comment("executing step \'call CheckRequirementEnabled(610,out _)\'");
                            this.IMS_OXCTABLAdapterInstance.CheckRequirementEnabled(610, out temp220);
                            this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp220);
                            this.Manager.Comment("reaching state \'S111\'");
                            int temp245 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1CheckRequirementEnabledChecker16)), new ExpectedReturn(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1CheckRequirementEnabledChecker19)));
                            if ((temp245 == 0)) {
                                this.Manager.Comment("reaching state \'S137\'");
                                if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopQueryRowsResponseInfo, null, new RopQueryRowsResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopQueryRowsResponseChecker4))) != -1)) {
                                    this.Manager.Comment("reaching state \'S169\'");
                                    Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp221;
                                    this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                                    temp221 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                                    this.Manager.Checkpoint("MS-OXCTABL_R582");
                                    this.Manager.Checkpoint("MS-OXCTABL_R579");
                                    this.Manager.Comment("reaching state \'S201\'");
                                    this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp221, "return of RopGetCollapseState, state S201");
                                    this.Manager.Comment("reaching state \'S233\'");
                                    if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker18))) != -1)) {
                                        this.Manager.Comment("reaching state \'S265\'");
                                        bool temp222;
                                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(748,out _)\'");
                                        this.IMS_OXCTABLAdapterInstance.CheckRequirementEnabled(748, out temp222);
                                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp222);
                                        this.Manager.Comment("reaching state \'S297\'");
                                        int temp232 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1CheckRequirementEnabledChecker17)), new ExpectedReturn(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1CheckRequirementEnabledChecker18)));
                                        if ((temp232 == 0)) {
                                            this.Manager.Comment("reaching state \'S338\'");
                                            Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp223;
                                            this.Manager.Comment("executing step \'call RopExpandRow(False,False,False)\'");
                                            temp223 = this.IMS_OXCTABLAdapterInstance.RopExpandRow(false, false, false);
                                            this.Manager.Checkpoint("MS-OXCTABL_R568");
                                            this.Manager.Checkpoint("MS-OXCTABL_R567");
                                            this.Manager.Comment("reaching state \'S386\'");
                                            this.Manager.Comment("checking step \'return RopExpandRow/success\'");
                                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp223, "return of RopExpandRow, state S386");
                                            this.Manager.Comment("reaching state \'S434\'");
                                            if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopExpandRowResponseInfo, null, new RopExpandRowResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopExpandRowResponseChecker9))) != -1)) {
                                                this.Manager.Comment("reaching state \'S482\'");
                                                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp224;
                                                this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                                                temp224 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                                                this.Manager.Checkpoint("MS-OXCTABL_R582");
                                                this.Manager.Checkpoint("MS-OXCTABL_R579");
                                                this.Manager.Comment("reaching state \'S530\'");
                                                this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp224, "return of RopGetCollapseState, state S530");
                                                this.Manager.Comment("reaching state \'S578\'");
                                                if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker19))) != -1)) {
                                                    this.Manager.Comment("reaching state \'S626\'");
                                                    Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp225;
                                                    this.Manager.Comment("executing step \'call RopSetCollapseState()\'");
                                                    temp225 = this.IMS_OXCTABLAdapterInstance.RopSetCollapseState();
                                                    this.Manager.Checkpoint("MS-OXCTABL_R588");
                                                    this.Manager.Checkpoint("MS-OXCTABL_R585");
                                                    this.Manager.Checkpoint("MS-OXCTABL_R289");
                                                    this.Manager.Comment("reaching state \'S674\'");
                                                    this.Manager.Comment("checking step \'return RopSetCollapseState/success\'");
                                                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp225, "return of RopSetCollapseState, state S674");
                                                    this.Manager.Comment("reaching state \'S722\'");
                                                    Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp226;
                                                    this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                                                    temp226 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                                                    this.Manager.Checkpoint("MS-OXCTABL_R582");
                                                    this.Manager.Checkpoint("MS-OXCTABL_R579");
                                                    this.Manager.Comment("reaching state \'S759\'");
                                                    this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                                                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp226, "return of RopGetCollapseState, state S759");
                                                    this.Manager.Comment("reaching state \'S791\'");
                                                    if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker20))) != -1)) {
                                                        this.Manager.Comment("reaching state \'S823\'");
                                                    }
                                                    else {
                                                        this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker20)));
                                                    }
                                                }
                                                else {
                                                    this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker19)));
                                                }
                                            }
                                            else {
                                                this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopExpandRowResponseInfo, null, new RopExpandRowResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopExpandRowResponseChecker9)));
                                            }
                                            goto label38;
                                        }
                                        if ((temp232 == 1)) {
                                            this.Manager.Comment("reaching state \'S339\'");
                                            Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp227;
                                            this.Manager.Comment("executing step \'call RopExpandRow(False,False,False)\'");
                                            temp227 = this.IMS_OXCTABLAdapterInstance.RopExpandRow(false, false, false);
                                            this.Manager.Checkpoint("MS-OXCTABL_R568");
                                            this.Manager.Checkpoint("MS-OXCTABL_R567");
                                            this.Manager.Comment("reaching state \'S387\'");
                                            this.Manager.Comment("checking step \'return RopExpandRow/success\'");
                                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp227, "return of RopExpandRow, state S387");
                                            this.Manager.Comment("reaching state \'S435\'");
                                            int temp231 = this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopExpandRowResponseInfo, null, new RopExpandRowResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopExpandRowResponseChecker10)), new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopExpandRowResponseInfo, null, new RopExpandRowResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopExpandRowResponseChecker11)));
                                            if ((temp231 == 0)) {
                                                S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteS483();
                                                goto label37;
                                            }
                                            if ((temp231 == 1)) {
                                                S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteS483();
                                                goto label37;
                                            }
                                            this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopExpandRowResponseInfo, null, new RopExpandRowResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopExpandRowResponseChecker10)), new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopExpandRowResponseInfo, null, new RopExpandRowResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopExpandRowResponseChecker11)));
                                        label37:
;
                                            goto label38;
                                        }
                                        throw new InvalidOperationException("never reached");
                                    label38:
;
                                    }
                                    else {
                                        this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker18)));
                                    }
                                }
                                else {
                                    this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopQueryRowsResponseInfo, null, new RopQueryRowsResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopQueryRowsResponseChecker4)));
                                }
                                goto label41;
                            }
                            if ((temp245 == 1)) {
                                this.Manager.Comment("reaching state \'S138\'");
                                if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopQueryRowsResponseInfo, null, new RopQueryRowsResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopQueryRowsResponseChecker5))) != -1)) {
                                    this.Manager.Comment("reaching state \'S170\'");
                                    Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp233;
                                    this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                                    temp233 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                                    this.Manager.Checkpoint("MS-OXCTABL_R582");
                                    this.Manager.Checkpoint("MS-OXCTABL_R579");
                                    this.Manager.Comment("reaching state \'S202\'");
                                    this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp233, "return of RopGetCollapseState, state S202");
                                    this.Manager.Comment("reaching state \'S234\'");
                                    if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker23))) != -1)) {
                                        this.Manager.Comment("reaching state \'S266\'");
                                        bool temp234;
                                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(748,out _)\'");
                                        this.IMS_OXCTABLAdapterInstance.CheckRequirementEnabled(748, out temp234);
                                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp234);
                                        this.Manager.Comment("reaching state \'S298\'");
                                        int temp244 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1CheckRequirementEnabledChecker20)), new ExpectedReturn(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1CheckRequirementEnabledChecker21)));
                                        if ((temp244 == 0)) {
                                            this.Manager.Comment("reaching state \'S340\'");
                                            Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp235;
                                            this.Manager.Comment("executing step \'call RopExpandRow(False,False,False)\'");
                                            temp235 = this.IMS_OXCTABLAdapterInstance.RopExpandRow(false, false, false);
                                            this.Manager.Checkpoint("MS-OXCTABL_R568");
                                            this.Manager.Checkpoint("MS-OXCTABL_R567");
                                            this.Manager.Comment("reaching state \'S388\'");
                                            this.Manager.Comment("checking step \'return RopExpandRow/success\'");
                                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp235, "return of RopExpandRow, state S388");
                                            this.Manager.Comment("reaching state \'S436\'");
                                            if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopExpandRowResponseInfo, null, new RopExpandRowResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopExpandRowResponseChecker12))) != -1)) {
                                                this.Manager.Comment("reaching state \'S484\'");
                                                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp236;
                                                this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                                                temp236 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                                                this.Manager.Checkpoint("MS-OXCTABL_R582");
                                                this.Manager.Checkpoint("MS-OXCTABL_R579");
                                                this.Manager.Comment("reaching state \'S532\'");
                                                this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp236, "return of RopGetCollapseState, state S532");
                                                this.Manager.Comment("reaching state \'S580\'");
                                                if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker24))) != -1)) {
                                                    this.Manager.Comment("reaching state \'S628\'");
                                                    Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp237;
                                                    this.Manager.Comment("executing step \'call RopSetCollapseState()\'");
                                                    temp237 = this.IMS_OXCTABLAdapterInstance.RopSetCollapseState();
                                                    this.Manager.Checkpoint("MS-OXCTABL_R588");
                                                    this.Manager.Checkpoint("MS-OXCTABL_R585");
                                                    this.Manager.Checkpoint("MS-OXCTABL_R289");
                                                    this.Manager.Comment("reaching state \'S676\'");
                                                    this.Manager.Comment("checking step \'return RopSetCollapseState/success\'");
                                                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp237, "return of RopSetCollapseState, state S676");
                                                    this.Manager.Comment("reaching state \'S724\'");
                                                    Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp238;
                                                    this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                                                    temp238 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                                                    this.Manager.Checkpoint("MS-OXCTABL_R582");
                                                    this.Manager.Checkpoint("MS-OXCTABL_R579");
                                                    this.Manager.Comment("reaching state \'S761\'");
                                                    this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                                                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp238, "return of RopGetCollapseState, state S761");
                                                    this.Manager.Comment("reaching state \'S793\'");
                                                    if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker25))) != -1)) {
                                                        this.Manager.Comment("reaching state \'S825\'");
                                                    }
                                                    else {
                                                        this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker25)));
                                                    }
                                                }
                                                else {
                                                    this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker24)));
                                                }
                                            }
                                            else {
                                                this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopExpandRowResponseInfo, null, new RopExpandRowResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopExpandRowResponseChecker12)));
                                            }
                                            goto label40;
                                        }
                                        if ((temp244 == 1)) {
                                            this.Manager.Comment("reaching state \'S341\'");
                                            Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp239;
                                            this.Manager.Comment("executing step \'call RopExpandRow(False,False,False)\'");
                                            temp239 = this.IMS_OXCTABLAdapterInstance.RopExpandRow(false, false, false);
                                            this.Manager.Checkpoint("MS-OXCTABL_R568");
                                            this.Manager.Checkpoint("MS-OXCTABL_R567");
                                            this.Manager.Comment("reaching state \'S389\'");
                                            this.Manager.Comment("checking step \'return RopExpandRow/success\'");
                                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp239, "return of RopExpandRow, state S389");
                                            this.Manager.Comment("reaching state \'S437\'");
                                            int temp243 = this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopExpandRowResponseInfo, null, new RopExpandRowResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopExpandRowResponseChecker13)), new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopExpandRowResponseInfo, null, new RopExpandRowResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopExpandRowResponseChecker14)));
                                            if ((temp243 == 0)) {
                                                S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteS485();
                                                goto label39;
                                            }
                                            if ((temp243 == 1)) {
                                                S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteS485();
                                                goto label39;
                                            }
                                            this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopExpandRowResponseInfo, null, new RopExpandRowResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopExpandRowResponseChecker13)), new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopExpandRowResponseInfo, null, new RopExpandRowResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopExpandRowResponseChecker14)));
                                        label39:
;
                                            goto label40;
                                        }
                                        throw new InvalidOperationException("never reached");
                                    label40:
;
                                    }
                                    else {
                                        this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker23)));
                                    }
                                }
                                else {
                                    this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopQueryRowsResponseInfo, null, new RopQueryRowsResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopQueryRowsResponseChecker5)));
                                }
                                goto label41;
                            }
                            throw new InvalidOperationException("never reached");
                        label41:
;
                            goto label43;
                        }
                        if ((temp259 == 1)) {
                            this.Manager.Comment("reaching state \'S64\'");
                            Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp246;
                            this.Manager.Comment("executing step \'call RopQueryRows(Advance,True)\'");
                            temp246 = this.IMS_OXCTABLAdapterInstance.RopQueryRows(((Microsoft.Protocols.TestSuites.Common.QueryRowsFlags)(0)), true);
                            this.Manager.Checkpoint("MS-OXCTABL_R837");
                            this.Manager.Comment("reaching state \'S80\'");
                            this.Manager.Comment("checking step \'return RopQueryRows/success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp246, "return of RopQueryRows, state S80");
                            this.Manager.Comment("reaching state \'S96\'");
                            bool temp247;
                            this.Manager.Comment("executing step \'call CheckRequirementEnabled(610,out _)\'");
                            this.IMS_OXCTABLAdapterInstance.CheckRequirementEnabled(610, out temp247);
                            this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp247);
                            this.Manager.Comment("reaching state \'S112\'");
                            int temp258 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1CheckRequirementEnabledChecker23)), new ExpectedReturn(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1CheckRequirementEnabledChecker24)));
                            if ((temp258 == 0)) {
                                this.Manager.Comment("reaching state \'S139\'");
                                if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopQueryRowsResponseInfo, null, new RopQueryRowsResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopQueryRowsResponseChecker6))) != -1)) {
                                    this.Manager.Comment("reaching state \'S171\'");
                                    Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp248;
                                    this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                                    temp248 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                                    this.Manager.Checkpoint("MS-OXCTABL_R582");
                                    this.Manager.Checkpoint("MS-OXCTABL_R579");
                                    this.Manager.Comment("reaching state \'S203\'");
                                    this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp248, "return of RopGetCollapseState, state S203");
                                    this.Manager.Comment("reaching state \'S235\'");
                                    if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker28))) != -1)) {
                                        this.Manager.Comment("reaching state \'S267\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp249;
                                        this.Manager.Comment("executing step \'call RopCollapseRow(False,False)\'");
                                        temp249 = this.IMS_OXCTABLAdapterInstance.RopCollapseRow(false, false);
                                        this.Manager.Checkpoint("MS-OXCTABL_R574");
                                        this.Manager.Comment("reaching state \'S299\'");
                                        this.Manager.Comment("checking step \'return RopCollapseRow/success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp249, "return of RopCollapseRow, state S299");
                                        this.Manager.Comment("reaching state \'S342\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp250;
                                        this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                                        temp250 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                                        this.Manager.Checkpoint("MS-OXCTABL_R582");
                                        this.Manager.Checkpoint("MS-OXCTABL_R579");
                                        this.Manager.Comment("reaching state \'S390\'");
                                        this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp250, "return of RopGetCollapseState, state S390");
                                        this.Manager.Comment("reaching state \'S438\'");
                                        if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker29))) != -1)) {
                                            this.Manager.Comment("reaching state \'S486\'");
                                            Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp251;
                                            this.Manager.Comment("executing step \'call RopSetCollapseState()\'");
                                            temp251 = this.IMS_OXCTABLAdapterInstance.RopSetCollapseState();
                                            this.Manager.Checkpoint("MS-OXCTABL_R588");
                                            this.Manager.Checkpoint("MS-OXCTABL_R585");
                                            this.Manager.Checkpoint("MS-OXCTABL_R289");
                                            this.Manager.Comment("reaching state \'S534\'");
                                            this.Manager.Comment("checking step \'return RopSetCollapseState/success\'");
                                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp251, "return of RopSetCollapseState, state S534");
                                            this.Manager.Comment("reaching state \'S582\'");
                                            Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp252;
                                            this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                                            temp252 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                                            this.Manager.Checkpoint("MS-OXCTABL_R582");
                                            this.Manager.Checkpoint("MS-OXCTABL_R579");
                                            this.Manager.Comment("reaching state \'S630\'");
                                            this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp252, "return of RopGetCollapseState, state S630");
                                            this.Manager.Comment("reaching state \'S678\'");
                                            if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker30))) != -1)) {
                                                this.Manager.Comment("reaching state \'S726\'");
                                            }
                                            else {
                                                this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker30)));
                                            }
                                        }
                                        else {
                                            this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker29)));
                                        }
                                    }
                                    else {
                                        this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker28)));
                                    }
                                }
                                else {
                                    this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopQueryRowsResponseInfo, null, new RopQueryRowsResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopQueryRowsResponseChecker6)));
                                }
                                goto label42;
                            }
                            if ((temp258 == 1)) {
                                this.Manager.Comment("reaching state \'S140\'");
                                if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopQueryRowsResponseInfo, null, new RopQueryRowsResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopQueryRowsResponseChecker7))) != -1)) {
                                    this.Manager.Comment("reaching state \'S172\'");
                                    Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp253;
                                    this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                                    temp253 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                                    this.Manager.Checkpoint("MS-OXCTABL_R582");
                                    this.Manager.Checkpoint("MS-OXCTABL_R579");
                                    this.Manager.Comment("reaching state \'S204\'");
                                    this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp253, "return of RopGetCollapseState, state S204");
                                    this.Manager.Comment("reaching state \'S236\'");
                                    if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker31))) != -1)) {
                                        this.Manager.Comment("reaching state \'S268\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp254;
                                        this.Manager.Comment("executing step \'call RopCollapseRow(False,False)\'");
                                        temp254 = this.IMS_OXCTABLAdapterInstance.RopCollapseRow(false, false);
                                        this.Manager.Checkpoint("MS-OXCTABL_R574");
                                        this.Manager.Comment("reaching state \'S300\'");
                                        this.Manager.Comment("checking step \'return RopCollapseRow/success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp254, "return of RopCollapseRow, state S300");
                                        this.Manager.Comment("reaching state \'S343\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp255;
                                        this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                                        temp255 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                                        this.Manager.Checkpoint("MS-OXCTABL_R582");
                                        this.Manager.Checkpoint("MS-OXCTABL_R579");
                                        this.Manager.Comment("reaching state \'S391\'");
                                        this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp255, "return of RopGetCollapseState, state S391");
                                        this.Manager.Comment("reaching state \'S439\'");
                                        if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker32))) != -1)) {
                                            this.Manager.Comment("reaching state \'S487\'");
                                            Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp256;
                                            this.Manager.Comment("executing step \'call RopSetCollapseState()\'");
                                            temp256 = this.IMS_OXCTABLAdapterInstance.RopSetCollapseState();
                                            this.Manager.Checkpoint("MS-OXCTABL_R588");
                                            this.Manager.Checkpoint("MS-OXCTABL_R585");
                                            this.Manager.Checkpoint("MS-OXCTABL_R289");
                                            this.Manager.Comment("reaching state \'S535\'");
                                            this.Manager.Comment("checking step \'return RopSetCollapseState/success\'");
                                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp256, "return of RopSetCollapseState, state S535");
                                            this.Manager.Comment("reaching state \'S583\'");
                                            Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp257;
                                            this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                                            temp257 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                                            this.Manager.Checkpoint("MS-OXCTABL_R582");
                                            this.Manager.Checkpoint("MS-OXCTABL_R579");
                                            this.Manager.Comment("reaching state \'S631\'");
                                            this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp257, "return of RopGetCollapseState, state S631");
                                            this.Manager.Comment("reaching state \'S679\'");
                                            if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker33))) != -1)) {
                                                this.Manager.Comment("reaching state \'S727\'");
                                            }
                                            else {
                                                this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker33)));
                                            }
                                        }
                                        else {
                                            this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker32)));
                                        }
                                    }
                                    else {
                                        this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker31)));
                                    }
                                }
                                else {
                                    this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopQueryRowsResponseInfo, null, new RopQueryRowsResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopQueryRowsResponseChecker7)));
                                }
                                goto label42;
                            }
                            throw new InvalidOperationException("never reached");
                        label42:
;
                            goto label43;
                        }
                        throw new InvalidOperationException("never reached");
                    label43:
;
                        goto label44;
                    }
                    throw new InvalidOperationException("never reached");
                label44:
;
                    goto label62;
                }
                if ((temp354 == 1)) {
                    this.Manager.Comment("reaching state \'S32\'");
                    bool temp261;
                    this.Manager.Comment("executing step \'call CheckRequirementEnabled(866,out _)\'");
                    this.IMS_OXCTABLAdapterInstance.CheckRequirementEnabled(866, out temp261);
                    this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp261);
                    this.Manager.Comment("reaching state \'S36\'");
                    int temp353 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1CheckRequirementEnabledChecker26)), new ExpectedReturn(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1CheckRequirementEnabledChecker39)));
                    if ((temp353 == 0)) {
                        this.Manager.Comment("reaching state \'S43\'");
                        bool temp262;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(867,out _)\'");
                        this.IMS_OXCTABLAdapterInstance.CheckRequirementEnabled(867, out temp262);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp262);
                        this.Manager.Comment("reaching state \'S51\'");
                        int temp310 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1CheckRequirementEnabledChecker27)), new ExpectedReturn(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1CheckRequirementEnabledChecker32)));
                        if ((temp310 == 0)) {
                            this.Manager.Comment("reaching state \'S65\'");
                            Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp263;
                            this.Manager.Comment("executing step \'call RopQueryRows(Advance,True)\'");
                            temp263 = this.IMS_OXCTABLAdapterInstance.RopQueryRows(((Microsoft.Protocols.TestSuites.Common.QueryRowsFlags)(0)), true);
                            this.Manager.Checkpoint("MS-OXCTABL_R837");
                            this.Manager.Comment("reaching state \'S81\'");
                            this.Manager.Comment("checking step \'return RopQueryRows/success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp263, "return of RopQueryRows, state S81");
                            this.Manager.Comment("reaching state \'S97\'");
                            bool temp264;
                            this.Manager.Comment("executing step \'call CheckRequirementEnabled(610,out _)\'");
                            this.IMS_OXCTABLAdapterInstance.CheckRequirementEnabled(610, out temp264);
                            this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp264);
                            this.Manager.Comment("reaching state \'S113\'");
                            int temp282 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1CheckRequirementEnabledChecker28)), new ExpectedReturn(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1CheckRequirementEnabledChecker31)));
                            if ((temp282 == 0)) {
                                this.Manager.Comment("reaching state \'S141\'");
                                if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopQueryRowsResponseInfo, null, new RopQueryRowsResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopQueryRowsResponseChecker8))) != -1)) {
                                    this.Manager.Comment("reaching state \'S173\'");
                                    Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp265;
                                    this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                                    temp265 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                                    this.Manager.Checkpoint("MS-OXCTABL_R582");
                                    this.Manager.Checkpoint("MS-OXCTABL_R579");
                                    this.Manager.Comment("reaching state \'S205\'");
                                    this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp265, "return of RopGetCollapseState, state S205");
                                    this.Manager.Comment("reaching state \'S237\'");
                                    if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker34))) != -1)) {
                                        this.Manager.Comment("reaching state \'S269\'");
                                        bool temp266;
                                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(748,out _)\'");
                                        this.IMS_OXCTABLAdapterInstance.CheckRequirementEnabled(748, out temp266);
                                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp266);
                                        this.Manager.Comment("reaching state \'S301\'");
                                        int temp276 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1CheckRequirementEnabledChecker29)), new ExpectedReturn(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1CheckRequirementEnabledChecker30)));
                                        if ((temp276 == 0)) {
                                            this.Manager.Comment("reaching state \'S344\'");
                                            Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp267;
                                            this.Manager.Comment("executing step \'call RopExpandRow(False,False,False)\'");
                                            temp267 = this.IMS_OXCTABLAdapterInstance.RopExpandRow(false, false, false);
                                            this.Manager.Checkpoint("MS-OXCTABL_R568");
                                            this.Manager.Checkpoint("MS-OXCTABL_R567");
                                            this.Manager.Comment("reaching state \'S392\'");
                                            this.Manager.Comment("checking step \'return RopExpandRow/success\'");
                                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp267, "return of RopExpandRow, state S392");
                                            this.Manager.Comment("reaching state \'S440\'");
                                            if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopExpandRowResponseInfo, null, new RopExpandRowResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopExpandRowResponseChecker15))) != -1)) {
                                                this.Manager.Comment("reaching state \'S488\'");
                                                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp268;
                                                this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                                                temp268 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                                                this.Manager.Checkpoint("MS-OXCTABL_R582");
                                                this.Manager.Checkpoint("MS-OXCTABL_R579");
                                                this.Manager.Comment("reaching state \'S536\'");
                                                this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp268, "return of RopGetCollapseState, state S536");
                                                this.Manager.Comment("reaching state \'S584\'");
                                                if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker35))) != -1)) {
                                                    this.Manager.Comment("reaching state \'S632\'");
                                                    Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp269;
                                                    this.Manager.Comment("executing step \'call RopSetCollapseState()\'");
                                                    temp269 = this.IMS_OXCTABLAdapterInstance.RopSetCollapseState();
                                                    this.Manager.Checkpoint("MS-OXCTABL_R588");
                                                    this.Manager.Checkpoint("MS-OXCTABL_R585");
                                                    this.Manager.Checkpoint("MS-OXCTABL_R289");
                                                    this.Manager.Comment("reaching state \'S680\'");
                                                    this.Manager.Comment("checking step \'return RopSetCollapseState/success\'");
                                                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp269, "return of RopSetCollapseState, state S680");
                                                    this.Manager.Comment("reaching state \'S728\'");
                                                    Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp270;
                                                    this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                                                    temp270 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                                                    this.Manager.Checkpoint("MS-OXCTABL_R582");
                                                    this.Manager.Checkpoint("MS-OXCTABL_R579");
                                                    this.Manager.Comment("reaching state \'S763\'");
                                                    this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                                                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp270, "return of RopGetCollapseState, state S763");
                                                    this.Manager.Comment("reaching state \'S795\'");
                                                    if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker36))) != -1)) {
                                                        this.Manager.Comment("reaching state \'S827\'");
                                                    }
                                                    else {
                                                        this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker36)));
                                                    }
                                                }
                                                else {
                                                    this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker35)));
                                                }
                                            }
                                            else {
                                                this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopExpandRowResponseInfo, null, new RopExpandRowResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopExpandRowResponseChecker15)));
                                            }
                                            goto label46;
                                        }
                                        if ((temp276 == 1)) {
                                            this.Manager.Comment("reaching state \'S345\'");
                                            Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp271;
                                            this.Manager.Comment("executing step \'call RopExpandRow(False,False,False)\'");
                                            temp271 = this.IMS_OXCTABLAdapterInstance.RopExpandRow(false, false, false);
                                            this.Manager.Checkpoint("MS-OXCTABL_R568");
                                            this.Manager.Checkpoint("MS-OXCTABL_R567");
                                            this.Manager.Comment("reaching state \'S393\'");
                                            this.Manager.Comment("checking step \'return RopExpandRow/success\'");
                                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp271, "return of RopExpandRow, state S393");
                                            this.Manager.Comment("reaching state \'S441\'");
                                            int temp275 = this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopExpandRowResponseInfo, null, new RopExpandRowResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopExpandRowResponseChecker16)), new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopExpandRowResponseInfo, null, new RopExpandRowResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopExpandRowResponseChecker17)));
                                            if ((temp275 == 0)) {
                                                S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteS489();
                                                goto label45;
                                            }
                                            if ((temp275 == 1)) {
                                                S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteS489();
                                                goto label45;
                                            }
                                            this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopExpandRowResponseInfo, null, new RopExpandRowResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopExpandRowResponseChecker16)), new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopExpandRowResponseInfo, null, new RopExpandRowResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopExpandRowResponseChecker17)));
                                        label45:
;
                                            goto label46;
                                        }
                                        throw new InvalidOperationException("never reached");
                                    label46:
;
                                    }
                                    else {
                                        this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker34)));
                                    }
                                }
                                else {
                                    this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopQueryRowsResponseInfo, null, new RopQueryRowsResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopQueryRowsResponseChecker8)));
                                }
                                goto label47;
                            }
                            if ((temp282 == 1)) {
                                this.Manager.Comment("reaching state \'S142\'");
                                if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopQueryRowsResponseInfo, null, new RopQueryRowsResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopQueryRowsResponseChecker9))) != -1)) {
                                    this.Manager.Comment("reaching state \'S174\'");
                                    Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp277;
                                    this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                                    temp277 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                                    this.Manager.Checkpoint("MS-OXCTABL_R582");
                                    this.Manager.Checkpoint("MS-OXCTABL_R579");
                                    this.Manager.Comment("reaching state \'S206\'");
                                    this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp277, "return of RopGetCollapseState, state S206");
                                    this.Manager.Comment("reaching state \'S238\'");
                                    if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker39))) != -1)) {
                                        this.Manager.Comment("reaching state \'S270\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp278;
                                        this.Manager.Comment("executing step \'call RopCollapseRow(False,False)\'");
                                        temp278 = this.IMS_OXCTABLAdapterInstance.RopCollapseRow(false, false);
                                        this.Manager.Checkpoint("MS-OXCTABL_R574");
                                        this.Manager.Comment("reaching state \'S302\'");
                                        this.Manager.Comment("checking step \'return RopCollapseRow/success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp278, "return of RopCollapseRow, state S302");
                                        this.Manager.Comment("reaching state \'S346\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp279;
                                        this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                                        temp279 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                                        this.Manager.Checkpoint("MS-OXCTABL_R582");
                                        this.Manager.Checkpoint("MS-OXCTABL_R579");
                                        this.Manager.Comment("reaching state \'S394\'");
                                        this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp279, "return of RopGetCollapseState, state S394");
                                        this.Manager.Comment("reaching state \'S442\'");
                                        if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker40))) != -1)) {
                                            this.Manager.Comment("reaching state \'S490\'");
                                            Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp280;
                                            this.Manager.Comment("executing step \'call RopSetCollapseState()\'");
                                            temp280 = this.IMS_OXCTABLAdapterInstance.RopSetCollapseState();
                                            this.Manager.Checkpoint("MS-OXCTABL_R588");
                                            this.Manager.Checkpoint("MS-OXCTABL_R585");
                                            this.Manager.Checkpoint("MS-OXCTABL_R289");
                                            this.Manager.Comment("reaching state \'S538\'");
                                            this.Manager.Comment("checking step \'return RopSetCollapseState/success\'");
                                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp280, "return of RopSetCollapseState, state S538");
                                            this.Manager.Comment("reaching state \'S586\'");
                                            Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp281;
                                            this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                                            temp281 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                                            this.Manager.Checkpoint("MS-OXCTABL_R582");
                                            this.Manager.Checkpoint("MS-OXCTABL_R579");
                                            this.Manager.Comment("reaching state \'S634\'");
                                            this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp281, "return of RopGetCollapseState, state S634");
                                            this.Manager.Comment("reaching state \'S682\'");
                                            if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker41))) != -1)) {
                                                this.Manager.Comment("reaching state \'S730\'");
                                            }
                                            else {
                                                this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker41)));
                                            }
                                        }
                                        else {
                                            this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker40)));
                                        }
                                    }
                                    else {
                                        this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker39)));
                                    }
                                }
                                else {
                                    this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopQueryRowsResponseInfo, null, new RopQueryRowsResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopQueryRowsResponseChecker9)));
                                }
                                goto label47;
                            }
                            throw new InvalidOperationException("never reached");
                        label47:
;
                            goto label53;
                        }
                        if ((temp310 == 1)) {
                            this.Manager.Comment("reaching state \'S66\'");
                            Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp283;
                            this.Manager.Comment("executing step \'call RopQueryRows(Advance,True)\'");
                            temp283 = this.IMS_OXCTABLAdapterInstance.RopQueryRows(((Microsoft.Protocols.TestSuites.Common.QueryRowsFlags)(0)), true);
                            this.Manager.Checkpoint("MS-OXCTABL_R837");
                            this.Manager.Comment("reaching state \'S82\'");
                            this.Manager.Comment("checking step \'return RopQueryRows/success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp283, "return of RopQueryRows, state S82");
                            this.Manager.Comment("reaching state \'S98\'");
                            bool temp284;
                            this.Manager.Comment("executing step \'call CheckRequirementEnabled(610,out _)\'");
                            this.IMS_OXCTABLAdapterInstance.CheckRequirementEnabled(610, out temp284);
                            this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp284);
                            this.Manager.Comment("reaching state \'S114\'");
                            int temp309 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1CheckRequirementEnabledChecker33)), new ExpectedReturn(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1CheckRequirementEnabledChecker36)));
                            if ((temp309 == 0)) {
                                this.Manager.Comment("reaching state \'S143\'");
                                if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopQueryRowsResponseInfo, null, new RopQueryRowsResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopQueryRowsResponseChecker10))) != -1)) {
                                    this.Manager.Comment("reaching state \'S175\'");
                                    Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp285;
                                    this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                                    temp285 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                                    this.Manager.Checkpoint("MS-OXCTABL_R582");
                                    this.Manager.Checkpoint("MS-OXCTABL_R579");
                                    this.Manager.Comment("reaching state \'S207\'");
                                    this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp285, "return of RopGetCollapseState, state S207");
                                    this.Manager.Comment("reaching state \'S239\'");
                                    if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker42))) != -1)) {
                                        this.Manager.Comment("reaching state \'S271\'");
                                        bool temp286;
                                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(748,out _)\'");
                                        this.IMS_OXCTABLAdapterInstance.CheckRequirementEnabled(748, out temp286);
                                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp286);
                                        this.Manager.Comment("reaching state \'S303\'");
                                        int temp296 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1CheckRequirementEnabledChecker34)), new ExpectedReturn(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1CheckRequirementEnabledChecker35)));
                                        if ((temp296 == 0)) {
                                            this.Manager.Comment("reaching state \'S347\'");
                                            Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp287;
                                            this.Manager.Comment("executing step \'call RopExpandRow(False,False,False)\'");
                                            temp287 = this.IMS_OXCTABLAdapterInstance.RopExpandRow(false, false, false);
                                            this.Manager.Checkpoint("MS-OXCTABL_R568");
                                            this.Manager.Checkpoint("MS-OXCTABL_R567");
                                            this.Manager.Comment("reaching state \'S395\'");
                                            this.Manager.Comment("checking step \'return RopExpandRow/success\'");
                                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp287, "return of RopExpandRow, state S395");
                                            this.Manager.Comment("reaching state \'S443\'");
                                            if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopExpandRowResponseInfo, null, new RopExpandRowResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopExpandRowResponseChecker18))) != -1)) {
                                                this.Manager.Comment("reaching state \'S491\'");
                                                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp288;
                                                this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                                                temp288 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                                                this.Manager.Checkpoint("MS-OXCTABL_R582");
                                                this.Manager.Checkpoint("MS-OXCTABL_R579");
                                                this.Manager.Comment("reaching state \'S539\'");
                                                this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp288, "return of RopGetCollapseState, state S539");
                                                this.Manager.Comment("reaching state \'S587\'");
                                                if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker43))) != -1)) {
                                                    this.Manager.Comment("reaching state \'S635\'");
                                                    Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp289;
                                                    this.Manager.Comment("executing step \'call RopSetCollapseState()\'");
                                                    temp289 = this.IMS_OXCTABLAdapterInstance.RopSetCollapseState();
                                                    this.Manager.Checkpoint("MS-OXCTABL_R588");
                                                    this.Manager.Checkpoint("MS-OXCTABL_R585");
                                                    this.Manager.Checkpoint("MS-OXCTABL_R289");
                                                    this.Manager.Comment("reaching state \'S683\'");
                                                    this.Manager.Comment("checking step \'return RopSetCollapseState/success\'");
                                                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp289, "return of RopSetCollapseState, state S683");
                                                    this.Manager.Comment("reaching state \'S731\'");
                                                    Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp290;
                                                    this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                                                    temp290 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                                                    this.Manager.Checkpoint("MS-OXCTABL_R582");
                                                    this.Manager.Checkpoint("MS-OXCTABL_R579");
                                                    this.Manager.Comment("reaching state \'S765\'");
                                                    this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                                                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp290, "return of RopGetCollapseState, state S765");
                                                    this.Manager.Comment("reaching state \'S797\'");
                                                    if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker44))) != -1)) {
                                                        this.Manager.Comment("reaching state \'S829\'");
                                                    }
                                                    else {
                                                        this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker44)));
                                                    }
                                                }
                                                else {
                                                    this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker43)));
                                                }
                                            }
                                            else {
                                                this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopExpandRowResponseInfo, null, new RopExpandRowResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopExpandRowResponseChecker18)));
                                            }
                                            goto label49;
                                        }
                                        if ((temp296 == 1)) {
                                            this.Manager.Comment("reaching state \'S348\'");
                                            Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp291;
                                            this.Manager.Comment("executing step \'call RopExpandRow(False,False,False)\'");
                                            temp291 = this.IMS_OXCTABLAdapterInstance.RopExpandRow(false, false, false);
                                            this.Manager.Checkpoint("MS-OXCTABL_R568");
                                            this.Manager.Checkpoint("MS-OXCTABL_R567");
                                            this.Manager.Comment("reaching state \'S396\'");
                                            this.Manager.Comment("checking step \'return RopExpandRow/success\'");
                                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp291, "return of RopExpandRow, state S396");
                                            this.Manager.Comment("reaching state \'S444\'");
                                            int temp295 = this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopExpandRowResponseInfo, null, new RopExpandRowResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopExpandRowResponseChecker19)), new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopExpandRowResponseInfo, null, new RopExpandRowResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopExpandRowResponseChecker20)));
                                            if ((temp295 == 0)) {
                                                S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteS492();
                                                goto label48;
                                            }
                                            if ((temp295 == 1)) {
                                                S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteS492();
                                                goto label48;
                                            }
                                            this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopExpandRowResponseInfo, null, new RopExpandRowResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopExpandRowResponseChecker19)), new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopExpandRowResponseInfo, null, new RopExpandRowResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopExpandRowResponseChecker20)));
                                        label48:
;
                                            goto label49;
                                        }
                                        throw new InvalidOperationException("never reached");
                                    label49:
;
                                    }
                                    else {
                                        this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker42)));
                                    }
                                }
                                else {
                                    this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopQueryRowsResponseInfo, null, new RopQueryRowsResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopQueryRowsResponseChecker10)));
                                }
                                goto label52;
                            }
                            if ((temp309 == 1)) {
                                this.Manager.Comment("reaching state \'S144\'");
                                if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopQueryRowsResponseInfo, null, new RopQueryRowsResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopQueryRowsResponseChecker11))) != -1)) {
                                    this.Manager.Comment("reaching state \'S176\'");
                                    Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp297;
                                    this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                                    temp297 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                                    this.Manager.Checkpoint("MS-OXCTABL_R582");
                                    this.Manager.Checkpoint("MS-OXCTABL_R579");
                                    this.Manager.Comment("reaching state \'S208\'");
                                    this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp297, "return of RopGetCollapseState, state S208");
                                    this.Manager.Comment("reaching state \'S240\'");
                                    if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker47))) != -1)) {
                                        this.Manager.Comment("reaching state \'S272\'");
                                        bool temp298;
                                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(748,out _)\'");
                                        this.IMS_OXCTABLAdapterInstance.CheckRequirementEnabled(748, out temp298);
                                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp298);
                                        this.Manager.Comment("reaching state \'S304\'");
                                        int temp308 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1CheckRequirementEnabledChecker37)), new ExpectedReturn(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1CheckRequirementEnabledChecker38)));
                                        if ((temp308 == 0)) {
                                            this.Manager.Comment("reaching state \'S349\'");
                                            Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp299;
                                            this.Manager.Comment("executing step \'call RopExpandRow(False,False,False)\'");
                                            temp299 = this.IMS_OXCTABLAdapterInstance.RopExpandRow(false, false, false);
                                            this.Manager.Checkpoint("MS-OXCTABL_R568");
                                            this.Manager.Checkpoint("MS-OXCTABL_R567");
                                            this.Manager.Comment("reaching state \'S397\'");
                                            this.Manager.Comment("checking step \'return RopExpandRow/success\'");
                                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp299, "return of RopExpandRow, state S397");
                                            this.Manager.Comment("reaching state \'S445\'");
                                            int temp303 = this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopExpandRowResponseInfo, null, new RopExpandRowResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopExpandRowResponseChecker21)), new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopExpandRowResponseInfo, null, new RopExpandRowResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopExpandRowResponseChecker22)));
                                            if ((temp303 == 0)) {
                                                S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteS493();
                                                goto label50;
                                            }
                                            if ((temp303 == 1)) {
                                                S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteS493();
                                                goto label50;
                                            }
                                            this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopExpandRowResponseInfo, null, new RopExpandRowResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopExpandRowResponseChecker21)), new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopExpandRowResponseInfo, null, new RopExpandRowResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopExpandRowResponseChecker22)));
                                        label50:
;
                                            goto label51;
                                        }
                                        if ((temp308 == 1)) {
                                            this.Manager.Comment("reaching state \'S350\'");
                                            Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp304;
                                            this.Manager.Comment("executing step \'call RopExpandRow(False,False,False)\'");
                                            temp304 = this.IMS_OXCTABLAdapterInstance.RopExpandRow(false, false, false);
                                            this.Manager.Checkpoint("MS-OXCTABL_R568");
                                            this.Manager.Checkpoint("MS-OXCTABL_R567");
                                            this.Manager.Comment("reaching state \'S398\'");
                                            this.Manager.Comment("checking step \'return RopExpandRow/success\'");
                                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp304, "return of RopExpandRow, state S398");
                                            this.Manager.Comment("reaching state \'S446\'");
                                            if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopExpandRowResponseInfo, null, new RopExpandRowResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopExpandRowResponseChecker23))) != -1)) {
                                                this.Manager.Comment("reaching state \'S494\'");
                                                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp305;
                                                this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                                                temp305 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                                                this.Manager.Checkpoint("MS-OXCTABL_R582");
                                                this.Manager.Checkpoint("MS-OXCTABL_R579");
                                                this.Manager.Comment("reaching state \'S542\'");
                                                this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp305, "return of RopGetCollapseState, state S542");
                                                this.Manager.Comment("reaching state \'S590\'");
                                                if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker50))) != -1)) {
                                                    this.Manager.Comment("reaching state \'S638\'");
                                                    Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp306;
                                                    this.Manager.Comment("executing step \'call RopSetCollapseState()\'");
                                                    temp306 = this.IMS_OXCTABLAdapterInstance.RopSetCollapseState();
                                                    this.Manager.Checkpoint("MS-OXCTABL_R588");
                                                    this.Manager.Checkpoint("MS-OXCTABL_R585");
                                                    this.Manager.Checkpoint("MS-OXCTABL_R289");
                                                    this.Manager.Comment("reaching state \'S686\'");
                                                    this.Manager.Comment("checking step \'return RopSetCollapseState/success\'");
                                                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp306, "return of RopSetCollapseState, state S686");
                                                    this.Manager.Comment("reaching state \'S734\'");
                                                    Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp307;
                                                    this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                                                    temp307 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                                                    this.Manager.Checkpoint("MS-OXCTABL_R582");
                                                    this.Manager.Checkpoint("MS-OXCTABL_R579");
                                                    this.Manager.Comment("reaching state \'S768\'");
                                                    this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                                                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp307, "return of RopGetCollapseState, state S768");
                                                    this.Manager.Comment("reaching state \'S800\'");
                                                    if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker51))) != -1)) {
                                                        this.Manager.Comment("reaching state \'S832\'");
                                                    }
                                                    else {
                                                        this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker51)));
                                                    }
                                                }
                                                else {
                                                    this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker50)));
                                                }
                                            }
                                            else {
                                                this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopExpandRowResponseInfo, null, new RopExpandRowResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopExpandRowResponseChecker23)));
                                            }
                                            goto label51;
                                        }
                                        throw new InvalidOperationException("never reached");
                                    label51:
;
                                    }
                                    else {
                                        this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker47)));
                                    }
                                }
                                else {
                                    this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopQueryRowsResponseInfo, null, new RopQueryRowsResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopQueryRowsResponseChecker11)));
                                }
                                goto label52;
                            }
                            throw new InvalidOperationException("never reached");
                        label52:
;
                            goto label53;
                        }
                        throw new InvalidOperationException("never reached");
                    label53:
;
                        goto label61;
                    }
                    if ((temp353 == 1)) {
                        this.Manager.Comment("reaching state \'S44\'");
                        bool temp311;
                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(867,out _)\'");
                        this.IMS_OXCTABLAdapterInstance.CheckRequirementEnabled(867, out temp311);
                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp311);
                        this.Manager.Comment("reaching state \'S52\'");
                        int temp352 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1CheckRequirementEnabledChecker40)), new ExpectedReturn(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1CheckRequirementEnabledChecker45)));
                        if ((temp352 == 0)) {
                            this.Manager.Comment("reaching state \'S67\'");
                            Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp312;
                            this.Manager.Comment("executing step \'call RopQueryRows(Advance,True)\'");
                            temp312 = this.IMS_OXCTABLAdapterInstance.RopQueryRows(((Microsoft.Protocols.TestSuites.Common.QueryRowsFlags)(0)), true);
                            this.Manager.Checkpoint("MS-OXCTABL_R837");
                            this.Manager.Comment("reaching state \'S83\'");
                            this.Manager.Comment("checking step \'return RopQueryRows/success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp312, "return of RopQueryRows, state S83");
                            this.Manager.Comment("reaching state \'S99\'");
                            bool temp313;
                            this.Manager.Comment("executing step \'call CheckRequirementEnabled(610,out _)\'");
                            this.IMS_OXCTABLAdapterInstance.CheckRequirementEnabled(610, out temp313);
                            this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp313);
                            this.Manager.Comment("reaching state \'S115\'");
                            int temp331 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1CheckRequirementEnabledChecker41)), new ExpectedReturn(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1CheckRequirementEnabledChecker44)));
                            if ((temp331 == 0)) {
                                this.Manager.Comment("reaching state \'S145\'");
                                if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopQueryRowsResponseInfo, null, new RopQueryRowsResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopQueryRowsResponseChecker12))) != -1)) {
                                    this.Manager.Comment("reaching state \'S177\'");
                                    Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp314;
                                    this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                                    temp314 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                                    this.Manager.Checkpoint("MS-OXCTABL_R582");
                                    this.Manager.Checkpoint("MS-OXCTABL_R579");
                                    this.Manager.Comment("reaching state \'S209\'");
                                    this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp314, "return of RopGetCollapseState, state S209");
                                    this.Manager.Comment("reaching state \'S241\'");
                                    if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker52))) != -1)) {
                                        this.Manager.Comment("reaching state \'S273\'");
                                        bool temp315;
                                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(748,out _)\'");
                                        this.IMS_OXCTABLAdapterInstance.CheckRequirementEnabled(748, out temp315);
                                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp315);
                                        this.Manager.Comment("reaching state \'S305\'");
                                        int temp325 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1CheckRequirementEnabledChecker42)), new ExpectedReturn(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1CheckRequirementEnabledChecker43)));
                                        if ((temp325 == 0)) {
                                            this.Manager.Comment("reaching state \'S351\'");
                                            Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp316;
                                            this.Manager.Comment("executing step \'call RopExpandRow(False,False,False)\'");
                                            temp316 = this.IMS_OXCTABLAdapterInstance.RopExpandRow(false, false, false);
                                            this.Manager.Checkpoint("MS-OXCTABL_R568");
                                            this.Manager.Checkpoint("MS-OXCTABL_R567");
                                            this.Manager.Comment("reaching state \'S399\'");
                                            this.Manager.Comment("checking step \'return RopExpandRow/success\'");
                                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp316, "return of RopExpandRow, state S399");
                                            this.Manager.Comment("reaching state \'S447\'");
                                            int temp320 = this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopExpandRowResponseInfo, null, new RopExpandRowResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopExpandRowResponseChecker24)), new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopExpandRowResponseInfo, null, new RopExpandRowResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopExpandRowResponseChecker25)));
                                            if ((temp320 == 0)) {
                                                S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteS495();
                                                goto label54;
                                            }
                                            if ((temp320 == 1)) {
                                                S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteS495();
                                                goto label54;
                                            }
                                            this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopExpandRowResponseInfo, null, new RopExpandRowResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopExpandRowResponseChecker24)), new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopExpandRowResponseInfo, null, new RopExpandRowResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopExpandRowResponseChecker25)));
                                        label54:
;
                                            goto label55;
                                        }
                                        if ((temp325 == 1)) {
                                            this.Manager.Comment("reaching state \'S352\'");
                                            Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp321;
                                            this.Manager.Comment("executing step \'call RopExpandRow(False,False,False)\'");
                                            temp321 = this.IMS_OXCTABLAdapterInstance.RopExpandRow(false, false, false);
                                            this.Manager.Checkpoint("MS-OXCTABL_R568");
                                            this.Manager.Checkpoint("MS-OXCTABL_R567");
                                            this.Manager.Comment("reaching state \'S400\'");
                                            this.Manager.Comment("checking step \'return RopExpandRow/success\'");
                                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp321, "return of RopExpandRow, state S400");
                                            this.Manager.Comment("reaching state \'S448\'");
                                            if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopExpandRowResponseInfo, null, new RopExpandRowResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopExpandRowResponseChecker26))) != -1)) {
                                                this.Manager.Comment("reaching state \'S496\'");
                                                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp322;
                                                this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                                                temp322 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                                                this.Manager.Checkpoint("MS-OXCTABL_R582");
                                                this.Manager.Checkpoint("MS-OXCTABL_R579");
                                                this.Manager.Comment("reaching state \'S544\'");
                                                this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp322, "return of RopGetCollapseState, state S544");
                                                this.Manager.Comment("reaching state \'S592\'");
                                                if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker55))) != -1)) {
                                                    this.Manager.Comment("reaching state \'S640\'");
                                                    Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp323;
                                                    this.Manager.Comment("executing step \'call RopSetCollapseState()\'");
                                                    temp323 = this.IMS_OXCTABLAdapterInstance.RopSetCollapseState();
                                                    this.Manager.Checkpoint("MS-OXCTABL_R588");
                                                    this.Manager.Checkpoint("MS-OXCTABL_R585");
                                                    this.Manager.Checkpoint("MS-OXCTABL_R289");
                                                    this.Manager.Comment("reaching state \'S688\'");
                                                    this.Manager.Comment("checking step \'return RopSetCollapseState/success\'");
                                                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp323, "return of RopSetCollapseState, state S688");
                                                    this.Manager.Comment("reaching state \'S736\'");
                                                    Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp324;
                                                    this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                                                    temp324 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                                                    this.Manager.Checkpoint("MS-OXCTABL_R582");
                                                    this.Manager.Checkpoint("MS-OXCTABL_R579");
                                                    this.Manager.Comment("reaching state \'S770\'");
                                                    this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                                                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp324, "return of RopGetCollapseState, state S770");
                                                    this.Manager.Comment("reaching state \'S802\'");
                                                    if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker56))) != -1)) {
                                                        this.Manager.Comment("reaching state \'S834\'");
                                                    }
                                                    else {
                                                        this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker56)));
                                                    }
                                                }
                                                else {
                                                    this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker55)));
                                                }
                                            }
                                            else {
                                                this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopExpandRowResponseInfo, null, new RopExpandRowResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopExpandRowResponseChecker26)));
                                            }
                                            goto label55;
                                        }
                                        throw new InvalidOperationException("never reached");
                                    label55:
;
                                    }
                                    else {
                                        this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker52)));
                                    }
                                }
                                else {
                                    this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopQueryRowsResponseInfo, null, new RopQueryRowsResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopQueryRowsResponseChecker12)));
                                }
                                goto label56;
                            }
                            if ((temp331 == 1)) {
                                this.Manager.Comment("reaching state \'S146\'");
                                if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopQueryRowsResponseInfo, null, new RopQueryRowsResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopQueryRowsResponseChecker13))) != -1)) {
                                    this.Manager.Comment("reaching state \'S178\'");
                                    Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp326;
                                    this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                                    temp326 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                                    this.Manager.Checkpoint("MS-OXCTABL_R582");
                                    this.Manager.Checkpoint("MS-OXCTABL_R579");
                                    this.Manager.Comment("reaching state \'S210\'");
                                    this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp326, "return of RopGetCollapseState, state S210");
                                    this.Manager.Comment("reaching state \'S242\'");
                                    if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker57))) != -1)) {
                                        this.Manager.Comment("reaching state \'S274\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp327;
                                        this.Manager.Comment("executing step \'call RopCollapseRow(False,False)\'");
                                        temp327 = this.IMS_OXCTABLAdapterInstance.RopCollapseRow(false, false);
                                        this.Manager.Checkpoint("MS-OXCTABL_R574");
                                        this.Manager.Comment("reaching state \'S306\'");
                                        this.Manager.Comment("checking step \'return RopCollapseRow/success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp327, "return of RopCollapseRow, state S306");
                                        this.Manager.Comment("reaching state \'S353\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp328;
                                        this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                                        temp328 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                                        this.Manager.Checkpoint("MS-OXCTABL_R582");
                                        this.Manager.Checkpoint("MS-OXCTABL_R579");
                                        this.Manager.Comment("reaching state \'S401\'");
                                        this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp328, "return of RopGetCollapseState, state S401");
                                        this.Manager.Comment("reaching state \'S449\'");
                                        if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker58))) != -1)) {
                                            this.Manager.Comment("reaching state \'S497\'");
                                            Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp329;
                                            this.Manager.Comment("executing step \'call RopSetCollapseState()\'");
                                            temp329 = this.IMS_OXCTABLAdapterInstance.RopSetCollapseState();
                                            this.Manager.Checkpoint("MS-OXCTABL_R588");
                                            this.Manager.Checkpoint("MS-OXCTABL_R585");
                                            this.Manager.Checkpoint("MS-OXCTABL_R289");
                                            this.Manager.Comment("reaching state \'S545\'");
                                            this.Manager.Comment("checking step \'return RopSetCollapseState/success\'");
                                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp329, "return of RopSetCollapseState, state S545");
                                            this.Manager.Comment("reaching state \'S593\'");
                                            Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp330;
                                            this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                                            temp330 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                                            this.Manager.Checkpoint("MS-OXCTABL_R582");
                                            this.Manager.Checkpoint("MS-OXCTABL_R579");
                                            this.Manager.Comment("reaching state \'S641\'");
                                            this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp330, "return of RopGetCollapseState, state S641");
                                            this.Manager.Comment("reaching state \'S689\'");
                                            if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker59))) != -1)) {
                                                this.Manager.Comment("reaching state \'S737\'");
                                            }
                                            else {
                                                this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker59)));
                                            }
                                        }
                                        else {
                                            this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker58)));
                                        }
                                    }
                                    else {
                                        this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker57)));
                                    }
                                }
                                else {
                                    this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopQueryRowsResponseInfo, null, new RopQueryRowsResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopQueryRowsResponseChecker13)));
                                }
                                goto label56;
                            }
                            throw new InvalidOperationException("never reached");
                        label56:
;
                            goto label60;
                        }
                        if ((temp352 == 1)) {
                            this.Manager.Comment("reaching state \'S68\'");
                            Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp332;
                            this.Manager.Comment("executing step \'call RopQueryRows(Advance,True)\'");
                            temp332 = this.IMS_OXCTABLAdapterInstance.RopQueryRows(((Microsoft.Protocols.TestSuites.Common.QueryRowsFlags)(0)), true);
                            this.Manager.Checkpoint("MS-OXCTABL_R837");
                            this.Manager.Comment("reaching state \'S84\'");
                            this.Manager.Comment("checking step \'return RopQueryRows/success\'");
                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp332, "return of RopQueryRows, state S84");
                            this.Manager.Comment("reaching state \'S100\'");
                            bool temp333;
                            this.Manager.Comment("executing step \'call CheckRequirementEnabled(610,out _)\'");
                            this.IMS_OXCTABLAdapterInstance.CheckRequirementEnabled(610, out temp333);
                            this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp333);
                            this.Manager.Comment("reaching state \'S116\'");
                            int temp351 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1CheckRequirementEnabledChecker46)), new ExpectedReturn(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1CheckRequirementEnabledChecker49)));
                            if ((temp351 == 0)) {
                                this.Manager.Comment("reaching state \'S147\'");
                                if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopQueryRowsResponseInfo, null, new RopQueryRowsResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopQueryRowsResponseChecker14))) != -1)) {
                                    this.Manager.Comment("reaching state \'S179\'");
                                    Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp334;
                                    this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                                    temp334 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                                    this.Manager.Checkpoint("MS-OXCTABL_R582");
                                    this.Manager.Checkpoint("MS-OXCTABL_R579");
                                    this.Manager.Comment("reaching state \'S211\'");
                                    this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp334, "return of RopGetCollapseState, state S211");
                                    this.Manager.Comment("reaching state \'S243\'");
                                    if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker60))) != -1)) {
                                        this.Manager.Comment("reaching state \'S275\'");
                                        bool temp335;
                                        this.Manager.Comment("executing step \'call CheckRequirementEnabled(748,out _)\'");
                                        this.IMS_OXCTABLAdapterInstance.CheckRequirementEnabled(748, out temp335);
                                        this.Manager.AddReturn(CheckRequirementEnabledInfo, null, temp335);
                                        this.Manager.Comment("reaching state \'S307\'");
                                        int temp345 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1CheckRequirementEnabledChecker47)), new ExpectedReturn(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.CheckRequirementEnabledInfo, null, new CheckRequirementEnabledDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1CheckRequirementEnabledChecker48)));
                                        if ((temp345 == 0)) {
                                            this.Manager.Comment("reaching state \'S354\'");
                                            Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp336;
                                            this.Manager.Comment("executing step \'call RopExpandRow(False,False,False)\'");
                                            temp336 = this.IMS_OXCTABLAdapterInstance.RopExpandRow(false, false, false);
                                            this.Manager.Checkpoint("MS-OXCTABL_R568");
                                            this.Manager.Checkpoint("MS-OXCTABL_R567");
                                            this.Manager.Comment("reaching state \'S402\'");
                                            this.Manager.Comment("checking step \'return RopExpandRow/success\'");
                                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp336, "return of RopExpandRow, state S402");
                                            this.Manager.Comment("reaching state \'S450\'");
                                            if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopExpandRowResponseInfo, null, new RopExpandRowResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopExpandRowResponseChecker27))) != -1)) {
                                                this.Manager.Comment("reaching state \'S498\'");
                                                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp337;
                                                this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                                                temp337 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                                                this.Manager.Checkpoint("MS-OXCTABL_R582");
                                                this.Manager.Checkpoint("MS-OXCTABL_R579");
                                                this.Manager.Comment("reaching state \'S546\'");
                                                this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                                                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp337, "return of RopGetCollapseState, state S546");
                                                this.Manager.Comment("reaching state \'S594\'");
                                                if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker61))) != -1)) {
                                                    this.Manager.Comment("reaching state \'S642\'");
                                                    Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp338;
                                                    this.Manager.Comment("executing step \'call RopSetCollapseState()\'");
                                                    temp338 = this.IMS_OXCTABLAdapterInstance.RopSetCollapseState();
                                                    this.Manager.Checkpoint("MS-OXCTABL_R588");
                                                    this.Manager.Checkpoint("MS-OXCTABL_R585");
                                                    this.Manager.Checkpoint("MS-OXCTABL_R289");
                                                    this.Manager.Comment("reaching state \'S690\'");
                                                    this.Manager.Comment("checking step \'return RopSetCollapseState/success\'");
                                                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp338, "return of RopSetCollapseState, state S690");
                                                    this.Manager.Comment("reaching state \'S738\'");
                                                    Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp339;
                                                    this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                                                    temp339 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                                                    this.Manager.Checkpoint("MS-OXCTABL_R582");
                                                    this.Manager.Checkpoint("MS-OXCTABL_R579");
                                                    this.Manager.Comment("reaching state \'S771\'");
                                                    this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                                                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp339, "return of RopGetCollapseState, state S771");
                                                    this.Manager.Comment("reaching state \'S803\'");
                                                    if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker62))) != -1)) {
                                                        this.Manager.Comment("reaching state \'S835\'");
                                                    }
                                                    else {
                                                        this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker62)));
                                                    }
                                                }
                                                else {
                                                    this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker61)));
                                                }
                                            }
                                            else {
                                                this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopExpandRowResponseInfo, null, new RopExpandRowResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopExpandRowResponseChecker27)));
                                            }
                                            goto label58;
                                        }
                                        if ((temp345 == 1)) {
                                            this.Manager.Comment("reaching state \'S355\'");
                                            Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp340;
                                            this.Manager.Comment("executing step \'call RopExpandRow(False,False,False)\'");
                                            temp340 = this.IMS_OXCTABLAdapterInstance.RopExpandRow(false, false, false);
                                            this.Manager.Checkpoint("MS-OXCTABL_R568");
                                            this.Manager.Checkpoint("MS-OXCTABL_R567");
                                            this.Manager.Comment("reaching state \'S403\'");
                                            this.Manager.Comment("checking step \'return RopExpandRow/success\'");
                                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp340, "return of RopExpandRow, state S403");
                                            this.Manager.Comment("reaching state \'S451\'");
                                            int temp344 = this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopExpandRowResponseInfo, null, new RopExpandRowResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopExpandRowResponseChecker28)), new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopExpandRowResponseInfo, null, new RopExpandRowResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopExpandRowResponseChecker29)));
                                            if ((temp344 == 0)) {
                                                S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteS499();
                                                goto label57;
                                            }
                                            if ((temp344 == 1)) {
                                                S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteS499();
                                                goto label57;
                                            }
                                            this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopExpandRowResponseInfo, null, new RopExpandRowResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopExpandRowResponseChecker28)), new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopExpandRowResponseInfo, null, new RopExpandRowResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopExpandRowResponseChecker29)));
                                        label57:
;
                                            goto label58;
                                        }
                                        throw new InvalidOperationException("never reached");
                                    label58:
;
                                    }
                                    else {
                                        this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker60)));
                                    }
                                }
                                else {
                                    this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopQueryRowsResponseInfo, null, new RopQueryRowsResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopQueryRowsResponseChecker14)));
                                }
                                goto label59;
                            }
                            if ((temp351 == 1)) {
                                this.Manager.Comment("reaching state \'S148\'");
                                if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopQueryRowsResponseInfo, null, new RopQueryRowsResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopQueryRowsResponseChecker15))) != -1)) {
                                    this.Manager.Comment("reaching state \'S180\'");
                                    Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp346;
                                    this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                                    temp346 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                                    this.Manager.Checkpoint("MS-OXCTABL_R582");
                                    this.Manager.Checkpoint("MS-OXCTABL_R579");
                                    this.Manager.Comment("reaching state \'S212\'");
                                    this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                                    TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp346, "return of RopGetCollapseState, state S212");
                                    this.Manager.Comment("reaching state \'S244\'");
                                    if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker65))) != -1)) {
                                        this.Manager.Comment("reaching state \'S276\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp347;
                                        this.Manager.Comment("executing step \'call RopCollapseRow(False,False)\'");
                                        temp347 = this.IMS_OXCTABLAdapterInstance.RopCollapseRow(false, false);
                                        this.Manager.Checkpoint("MS-OXCTABL_R574");
                                        this.Manager.Comment("reaching state \'S308\'");
                                        this.Manager.Comment("checking step \'return RopCollapseRow/success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp347, "return of RopCollapseRow, state S308");
                                        this.Manager.Comment("reaching state \'S356\'");
                                        Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp348;
                                        this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                                        temp348 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                                        this.Manager.Checkpoint("MS-OXCTABL_R582");
                                        this.Manager.Checkpoint("MS-OXCTABL_R579");
                                        this.Manager.Comment("reaching state \'S404\'");
                                        this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                                        TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp348, "return of RopGetCollapseState, state S404");
                                        this.Manager.Comment("reaching state \'S452\'");
                                        if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker66))) != -1)) {
                                            this.Manager.Comment("reaching state \'S500\'");
                                            Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp349;
                                            this.Manager.Comment("executing step \'call RopSetCollapseState()\'");
                                            temp349 = this.IMS_OXCTABLAdapterInstance.RopSetCollapseState();
                                            this.Manager.Checkpoint("MS-OXCTABL_R588");
                                            this.Manager.Checkpoint("MS-OXCTABL_R585");
                                            this.Manager.Checkpoint("MS-OXCTABL_R289");
                                            this.Manager.Comment("reaching state \'S548\'");
                                            this.Manager.Comment("checking step \'return RopSetCollapseState/success\'");
                                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp349, "return of RopSetCollapseState, state S548");
                                            this.Manager.Comment("reaching state \'S596\'");
                                            Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp350;
                                            this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                                            temp350 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                                            this.Manager.Checkpoint("MS-OXCTABL_R582");
                                            this.Manager.Checkpoint("MS-OXCTABL_R579");
                                            this.Manager.Comment("reaching state \'S644\'");
                                            this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                                            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp350, "return of RopGetCollapseState, state S644");
                                            this.Manager.Comment("reaching state \'S692\'");
                                            if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker67))) != -1)) {
                                                this.Manager.Comment("reaching state \'S740\'");
                                            }
                                            else {
                                                this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker67)));
                                            }
                                        }
                                        else {
                                            this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker66)));
                                        }
                                    }
                                    else {
                                        this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker65)));
                                    }
                                }
                                else {
                                    this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopQueryRowsResponseInfo, null, new RopQueryRowsResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopQueryRowsResponseChecker15)));
                                }
                                goto label59;
                            }
                            throw new InvalidOperationException("never reached");
                        label59:
;
                            goto label60;
                        }
                        throw new InvalidOperationException("never reached");
                    label60:
;
                        goto label61;
                    }
                    throw new InvalidOperationException("never reached");
                label61:
;
                    goto label62;
                }
                throw new InvalidOperationException("never reached");
            label62:
;
                goto label63;
            }
            if ((temp355 == 1)) {
                this.Manager.Comment("reaching state \'S9\'");
                goto label63;
            }
            throw new InvalidOperationException("never reached");
        label63:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1CheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S3");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1CheckRequirementEnabledChecker(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S28");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1CheckRequirementEnabledChecker1(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S35");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1CheckRequirementEnabledChecker2(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S49");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1CheckRequirementEnabledChecker3(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S109");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopQueryRowsResponseChecker(Microsoft.Protocols.TestSuites.Common.QueryRowsFlags queryRowFlags, bool bForwardRead, bool bZeroRow, Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopType ropType, bool bIsCorrectRowCount, bool bCursorPositionChanged, bool bIsLatestRopData, bool bIsLastSuccessRopData, Microsoft.Protocols.TestSuites.MS_OXCTABL.BookmarkType queryRowOrigin, bool isRequestCountTooLarger) {
            this.Manager.Comment("checking step \'event RopQueryRowsResponse(Advance,True,False,SETCOLUMNS,True,True" +
                    ",True,True,BOOKMARK_CURRENT,False)\'");
            try {
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.Common.QueryRowsFlags>(this.Manager, ((Microsoft.Protocols.TestSuites.Common.QueryRowsFlags)(0)), queryRowFlags, "queryRowFlags of RopQueryRowsResponse, state S133");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bForwardRead, "bForwardRead of RopQueryRowsResponse, state S133");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, bZeroRow, "bZeroRow of RopQueryRowsResponse, state S133");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopType>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopType)(0)), ropType, "ropType of RopQueryRowsResponse, state S133");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bIsCorrectRowCount, "bIsCorrectRowCount of RopQueryRowsResponse, state S133");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bCursorPositionChanged, "bCursorPositionChanged of RopQueryRowsResponse, state S133");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bIsLatestRopData, "bIsLatestRopData of RopQueryRowsResponse, state S133");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bIsLastSuccessRopData, "bIsLastSuccessRopData of RopQueryRowsResponse, state S133");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.BookmarkType>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.BookmarkType)(1)), queryRowOrigin, "queryRowOrigin of RopQueryRowsResponse, state S133");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isRequestCountTooLarger, "isRequestCountTooLarger of RopQueryRowsResponse, state S133");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R468, MS-OXCTABL_R118, MS-OXCTABL_R462, M" +
                        "S-OXCTABL_R28, MS-OXCTABL_R726, MS-OXCTABL_R472, MS-OXCTABL_R427, MS-OXCTABL_R42" +
                        "6, MS-OXCTABL_R116");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R468");
            this.Manager.Checkpoint("MS-OXCTABL_R118");
            this.Manager.Checkpoint("MS-OXCTABL_R462");
            this.Manager.Checkpoint("MS-OXCTABL_R28");
            this.Manager.Checkpoint("MS-OXCTABL_R726");
            this.Manager.Checkpoint("MS-OXCTABL_R472");
            this.Manager.Checkpoint("MS-OXCTABL_R427");
            this.Manager.Checkpoint("MS-OXCTABL_R426");
            this.Manager.Checkpoint("MS-OXCTABL_R116");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(False,False)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S229");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S229");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1CheckRequirementEnabledChecker4(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S293");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopExpandRowResponseChecker(bool isLastSetColumnData) {
            this.Manager.Comment("checking step \'event RopExpandRowResponse(True)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isLastSetColumnData, "isLastSetColumnData of RopExpandRowResponse, state S427");
        }
        
        private void S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteS475() {
            this.Manager.Comment("reaching state \'S475\'");
            Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp175;
            this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
            temp175 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
            this.Manager.Checkpoint("MS-OXCTABL_R582");
            this.Manager.Checkpoint("MS-OXCTABL_R579");
            this.Manager.Comment("reaching state \'S523\'");
            this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp175, "return of RopGetCollapseState, state S523");
            this.Manager.Comment("reaching state \'S571\'");
            if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker1))) != -1)) {
                this.Manager.Comment("reaching state \'S619\'");
                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp176;
                this.Manager.Comment("executing step \'call RopSetCollapseState()\'");
                temp176 = this.IMS_OXCTABLAdapterInstance.RopSetCollapseState();
                this.Manager.Checkpoint("MS-OXCTABL_R588");
                this.Manager.Checkpoint("MS-OXCTABL_R585");
                this.Manager.Checkpoint("MS-OXCTABL_R289");
                this.Manager.Comment("reaching state \'S667\'");
                this.Manager.Comment("checking step \'return RopSetCollapseState/success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp176, "return of RopSetCollapseState, state S667");
                this.Manager.Comment("reaching state \'S715\'");
                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp177;
                this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                temp177 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                this.Manager.Checkpoint("MS-OXCTABL_R582");
                this.Manager.Checkpoint("MS-OXCTABL_R579");
                this.Manager.Comment("reaching state \'S753\'");
                this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp177, "return of RopGetCollapseState, state S753");
                this.Manager.Comment("reaching state \'S785\'");
                if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker2))) != -1)) {
                    this.Manager.Comment("reaching state \'S817\'");
                }
                else {
                    this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker2)));
                }
            }
            else {
                this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker1)));
            }
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker1(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(False,False)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S571");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S571");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker2(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(True,True)\'");
            try {
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S785");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S785");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R304");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R304");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopExpandRowResponseChecker1(bool isLastSetColumnData) {
            this.Manager.Comment("checking step \'event RopExpandRowResponse(False)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isLastSetColumnData, "isLastSetColumnData of RopExpandRowResponse, state S427");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1CheckRequirementEnabledChecker5(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S293");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopExpandRowResponseChecker2(bool isLastSetColumnData) {
            this.Manager.Comment("checking step \'event RopExpandRowResponse(True)\'");
            try {
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isLastSetColumnData, "isLastSetColumnData of RopExpandRowResponse, state S428");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R814, MS-OXCTABL_R825");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R814");
            this.Manager.Checkpoint("MS-OXCTABL_R825");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker3(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(False,False)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S572");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S572");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker4(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(True,True)\'");
            try {
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S786");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S786");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R304");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R304");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1CheckRequirementEnabledChecker6(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S109");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopQueryRowsResponseChecker1(Microsoft.Protocols.TestSuites.Common.QueryRowsFlags queryRowFlags, bool bForwardRead, bool bZeroRow, Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopType ropType, bool bIsCorrectRowCount, bool bCursorPositionChanged, bool bIsLatestRopData, bool bIsLastSuccessRopData, Microsoft.Protocols.TestSuites.MS_OXCTABL.BookmarkType queryRowOrigin, bool isRequestCountTooLarger) {
            this.Manager.Comment("checking step \'event RopQueryRowsResponse(Advance,True,False,SETCOLUMNS,True,True" +
                    ",True,True,BOOKMARK_CURRENT,False)\'");
            try {
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.Common.QueryRowsFlags>(this.Manager, ((Microsoft.Protocols.TestSuites.Common.QueryRowsFlags)(0)), queryRowFlags, "queryRowFlags of RopQueryRowsResponse, state S134");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bForwardRead, "bForwardRead of RopQueryRowsResponse, state S134");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, bZeroRow, "bZeroRow of RopQueryRowsResponse, state S134");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopType>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopType)(0)), ropType, "ropType of RopQueryRowsResponse, state S134");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bIsCorrectRowCount, "bIsCorrectRowCount of RopQueryRowsResponse, state S134");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bCursorPositionChanged, "bCursorPositionChanged of RopQueryRowsResponse, state S134");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bIsLatestRopData, "bIsLatestRopData of RopQueryRowsResponse, state S134");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bIsLastSuccessRopData, "bIsLastSuccessRopData of RopQueryRowsResponse, state S134");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.BookmarkType>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.BookmarkType)(1)), queryRowOrigin, "queryRowOrigin of RopQueryRowsResponse, state S134");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isRequestCountTooLarger, "isRequestCountTooLarger of RopQueryRowsResponse, state S134");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R468, MS-OXCTABL_R118, MS-OXCTABL_R462, M" +
                        "S-OXCTABL_R28, MS-OXCTABL_R726, MS-OXCTABL_R472, MS-OXCTABL_R427, MS-OXCTABL_R42" +
                        "6, MS-OXCTABL_R116, MS-OXCTABL_R610");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R468");
            this.Manager.Checkpoint("MS-OXCTABL_R118");
            this.Manager.Checkpoint("MS-OXCTABL_R462");
            this.Manager.Checkpoint("MS-OXCTABL_R28");
            this.Manager.Checkpoint("MS-OXCTABL_R726");
            this.Manager.Checkpoint("MS-OXCTABL_R472");
            this.Manager.Checkpoint("MS-OXCTABL_R427");
            this.Manager.Checkpoint("MS-OXCTABL_R426");
            this.Manager.Checkpoint("MS-OXCTABL_R116");
            this.Manager.Checkpoint("MS-OXCTABL_R610");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker5(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(False,False)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S230");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S230");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker6(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(False,False)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S429");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S429");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker7(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(True,True)\'");
            try {
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S669");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S669");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R304");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R304");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1CheckRequirementEnabledChecker7(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S49");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1CheckRequirementEnabledChecker8(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S110");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopQueryRowsResponseChecker2(Microsoft.Protocols.TestSuites.Common.QueryRowsFlags queryRowFlags, bool bForwardRead, bool bZeroRow, Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopType ropType, bool bIsCorrectRowCount, bool bCursorPositionChanged, bool bIsLatestRopData, bool bIsLastSuccessRopData, Microsoft.Protocols.TestSuites.MS_OXCTABL.BookmarkType queryRowOrigin, bool isRequestCountTooLarger) {
            this.Manager.Comment("checking step \'event RopQueryRowsResponse(Advance,True,False,SETCOLUMNS,True,True" +
                    ",True,True,BOOKMARK_CURRENT,False)\'");
            try {
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.Common.QueryRowsFlags>(this.Manager, ((Microsoft.Protocols.TestSuites.Common.QueryRowsFlags)(0)), queryRowFlags, "queryRowFlags of RopQueryRowsResponse, state S135");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bForwardRead, "bForwardRead of RopQueryRowsResponse, state S135");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, bZeroRow, "bZeroRow of RopQueryRowsResponse, state S135");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopType>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopType)(0)), ropType, "ropType of RopQueryRowsResponse, state S135");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bIsCorrectRowCount, "bIsCorrectRowCount of RopQueryRowsResponse, state S135");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bCursorPositionChanged, "bCursorPositionChanged of RopQueryRowsResponse, state S135");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bIsLatestRopData, "bIsLatestRopData of RopQueryRowsResponse, state S135");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bIsLastSuccessRopData, "bIsLastSuccessRopData of RopQueryRowsResponse, state S135");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.BookmarkType>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.BookmarkType)(1)), queryRowOrigin, "queryRowOrigin of RopQueryRowsResponse, state S135");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isRequestCountTooLarger, "isRequestCountTooLarger of RopQueryRowsResponse, state S135");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R468, MS-OXCTABL_R118, MS-OXCTABL_R462, M" +
                        "S-OXCTABL_R28, MS-OXCTABL_R726, MS-OXCTABL_R472, MS-OXCTABL_R427, MS-OXCTABL_R42" +
                        "6, MS-OXCTABL_R116");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R468");
            this.Manager.Checkpoint("MS-OXCTABL_R118");
            this.Manager.Checkpoint("MS-OXCTABL_R462");
            this.Manager.Checkpoint("MS-OXCTABL_R28");
            this.Manager.Checkpoint("MS-OXCTABL_R726");
            this.Manager.Checkpoint("MS-OXCTABL_R472");
            this.Manager.Checkpoint("MS-OXCTABL_R427");
            this.Manager.Checkpoint("MS-OXCTABL_R426");
            this.Manager.Checkpoint("MS-OXCTABL_R116");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker8(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(False,False)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S231");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S231");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1CheckRequirementEnabledChecker9(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S295");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopExpandRowResponseChecker3(bool isLastSetColumnData) {
            this.Manager.Comment("checking step \'event RopExpandRowResponse(True)\'");
            try {
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isLastSetColumnData, "isLastSetColumnData of RopExpandRowResponse, state S430");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R814, MS-OXCTABL_R825");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R814");
            this.Manager.Checkpoint("MS-OXCTABL_R825");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker9(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(False,False)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S574");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S574");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker10(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(True,True)\'");
            try {
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S787");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S787");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R304");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R304");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1CheckRequirementEnabledChecker10(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S295");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopExpandRowResponseChecker4(bool isLastSetColumnData) {
            this.Manager.Comment("checking step \'event RopExpandRowResponse(True)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isLastSetColumnData, "isLastSetColumnData of RopExpandRowResponse, state S431");
        }
        
        private void S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteS479() {
            this.Manager.Comment("reaching state \'S479\'");
            Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp199;
            this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
            temp199 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
            this.Manager.Checkpoint("MS-OXCTABL_R582");
            this.Manager.Checkpoint("MS-OXCTABL_R579");
            this.Manager.Comment("reaching state \'S527\'");
            this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp199, "return of RopGetCollapseState, state S527");
            this.Manager.Comment("reaching state \'S575\'");
            if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker11))) != -1)) {
                this.Manager.Comment("reaching state \'S623\'");
                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp200;
                this.Manager.Comment("executing step \'call RopSetCollapseState()\'");
                temp200 = this.IMS_OXCTABLAdapterInstance.RopSetCollapseState();
                this.Manager.Checkpoint("MS-OXCTABL_R588");
                this.Manager.Checkpoint("MS-OXCTABL_R585");
                this.Manager.Checkpoint("MS-OXCTABL_R289");
                this.Manager.Comment("reaching state \'S671\'");
                this.Manager.Comment("checking step \'return RopSetCollapseState/success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp200, "return of RopSetCollapseState, state S671");
                this.Manager.Comment("reaching state \'S719\'");
                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp201;
                this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                temp201 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                this.Manager.Checkpoint("MS-OXCTABL_R582");
                this.Manager.Checkpoint("MS-OXCTABL_R579");
                this.Manager.Comment("reaching state \'S756\'");
                this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp201, "return of RopGetCollapseState, state S756");
                this.Manager.Comment("reaching state \'S788\'");
                if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker12))) != -1)) {
                    this.Manager.Comment("reaching state \'S820\'");
                }
                else {
                    this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker12)));
                }
            }
            else {
                this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker11)));
            }
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker11(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(False,False)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S575");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S575");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker12(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(True,True)\'");
            try {
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S788");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S788");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R304");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R304");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopExpandRowResponseChecker5(bool isLastSetColumnData) {
            this.Manager.Comment("checking step \'event RopExpandRowResponse(False)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isLastSetColumnData, "isLastSetColumnData of RopExpandRowResponse, state S431");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1CheckRequirementEnabledChecker11(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S110");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopQueryRowsResponseChecker3(Microsoft.Protocols.TestSuites.Common.QueryRowsFlags queryRowFlags, bool bForwardRead, bool bZeroRow, Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopType ropType, bool bIsCorrectRowCount, bool bCursorPositionChanged, bool bIsLatestRopData, bool bIsLastSuccessRopData, Microsoft.Protocols.TestSuites.MS_OXCTABL.BookmarkType queryRowOrigin, bool isRequestCountTooLarger) {
            this.Manager.Comment("checking step \'event RopQueryRowsResponse(Advance,True,False,SETCOLUMNS,True,True" +
                    ",True,True,BOOKMARK_CURRENT,False)\'");
            try {
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.Common.QueryRowsFlags>(this.Manager, ((Microsoft.Protocols.TestSuites.Common.QueryRowsFlags)(0)), queryRowFlags, "queryRowFlags of RopQueryRowsResponse, state S136");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bForwardRead, "bForwardRead of RopQueryRowsResponse, state S136");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, bZeroRow, "bZeroRow of RopQueryRowsResponse, state S136");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopType>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopType)(0)), ropType, "ropType of RopQueryRowsResponse, state S136");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bIsCorrectRowCount, "bIsCorrectRowCount of RopQueryRowsResponse, state S136");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bCursorPositionChanged, "bCursorPositionChanged of RopQueryRowsResponse, state S136");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bIsLatestRopData, "bIsLatestRopData of RopQueryRowsResponse, state S136");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bIsLastSuccessRopData, "bIsLastSuccessRopData of RopQueryRowsResponse, state S136");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.BookmarkType>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.BookmarkType)(1)), queryRowOrigin, "queryRowOrigin of RopQueryRowsResponse, state S136");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isRequestCountTooLarger, "isRequestCountTooLarger of RopQueryRowsResponse, state S136");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R468, MS-OXCTABL_R118, MS-OXCTABL_R462, M" +
                        "S-OXCTABL_R28, MS-OXCTABL_R726, MS-OXCTABL_R472, MS-OXCTABL_R427, MS-OXCTABL_R42" +
                        "6, MS-OXCTABL_R116, MS-OXCTABL_R610");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R468");
            this.Manager.Checkpoint("MS-OXCTABL_R118");
            this.Manager.Checkpoint("MS-OXCTABL_R462");
            this.Manager.Checkpoint("MS-OXCTABL_R28");
            this.Manager.Checkpoint("MS-OXCTABL_R726");
            this.Manager.Checkpoint("MS-OXCTABL_R472");
            this.Manager.Checkpoint("MS-OXCTABL_R427");
            this.Manager.Checkpoint("MS-OXCTABL_R426");
            this.Manager.Checkpoint("MS-OXCTABL_R116");
            this.Manager.Checkpoint("MS-OXCTABL_R610");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker13(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(False,False)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S232");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S232");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1CheckRequirementEnabledChecker12(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S296");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopExpandRowResponseChecker6(bool isLastSetColumnData) {
            this.Manager.Comment("checking step \'event RopExpandRowResponse(True)\'");
            try {
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isLastSetColumnData, "isLastSetColumnData of RopExpandRowResponse, state S432");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R814, MS-OXCTABL_R825");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R814");
            this.Manager.Checkpoint("MS-OXCTABL_R825");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker14(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(False,False)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S576");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S576");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker15(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(True,True)\'");
            try {
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S789");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S789");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R304");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R304");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1CheckRequirementEnabledChecker13(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S296");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopExpandRowResponseChecker7(bool isLastSetColumnData) {
            this.Manager.Comment("checking step \'event RopExpandRowResponse(True)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isLastSetColumnData, "isLastSetColumnData of RopExpandRowResponse, state S433");
        }
        
        private void S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteS481() {
            this.Manager.Comment("reaching state \'S481\'");
            Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp211;
            this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
            temp211 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
            this.Manager.Checkpoint("MS-OXCTABL_R582");
            this.Manager.Checkpoint("MS-OXCTABL_R579");
            this.Manager.Comment("reaching state \'S529\'");
            this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp211, "return of RopGetCollapseState, state S529");
            this.Manager.Comment("reaching state \'S577\'");
            if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker16))) != -1)) {
                this.Manager.Comment("reaching state \'S625\'");
                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp212;
                this.Manager.Comment("executing step \'call RopSetCollapseState()\'");
                temp212 = this.IMS_OXCTABLAdapterInstance.RopSetCollapseState();
                this.Manager.Checkpoint("MS-OXCTABL_R588");
                this.Manager.Checkpoint("MS-OXCTABL_R585");
                this.Manager.Checkpoint("MS-OXCTABL_R289");
                this.Manager.Comment("reaching state \'S673\'");
                this.Manager.Comment("checking step \'return RopSetCollapseState/success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp212, "return of RopSetCollapseState, state S673");
                this.Manager.Comment("reaching state \'S721\'");
                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp213;
                this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                temp213 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                this.Manager.Checkpoint("MS-OXCTABL_R582");
                this.Manager.Checkpoint("MS-OXCTABL_R579");
                this.Manager.Comment("reaching state \'S758\'");
                this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp213, "return of RopGetCollapseState, state S758");
                this.Manager.Comment("reaching state \'S790\'");
                if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker17))) != -1)) {
                    this.Manager.Comment("reaching state \'S822\'");
                }
                else {
                    this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker17)));
                }
            }
            else {
                this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker16)));
            }
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker16(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(False,False)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S577");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S577");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker17(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(True,True)\'");
            try {
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S790");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S790");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R304");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R304");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopExpandRowResponseChecker8(bool isLastSetColumnData) {
            this.Manager.Comment("checking step \'event RopExpandRowResponse(False)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isLastSetColumnData, "isLastSetColumnData of RopExpandRowResponse, state S433");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1CheckRequirementEnabledChecker14(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S35");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1CheckRequirementEnabledChecker15(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S50");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1CheckRequirementEnabledChecker16(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S111");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopQueryRowsResponseChecker4(Microsoft.Protocols.TestSuites.Common.QueryRowsFlags queryRowFlags, bool bForwardRead, bool bZeroRow, Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopType ropType, bool bIsCorrectRowCount, bool bCursorPositionChanged, bool bIsLatestRopData, bool bIsLastSuccessRopData, Microsoft.Protocols.TestSuites.MS_OXCTABL.BookmarkType queryRowOrigin, bool isRequestCountTooLarger) {
            this.Manager.Comment("checking step \'event RopQueryRowsResponse(Advance,True,False,SETCOLUMNS,True,True" +
                    ",True,True,BOOKMARK_CURRENT,False)\'");
            try {
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.Common.QueryRowsFlags>(this.Manager, ((Microsoft.Protocols.TestSuites.Common.QueryRowsFlags)(0)), queryRowFlags, "queryRowFlags of RopQueryRowsResponse, state S137");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bForwardRead, "bForwardRead of RopQueryRowsResponse, state S137");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, bZeroRow, "bZeroRow of RopQueryRowsResponse, state S137");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopType>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopType)(0)), ropType, "ropType of RopQueryRowsResponse, state S137");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bIsCorrectRowCount, "bIsCorrectRowCount of RopQueryRowsResponse, state S137");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bCursorPositionChanged, "bCursorPositionChanged of RopQueryRowsResponse, state S137");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bIsLatestRopData, "bIsLatestRopData of RopQueryRowsResponse, state S137");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bIsLastSuccessRopData, "bIsLastSuccessRopData of RopQueryRowsResponse, state S137");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.BookmarkType>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.BookmarkType)(1)), queryRowOrigin, "queryRowOrigin of RopQueryRowsResponse, state S137");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isRequestCountTooLarger, "isRequestCountTooLarger of RopQueryRowsResponse, state S137");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R468, MS-OXCTABL_R118, MS-OXCTABL_R462, M" +
                        "S-OXCTABL_R28, MS-OXCTABL_R726, MS-OXCTABL_R472, MS-OXCTABL_R427, MS-OXCTABL_R42" +
                        "6, MS-OXCTABL_R116");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R468");
            this.Manager.Checkpoint("MS-OXCTABL_R118");
            this.Manager.Checkpoint("MS-OXCTABL_R462");
            this.Manager.Checkpoint("MS-OXCTABL_R28");
            this.Manager.Checkpoint("MS-OXCTABL_R726");
            this.Manager.Checkpoint("MS-OXCTABL_R472");
            this.Manager.Checkpoint("MS-OXCTABL_R427");
            this.Manager.Checkpoint("MS-OXCTABL_R426");
            this.Manager.Checkpoint("MS-OXCTABL_R116");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker18(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(False,False)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S233");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S233");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1CheckRequirementEnabledChecker17(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S297");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopExpandRowResponseChecker9(bool isLastSetColumnData) {
            this.Manager.Comment("checking step \'event RopExpandRowResponse(True)\'");
            try {
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isLastSetColumnData, "isLastSetColumnData of RopExpandRowResponse, state S434");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R814, MS-OXCTABL_R825");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R814");
            this.Manager.Checkpoint("MS-OXCTABL_R825");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker19(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(False,False)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S578");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S578");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker20(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(True,True)\'");
            try {
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S791");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S791");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R304");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R304");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1CheckRequirementEnabledChecker18(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S297");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopExpandRowResponseChecker10(bool isLastSetColumnData) {
            this.Manager.Comment("checking step \'event RopExpandRowResponse(True)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isLastSetColumnData, "isLastSetColumnData of RopExpandRowResponse, state S435");
        }
        
        private void S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteS483() {
            this.Manager.Comment("reaching state \'S483\'");
            Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp228;
            this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
            temp228 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
            this.Manager.Checkpoint("MS-OXCTABL_R582");
            this.Manager.Checkpoint("MS-OXCTABL_R579");
            this.Manager.Comment("reaching state \'S531\'");
            this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp228, "return of RopGetCollapseState, state S531");
            this.Manager.Comment("reaching state \'S579\'");
            if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker21))) != -1)) {
                this.Manager.Comment("reaching state \'S627\'");
                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp229;
                this.Manager.Comment("executing step \'call RopSetCollapseState()\'");
                temp229 = this.IMS_OXCTABLAdapterInstance.RopSetCollapseState();
                this.Manager.Checkpoint("MS-OXCTABL_R588");
                this.Manager.Checkpoint("MS-OXCTABL_R585");
                this.Manager.Checkpoint("MS-OXCTABL_R289");
                this.Manager.Comment("reaching state \'S675\'");
                this.Manager.Comment("checking step \'return RopSetCollapseState/success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp229, "return of RopSetCollapseState, state S675");
                this.Manager.Comment("reaching state \'S723\'");
                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp230;
                this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                temp230 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                this.Manager.Checkpoint("MS-OXCTABL_R582");
                this.Manager.Checkpoint("MS-OXCTABL_R579");
                this.Manager.Comment("reaching state \'S760\'");
                this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp230, "return of RopGetCollapseState, state S760");
                this.Manager.Comment("reaching state \'S792\'");
                if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker22))) != -1)) {
                    this.Manager.Comment("reaching state \'S824\'");
                }
                else {
                    this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker22)));
                }
            }
            else {
                this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker21)));
            }
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker21(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(False,False)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S579");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S579");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker22(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(True,True)\'");
            try {
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S792");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S792");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R304");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R304");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopExpandRowResponseChecker11(bool isLastSetColumnData) {
            this.Manager.Comment("checking step \'event RopExpandRowResponse(False)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isLastSetColumnData, "isLastSetColumnData of RopExpandRowResponse, state S435");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1CheckRequirementEnabledChecker19(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S111");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopQueryRowsResponseChecker5(Microsoft.Protocols.TestSuites.Common.QueryRowsFlags queryRowFlags, bool bForwardRead, bool bZeroRow, Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopType ropType, bool bIsCorrectRowCount, bool bCursorPositionChanged, bool bIsLatestRopData, bool bIsLastSuccessRopData, Microsoft.Protocols.TestSuites.MS_OXCTABL.BookmarkType queryRowOrigin, bool isRequestCountTooLarger) {
            this.Manager.Comment("checking step \'event RopQueryRowsResponse(Advance,True,False,SETCOLUMNS,True,True" +
                    ",True,True,BOOKMARK_CURRENT,False)\'");
            try {
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.Common.QueryRowsFlags>(this.Manager, ((Microsoft.Protocols.TestSuites.Common.QueryRowsFlags)(0)), queryRowFlags, "queryRowFlags of RopQueryRowsResponse, state S138");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bForwardRead, "bForwardRead of RopQueryRowsResponse, state S138");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, bZeroRow, "bZeroRow of RopQueryRowsResponse, state S138");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopType>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopType)(0)), ropType, "ropType of RopQueryRowsResponse, state S138");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bIsCorrectRowCount, "bIsCorrectRowCount of RopQueryRowsResponse, state S138");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bCursorPositionChanged, "bCursorPositionChanged of RopQueryRowsResponse, state S138");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bIsLatestRopData, "bIsLatestRopData of RopQueryRowsResponse, state S138");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bIsLastSuccessRopData, "bIsLastSuccessRopData of RopQueryRowsResponse, state S138");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.BookmarkType>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.BookmarkType)(1)), queryRowOrigin, "queryRowOrigin of RopQueryRowsResponse, state S138");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isRequestCountTooLarger, "isRequestCountTooLarger of RopQueryRowsResponse, state S138");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R468, MS-OXCTABL_R118, MS-OXCTABL_R462, M" +
                        "S-OXCTABL_R28, MS-OXCTABL_R726, MS-OXCTABL_R472, MS-OXCTABL_R427, MS-OXCTABL_R42" +
                        "6, MS-OXCTABL_R116, MS-OXCTABL_R610");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R468");
            this.Manager.Checkpoint("MS-OXCTABL_R118");
            this.Manager.Checkpoint("MS-OXCTABL_R462");
            this.Manager.Checkpoint("MS-OXCTABL_R28");
            this.Manager.Checkpoint("MS-OXCTABL_R726");
            this.Manager.Checkpoint("MS-OXCTABL_R472");
            this.Manager.Checkpoint("MS-OXCTABL_R427");
            this.Manager.Checkpoint("MS-OXCTABL_R426");
            this.Manager.Checkpoint("MS-OXCTABL_R116");
            this.Manager.Checkpoint("MS-OXCTABL_R610");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker23(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(False,False)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S234");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S234");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1CheckRequirementEnabledChecker20(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S298");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopExpandRowResponseChecker12(bool isLastSetColumnData) {
            this.Manager.Comment("checking step \'event RopExpandRowResponse(True)\'");
            try {
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isLastSetColumnData, "isLastSetColumnData of RopExpandRowResponse, state S436");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R814, MS-OXCTABL_R825");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R814");
            this.Manager.Checkpoint("MS-OXCTABL_R825");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker24(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(False,False)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S580");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S580");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker25(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(True,True)\'");
            try {
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S793");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S793");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R304");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R304");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1CheckRequirementEnabledChecker21(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S298");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopExpandRowResponseChecker13(bool isLastSetColumnData) {
            this.Manager.Comment("checking step \'event RopExpandRowResponse(True)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isLastSetColumnData, "isLastSetColumnData of RopExpandRowResponse, state S437");
        }
        
        private void S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteS485() {
            this.Manager.Comment("reaching state \'S485\'");
            Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp240;
            this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
            temp240 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
            this.Manager.Checkpoint("MS-OXCTABL_R582");
            this.Manager.Checkpoint("MS-OXCTABL_R579");
            this.Manager.Comment("reaching state \'S533\'");
            this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp240, "return of RopGetCollapseState, state S533");
            this.Manager.Comment("reaching state \'S581\'");
            if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker26))) != -1)) {
                this.Manager.Comment("reaching state \'S629\'");
                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp241;
                this.Manager.Comment("executing step \'call RopSetCollapseState()\'");
                temp241 = this.IMS_OXCTABLAdapterInstance.RopSetCollapseState();
                this.Manager.Checkpoint("MS-OXCTABL_R588");
                this.Manager.Checkpoint("MS-OXCTABL_R585");
                this.Manager.Checkpoint("MS-OXCTABL_R289");
                this.Manager.Comment("reaching state \'S677\'");
                this.Manager.Comment("checking step \'return RopSetCollapseState/success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp241, "return of RopSetCollapseState, state S677");
                this.Manager.Comment("reaching state \'S725\'");
                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp242;
                this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                temp242 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                this.Manager.Checkpoint("MS-OXCTABL_R582");
                this.Manager.Checkpoint("MS-OXCTABL_R579");
                this.Manager.Comment("reaching state \'S762\'");
                this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp242, "return of RopGetCollapseState, state S762");
                this.Manager.Comment("reaching state \'S794\'");
                if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker27))) != -1)) {
                    this.Manager.Comment("reaching state \'S826\'");
                }
                else {
                    this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker27)));
                }
            }
            else {
                this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker26)));
            }
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker26(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(False,False)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S581");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S581");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker27(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(True,True)\'");
            try {
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S794");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S794");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R304");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R304");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopExpandRowResponseChecker14(bool isLastSetColumnData) {
            this.Manager.Comment("checking step \'event RopExpandRowResponse(False)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isLastSetColumnData, "isLastSetColumnData of RopExpandRowResponse, state S437");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1CheckRequirementEnabledChecker22(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S50");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1CheckRequirementEnabledChecker23(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S112");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopQueryRowsResponseChecker6(Microsoft.Protocols.TestSuites.Common.QueryRowsFlags queryRowFlags, bool bForwardRead, bool bZeroRow, Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopType ropType, bool bIsCorrectRowCount, bool bCursorPositionChanged, bool bIsLatestRopData, bool bIsLastSuccessRopData, Microsoft.Protocols.TestSuites.MS_OXCTABL.BookmarkType queryRowOrigin, bool isRequestCountTooLarger) {
            this.Manager.Comment("checking step \'event RopQueryRowsResponse(Advance,True,False,SETCOLUMNS,True,True" +
                    ",True,True,BOOKMARK_CURRENT,False)\'");
            try {
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.Common.QueryRowsFlags>(this.Manager, ((Microsoft.Protocols.TestSuites.Common.QueryRowsFlags)(0)), queryRowFlags, "queryRowFlags of RopQueryRowsResponse, state S139");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bForwardRead, "bForwardRead of RopQueryRowsResponse, state S139");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, bZeroRow, "bZeroRow of RopQueryRowsResponse, state S139");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopType>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopType)(0)), ropType, "ropType of RopQueryRowsResponse, state S139");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bIsCorrectRowCount, "bIsCorrectRowCount of RopQueryRowsResponse, state S139");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bCursorPositionChanged, "bCursorPositionChanged of RopQueryRowsResponse, state S139");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bIsLatestRopData, "bIsLatestRopData of RopQueryRowsResponse, state S139");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bIsLastSuccessRopData, "bIsLastSuccessRopData of RopQueryRowsResponse, state S139");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.BookmarkType>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.BookmarkType)(1)), queryRowOrigin, "queryRowOrigin of RopQueryRowsResponse, state S139");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isRequestCountTooLarger, "isRequestCountTooLarger of RopQueryRowsResponse, state S139");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R468, MS-OXCTABL_R118, MS-OXCTABL_R462, M" +
                        "S-OXCTABL_R28, MS-OXCTABL_R726, MS-OXCTABL_R472, MS-OXCTABL_R427, MS-OXCTABL_R42" +
                        "6, MS-OXCTABL_R116");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R468");
            this.Manager.Checkpoint("MS-OXCTABL_R118");
            this.Manager.Checkpoint("MS-OXCTABL_R462");
            this.Manager.Checkpoint("MS-OXCTABL_R28");
            this.Manager.Checkpoint("MS-OXCTABL_R726");
            this.Manager.Checkpoint("MS-OXCTABL_R472");
            this.Manager.Checkpoint("MS-OXCTABL_R427");
            this.Manager.Checkpoint("MS-OXCTABL_R426");
            this.Manager.Checkpoint("MS-OXCTABL_R116");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker28(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(False,False)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S235");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S235");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker29(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(False,False)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S438");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S438");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker30(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(True,True)\'");
            try {
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S678");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S678");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R304");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R304");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1CheckRequirementEnabledChecker24(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S112");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopQueryRowsResponseChecker7(Microsoft.Protocols.TestSuites.Common.QueryRowsFlags queryRowFlags, bool bForwardRead, bool bZeroRow, Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopType ropType, bool bIsCorrectRowCount, bool bCursorPositionChanged, bool bIsLatestRopData, bool bIsLastSuccessRopData, Microsoft.Protocols.TestSuites.MS_OXCTABL.BookmarkType queryRowOrigin, bool isRequestCountTooLarger) {
            this.Manager.Comment("checking step \'event RopQueryRowsResponse(Advance,True,False,SETCOLUMNS,True,True" +
                    ",True,True,BOOKMARK_CURRENT,False)\'");
            try {
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.Common.QueryRowsFlags>(this.Manager, ((Microsoft.Protocols.TestSuites.Common.QueryRowsFlags)(0)), queryRowFlags, "queryRowFlags of RopQueryRowsResponse, state S140");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bForwardRead, "bForwardRead of RopQueryRowsResponse, state S140");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, bZeroRow, "bZeroRow of RopQueryRowsResponse, state S140");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopType>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopType)(0)), ropType, "ropType of RopQueryRowsResponse, state S140");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bIsCorrectRowCount, "bIsCorrectRowCount of RopQueryRowsResponse, state S140");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bCursorPositionChanged, "bCursorPositionChanged of RopQueryRowsResponse, state S140");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bIsLatestRopData, "bIsLatestRopData of RopQueryRowsResponse, state S140");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bIsLastSuccessRopData, "bIsLastSuccessRopData of RopQueryRowsResponse, state S140");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.BookmarkType>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.BookmarkType)(1)), queryRowOrigin, "queryRowOrigin of RopQueryRowsResponse, state S140");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isRequestCountTooLarger, "isRequestCountTooLarger of RopQueryRowsResponse, state S140");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R468, MS-OXCTABL_R118, MS-OXCTABL_R462, M" +
                        "S-OXCTABL_R28, MS-OXCTABL_R726, MS-OXCTABL_R472, MS-OXCTABL_R427, MS-OXCTABL_R42" +
                        "6, MS-OXCTABL_R116, MS-OXCTABL_R610");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R468");
            this.Manager.Checkpoint("MS-OXCTABL_R118");
            this.Manager.Checkpoint("MS-OXCTABL_R462");
            this.Manager.Checkpoint("MS-OXCTABL_R28");
            this.Manager.Checkpoint("MS-OXCTABL_R726");
            this.Manager.Checkpoint("MS-OXCTABL_R472");
            this.Manager.Checkpoint("MS-OXCTABL_R427");
            this.Manager.Checkpoint("MS-OXCTABL_R426");
            this.Manager.Checkpoint("MS-OXCTABL_R116");
            this.Manager.Checkpoint("MS-OXCTABL_R610");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker31(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(False,False)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S236");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S236");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker32(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(False,False)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S439");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S439");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker33(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(True,True)\'");
            try {
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S679");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S679");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R304");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R304");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1CheckRequirementEnabledChecker25(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S28");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1CheckRequirementEnabledChecker26(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S36");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1CheckRequirementEnabledChecker27(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S51");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1CheckRequirementEnabledChecker28(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S113");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopQueryRowsResponseChecker8(Microsoft.Protocols.TestSuites.Common.QueryRowsFlags queryRowFlags, bool bForwardRead, bool bZeroRow, Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopType ropType, bool bIsCorrectRowCount, bool bCursorPositionChanged, bool bIsLatestRopData, bool bIsLastSuccessRopData, Microsoft.Protocols.TestSuites.MS_OXCTABL.BookmarkType queryRowOrigin, bool isRequestCountTooLarger) {
            this.Manager.Comment("checking step \'event RopQueryRowsResponse(Advance,True,False,SETCOLUMNS,True,True" +
                    ",True,True,BOOKMARK_CURRENT,False)\'");
            try {
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.Common.QueryRowsFlags>(this.Manager, ((Microsoft.Protocols.TestSuites.Common.QueryRowsFlags)(0)), queryRowFlags, "queryRowFlags of RopQueryRowsResponse, state S141");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bForwardRead, "bForwardRead of RopQueryRowsResponse, state S141");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, bZeroRow, "bZeroRow of RopQueryRowsResponse, state S141");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopType>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopType)(0)), ropType, "ropType of RopQueryRowsResponse, state S141");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bIsCorrectRowCount, "bIsCorrectRowCount of RopQueryRowsResponse, state S141");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bCursorPositionChanged, "bCursorPositionChanged of RopQueryRowsResponse, state S141");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bIsLatestRopData, "bIsLatestRopData of RopQueryRowsResponse, state S141");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bIsLastSuccessRopData, "bIsLastSuccessRopData of RopQueryRowsResponse, state S141");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.BookmarkType>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.BookmarkType)(1)), queryRowOrigin, "queryRowOrigin of RopQueryRowsResponse, state S141");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isRequestCountTooLarger, "isRequestCountTooLarger of RopQueryRowsResponse, state S141");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R468, MS-OXCTABL_R118, MS-OXCTABL_R462, M" +
                        "S-OXCTABL_R28, MS-OXCTABL_R726, MS-OXCTABL_R472, MS-OXCTABL_R427, MS-OXCTABL_R42" +
                        "6, MS-OXCTABL_R116");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R468");
            this.Manager.Checkpoint("MS-OXCTABL_R118");
            this.Manager.Checkpoint("MS-OXCTABL_R462");
            this.Manager.Checkpoint("MS-OXCTABL_R28");
            this.Manager.Checkpoint("MS-OXCTABL_R726");
            this.Manager.Checkpoint("MS-OXCTABL_R472");
            this.Manager.Checkpoint("MS-OXCTABL_R427");
            this.Manager.Checkpoint("MS-OXCTABL_R426");
            this.Manager.Checkpoint("MS-OXCTABL_R116");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker34(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(False,False)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S237");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S237");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1CheckRequirementEnabledChecker29(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S301");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopExpandRowResponseChecker15(bool isLastSetColumnData) {
            this.Manager.Comment("checking step \'event RopExpandRowResponse(True)\'");
            try {
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isLastSetColumnData, "isLastSetColumnData of RopExpandRowResponse, state S440");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R814, MS-OXCTABL_R825");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R814");
            this.Manager.Checkpoint("MS-OXCTABL_R825");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker35(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(False,False)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S584");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S584");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker36(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(True,True)\'");
            try {
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S795");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S795");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R304");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R304");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1CheckRequirementEnabledChecker30(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S301");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopExpandRowResponseChecker16(bool isLastSetColumnData) {
            this.Manager.Comment("checking step \'event RopExpandRowResponse(True)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isLastSetColumnData, "isLastSetColumnData of RopExpandRowResponse, state S441");
        }
        
        private void S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteS489() {
            this.Manager.Comment("reaching state \'S489\'");
            Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp272;
            this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
            temp272 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
            this.Manager.Checkpoint("MS-OXCTABL_R582");
            this.Manager.Checkpoint("MS-OXCTABL_R579");
            this.Manager.Comment("reaching state \'S537\'");
            this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp272, "return of RopGetCollapseState, state S537");
            this.Manager.Comment("reaching state \'S585\'");
            if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker37))) != -1)) {
                this.Manager.Comment("reaching state \'S633\'");
                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp273;
                this.Manager.Comment("executing step \'call RopSetCollapseState()\'");
                temp273 = this.IMS_OXCTABLAdapterInstance.RopSetCollapseState();
                this.Manager.Checkpoint("MS-OXCTABL_R588");
                this.Manager.Checkpoint("MS-OXCTABL_R585");
                this.Manager.Checkpoint("MS-OXCTABL_R289");
                this.Manager.Comment("reaching state \'S681\'");
                this.Manager.Comment("checking step \'return RopSetCollapseState/success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp273, "return of RopSetCollapseState, state S681");
                this.Manager.Comment("reaching state \'S729\'");
                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp274;
                this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                temp274 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                this.Manager.Checkpoint("MS-OXCTABL_R582");
                this.Manager.Checkpoint("MS-OXCTABL_R579");
                this.Manager.Comment("reaching state \'S764\'");
                this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp274, "return of RopGetCollapseState, state S764");
                this.Manager.Comment("reaching state \'S796\'");
                if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker38))) != -1)) {
                    this.Manager.Comment("reaching state \'S828\'");
                }
                else {
                    this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker38)));
                }
            }
            else {
                this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker37)));
            }
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker37(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(False,False)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S585");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S585");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker38(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(True,True)\'");
            try {
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S796");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S796");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R304");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R304");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopExpandRowResponseChecker17(bool isLastSetColumnData) {
            this.Manager.Comment("checking step \'event RopExpandRowResponse(False)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isLastSetColumnData, "isLastSetColumnData of RopExpandRowResponse, state S441");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1CheckRequirementEnabledChecker31(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S113");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopQueryRowsResponseChecker9(Microsoft.Protocols.TestSuites.Common.QueryRowsFlags queryRowFlags, bool bForwardRead, bool bZeroRow, Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopType ropType, bool bIsCorrectRowCount, bool bCursorPositionChanged, bool bIsLatestRopData, bool bIsLastSuccessRopData, Microsoft.Protocols.TestSuites.MS_OXCTABL.BookmarkType queryRowOrigin, bool isRequestCountTooLarger) {
            this.Manager.Comment("checking step \'event RopQueryRowsResponse(Advance,True,False,SETCOLUMNS,True,True" +
                    ",True,True,BOOKMARK_CURRENT,False)\'");
            try {
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.Common.QueryRowsFlags>(this.Manager, ((Microsoft.Protocols.TestSuites.Common.QueryRowsFlags)(0)), queryRowFlags, "queryRowFlags of RopQueryRowsResponse, state S142");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bForwardRead, "bForwardRead of RopQueryRowsResponse, state S142");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, bZeroRow, "bZeroRow of RopQueryRowsResponse, state S142");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopType>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopType)(0)), ropType, "ropType of RopQueryRowsResponse, state S142");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bIsCorrectRowCount, "bIsCorrectRowCount of RopQueryRowsResponse, state S142");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bCursorPositionChanged, "bCursorPositionChanged of RopQueryRowsResponse, state S142");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bIsLatestRopData, "bIsLatestRopData of RopQueryRowsResponse, state S142");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bIsLastSuccessRopData, "bIsLastSuccessRopData of RopQueryRowsResponse, state S142");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.BookmarkType>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.BookmarkType)(1)), queryRowOrigin, "queryRowOrigin of RopQueryRowsResponse, state S142");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isRequestCountTooLarger, "isRequestCountTooLarger of RopQueryRowsResponse, state S142");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R468, MS-OXCTABL_R118, MS-OXCTABL_R462, M" +
                        "S-OXCTABL_R28, MS-OXCTABL_R726, MS-OXCTABL_R472, MS-OXCTABL_R427, MS-OXCTABL_R42" +
                        "6, MS-OXCTABL_R116, MS-OXCTABL_R610");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R468");
            this.Manager.Checkpoint("MS-OXCTABL_R118");
            this.Manager.Checkpoint("MS-OXCTABL_R462");
            this.Manager.Checkpoint("MS-OXCTABL_R28");
            this.Manager.Checkpoint("MS-OXCTABL_R726");
            this.Manager.Checkpoint("MS-OXCTABL_R472");
            this.Manager.Checkpoint("MS-OXCTABL_R427");
            this.Manager.Checkpoint("MS-OXCTABL_R426");
            this.Manager.Checkpoint("MS-OXCTABL_R116");
            this.Manager.Checkpoint("MS-OXCTABL_R610");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker39(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(False,False)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S238");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S238");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker40(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(False,False)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S442");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S442");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker41(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(True,True)\'");
            try {
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S682");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S682");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R304");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R304");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1CheckRequirementEnabledChecker32(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S51");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1CheckRequirementEnabledChecker33(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S114");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopQueryRowsResponseChecker10(Microsoft.Protocols.TestSuites.Common.QueryRowsFlags queryRowFlags, bool bForwardRead, bool bZeroRow, Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopType ropType, bool bIsCorrectRowCount, bool bCursorPositionChanged, bool bIsLatestRopData, bool bIsLastSuccessRopData, Microsoft.Protocols.TestSuites.MS_OXCTABL.BookmarkType queryRowOrigin, bool isRequestCountTooLarger) {
            this.Manager.Comment("checking step \'event RopQueryRowsResponse(Advance,True,False,SETCOLUMNS,True,True" +
                    ",True,True,BOOKMARK_CURRENT,False)\'");
            try {
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.Common.QueryRowsFlags>(this.Manager, ((Microsoft.Protocols.TestSuites.Common.QueryRowsFlags)(0)), queryRowFlags, "queryRowFlags of RopQueryRowsResponse, state S143");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bForwardRead, "bForwardRead of RopQueryRowsResponse, state S143");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, bZeroRow, "bZeroRow of RopQueryRowsResponse, state S143");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopType>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopType)(0)), ropType, "ropType of RopQueryRowsResponse, state S143");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bIsCorrectRowCount, "bIsCorrectRowCount of RopQueryRowsResponse, state S143");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bCursorPositionChanged, "bCursorPositionChanged of RopQueryRowsResponse, state S143");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bIsLatestRopData, "bIsLatestRopData of RopQueryRowsResponse, state S143");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bIsLastSuccessRopData, "bIsLastSuccessRopData of RopQueryRowsResponse, state S143");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.BookmarkType>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.BookmarkType)(1)), queryRowOrigin, "queryRowOrigin of RopQueryRowsResponse, state S143");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isRequestCountTooLarger, "isRequestCountTooLarger of RopQueryRowsResponse, state S143");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R468, MS-OXCTABL_R118, MS-OXCTABL_R462, M" +
                        "S-OXCTABL_R28, MS-OXCTABL_R726, MS-OXCTABL_R472, MS-OXCTABL_R427, MS-OXCTABL_R42" +
                        "6, MS-OXCTABL_R116");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R468");
            this.Manager.Checkpoint("MS-OXCTABL_R118");
            this.Manager.Checkpoint("MS-OXCTABL_R462");
            this.Manager.Checkpoint("MS-OXCTABL_R28");
            this.Manager.Checkpoint("MS-OXCTABL_R726");
            this.Manager.Checkpoint("MS-OXCTABL_R472");
            this.Manager.Checkpoint("MS-OXCTABL_R427");
            this.Manager.Checkpoint("MS-OXCTABL_R426");
            this.Manager.Checkpoint("MS-OXCTABL_R116");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker42(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(False,False)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S239");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S239");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1CheckRequirementEnabledChecker34(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S303");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopExpandRowResponseChecker18(bool isLastSetColumnData) {
            this.Manager.Comment("checking step \'event RopExpandRowResponse(True)\'");
            try {
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isLastSetColumnData, "isLastSetColumnData of RopExpandRowResponse, state S443");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R814, MS-OXCTABL_R825");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R814");
            this.Manager.Checkpoint("MS-OXCTABL_R825");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker43(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(False,False)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S587");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S587");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker44(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(True,True)\'");
            try {
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S797");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S797");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R304");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R304");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1CheckRequirementEnabledChecker35(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S303");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopExpandRowResponseChecker19(bool isLastSetColumnData) {
            this.Manager.Comment("checking step \'event RopExpandRowResponse(True)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isLastSetColumnData, "isLastSetColumnData of RopExpandRowResponse, state S444");
        }
        
        private void S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteS492() {
            this.Manager.Comment("reaching state \'S492\'");
            Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp292;
            this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
            temp292 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
            this.Manager.Checkpoint("MS-OXCTABL_R582");
            this.Manager.Checkpoint("MS-OXCTABL_R579");
            this.Manager.Comment("reaching state \'S540\'");
            this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp292, "return of RopGetCollapseState, state S540");
            this.Manager.Comment("reaching state \'S588\'");
            if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker45))) != -1)) {
                this.Manager.Comment("reaching state \'S636\'");
                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp293;
                this.Manager.Comment("executing step \'call RopSetCollapseState()\'");
                temp293 = this.IMS_OXCTABLAdapterInstance.RopSetCollapseState();
                this.Manager.Checkpoint("MS-OXCTABL_R588");
                this.Manager.Checkpoint("MS-OXCTABL_R585");
                this.Manager.Checkpoint("MS-OXCTABL_R289");
                this.Manager.Comment("reaching state \'S684\'");
                this.Manager.Comment("checking step \'return RopSetCollapseState/success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp293, "return of RopSetCollapseState, state S684");
                this.Manager.Comment("reaching state \'S732\'");
                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp294;
                this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                temp294 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                this.Manager.Checkpoint("MS-OXCTABL_R582");
                this.Manager.Checkpoint("MS-OXCTABL_R579");
                this.Manager.Comment("reaching state \'S766\'");
                this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp294, "return of RopGetCollapseState, state S766");
                this.Manager.Comment("reaching state \'S798\'");
                if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker46))) != -1)) {
                    this.Manager.Comment("reaching state \'S830\'");
                }
                else {
                    this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker46)));
                }
            }
            else {
                this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker45)));
            }
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker45(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(False,False)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S588");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S588");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker46(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(True,True)\'");
            try {
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S798");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S798");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R304");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R304");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopExpandRowResponseChecker20(bool isLastSetColumnData) {
            this.Manager.Comment("checking step \'event RopExpandRowResponse(False)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isLastSetColumnData, "isLastSetColumnData of RopExpandRowResponse, state S444");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1CheckRequirementEnabledChecker36(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S114");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopQueryRowsResponseChecker11(Microsoft.Protocols.TestSuites.Common.QueryRowsFlags queryRowFlags, bool bForwardRead, bool bZeroRow, Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopType ropType, bool bIsCorrectRowCount, bool bCursorPositionChanged, bool bIsLatestRopData, bool bIsLastSuccessRopData, Microsoft.Protocols.TestSuites.MS_OXCTABL.BookmarkType queryRowOrigin, bool isRequestCountTooLarger) {
            this.Manager.Comment("checking step \'event RopQueryRowsResponse(Advance,True,False,SETCOLUMNS,True,True" +
                    ",True,True,BOOKMARK_CURRENT,False)\'");
            try {
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.Common.QueryRowsFlags>(this.Manager, ((Microsoft.Protocols.TestSuites.Common.QueryRowsFlags)(0)), queryRowFlags, "queryRowFlags of RopQueryRowsResponse, state S144");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bForwardRead, "bForwardRead of RopQueryRowsResponse, state S144");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, bZeroRow, "bZeroRow of RopQueryRowsResponse, state S144");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopType>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopType)(0)), ropType, "ropType of RopQueryRowsResponse, state S144");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bIsCorrectRowCount, "bIsCorrectRowCount of RopQueryRowsResponse, state S144");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bCursorPositionChanged, "bCursorPositionChanged of RopQueryRowsResponse, state S144");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bIsLatestRopData, "bIsLatestRopData of RopQueryRowsResponse, state S144");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bIsLastSuccessRopData, "bIsLastSuccessRopData of RopQueryRowsResponse, state S144");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.BookmarkType>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.BookmarkType)(1)), queryRowOrigin, "queryRowOrigin of RopQueryRowsResponse, state S144");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isRequestCountTooLarger, "isRequestCountTooLarger of RopQueryRowsResponse, state S144");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R468, MS-OXCTABL_R118, MS-OXCTABL_R462, M" +
                        "S-OXCTABL_R28, MS-OXCTABL_R726, MS-OXCTABL_R472, MS-OXCTABL_R427, MS-OXCTABL_R42" +
                        "6, MS-OXCTABL_R116, MS-OXCTABL_R610");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R468");
            this.Manager.Checkpoint("MS-OXCTABL_R118");
            this.Manager.Checkpoint("MS-OXCTABL_R462");
            this.Manager.Checkpoint("MS-OXCTABL_R28");
            this.Manager.Checkpoint("MS-OXCTABL_R726");
            this.Manager.Checkpoint("MS-OXCTABL_R472");
            this.Manager.Checkpoint("MS-OXCTABL_R427");
            this.Manager.Checkpoint("MS-OXCTABL_R426");
            this.Manager.Checkpoint("MS-OXCTABL_R116");
            this.Manager.Checkpoint("MS-OXCTABL_R610");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker47(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(False,False)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S240");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S240");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1CheckRequirementEnabledChecker37(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S304");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopExpandRowResponseChecker21(bool isLastSetColumnData) {
            this.Manager.Comment("checking step \'event RopExpandRowResponse(True)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isLastSetColumnData, "isLastSetColumnData of RopExpandRowResponse, state S445");
        }
        
        private void S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteS493() {
            this.Manager.Comment("reaching state \'S493\'");
            Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp300;
            this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
            temp300 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
            this.Manager.Checkpoint("MS-OXCTABL_R582");
            this.Manager.Checkpoint("MS-OXCTABL_R579");
            this.Manager.Comment("reaching state \'S541\'");
            this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp300, "return of RopGetCollapseState, state S541");
            this.Manager.Comment("reaching state \'S589\'");
            if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker48))) != -1)) {
                this.Manager.Comment("reaching state \'S637\'");
                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp301;
                this.Manager.Comment("executing step \'call RopSetCollapseState()\'");
                temp301 = this.IMS_OXCTABLAdapterInstance.RopSetCollapseState();
                this.Manager.Checkpoint("MS-OXCTABL_R588");
                this.Manager.Checkpoint("MS-OXCTABL_R585");
                this.Manager.Checkpoint("MS-OXCTABL_R289");
                this.Manager.Comment("reaching state \'S685\'");
                this.Manager.Comment("checking step \'return RopSetCollapseState/success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp301, "return of RopSetCollapseState, state S685");
                this.Manager.Comment("reaching state \'S733\'");
                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp302;
                this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                temp302 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                this.Manager.Checkpoint("MS-OXCTABL_R582");
                this.Manager.Checkpoint("MS-OXCTABL_R579");
                this.Manager.Comment("reaching state \'S767\'");
                this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp302, "return of RopGetCollapseState, state S767");
                this.Manager.Comment("reaching state \'S799\'");
                if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker49))) != -1)) {
                    this.Manager.Comment("reaching state \'S831\'");
                }
                else {
                    this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker49)));
                }
            }
            else {
                this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker48)));
            }
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker48(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(False,False)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S589");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S589");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker49(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(True,True)\'");
            try {
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S799");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S799");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R304");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R304");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopExpandRowResponseChecker22(bool isLastSetColumnData) {
            this.Manager.Comment("checking step \'event RopExpandRowResponse(False)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isLastSetColumnData, "isLastSetColumnData of RopExpandRowResponse, state S445");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1CheckRequirementEnabledChecker38(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S304");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopExpandRowResponseChecker23(bool isLastSetColumnData) {
            this.Manager.Comment("checking step \'event RopExpandRowResponse(True)\'");
            try {
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isLastSetColumnData, "isLastSetColumnData of RopExpandRowResponse, state S446");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R814, MS-OXCTABL_R825");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R814");
            this.Manager.Checkpoint("MS-OXCTABL_R825");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker50(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(False,False)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S590");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S590");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker51(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(True,True)\'");
            try {
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S800");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S800");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R304");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R304");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1CheckRequirementEnabledChecker39(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S36");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1CheckRequirementEnabledChecker40(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S52");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1CheckRequirementEnabledChecker41(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S115");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopQueryRowsResponseChecker12(Microsoft.Protocols.TestSuites.Common.QueryRowsFlags queryRowFlags, bool bForwardRead, bool bZeroRow, Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopType ropType, bool bIsCorrectRowCount, bool bCursorPositionChanged, bool bIsLatestRopData, bool bIsLastSuccessRopData, Microsoft.Protocols.TestSuites.MS_OXCTABL.BookmarkType queryRowOrigin, bool isRequestCountTooLarger) {
            this.Manager.Comment("checking step \'event RopQueryRowsResponse(Advance,True,False,SETCOLUMNS,True,True" +
                    ",True,True,BOOKMARK_CURRENT,False)\'");
            try {
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.Common.QueryRowsFlags>(this.Manager, ((Microsoft.Protocols.TestSuites.Common.QueryRowsFlags)(0)), queryRowFlags, "queryRowFlags of RopQueryRowsResponse, state S145");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bForwardRead, "bForwardRead of RopQueryRowsResponse, state S145");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, bZeroRow, "bZeroRow of RopQueryRowsResponse, state S145");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopType>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopType)(0)), ropType, "ropType of RopQueryRowsResponse, state S145");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bIsCorrectRowCount, "bIsCorrectRowCount of RopQueryRowsResponse, state S145");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bCursorPositionChanged, "bCursorPositionChanged of RopQueryRowsResponse, state S145");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bIsLatestRopData, "bIsLatestRopData of RopQueryRowsResponse, state S145");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bIsLastSuccessRopData, "bIsLastSuccessRopData of RopQueryRowsResponse, state S145");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.BookmarkType>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.BookmarkType)(1)), queryRowOrigin, "queryRowOrigin of RopQueryRowsResponse, state S145");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isRequestCountTooLarger, "isRequestCountTooLarger of RopQueryRowsResponse, state S145");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R468, MS-OXCTABL_R118, MS-OXCTABL_R462, M" +
                        "S-OXCTABL_R28, MS-OXCTABL_R726, MS-OXCTABL_R472, MS-OXCTABL_R427, MS-OXCTABL_R42" +
                        "6, MS-OXCTABL_R116");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R468");
            this.Manager.Checkpoint("MS-OXCTABL_R118");
            this.Manager.Checkpoint("MS-OXCTABL_R462");
            this.Manager.Checkpoint("MS-OXCTABL_R28");
            this.Manager.Checkpoint("MS-OXCTABL_R726");
            this.Manager.Checkpoint("MS-OXCTABL_R472");
            this.Manager.Checkpoint("MS-OXCTABL_R427");
            this.Manager.Checkpoint("MS-OXCTABL_R426");
            this.Manager.Checkpoint("MS-OXCTABL_R116");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker52(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(False,False)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S241");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S241");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1CheckRequirementEnabledChecker42(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S305");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopExpandRowResponseChecker24(bool isLastSetColumnData) {
            this.Manager.Comment("checking step \'event RopExpandRowResponse(True)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isLastSetColumnData, "isLastSetColumnData of RopExpandRowResponse, state S447");
        }
        
        private void S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteS495() {
            this.Manager.Comment("reaching state \'S495\'");
            Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp317;
            this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
            temp317 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
            this.Manager.Checkpoint("MS-OXCTABL_R582");
            this.Manager.Checkpoint("MS-OXCTABL_R579");
            this.Manager.Comment("reaching state \'S543\'");
            this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp317, "return of RopGetCollapseState, state S543");
            this.Manager.Comment("reaching state \'S591\'");
            if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker53))) != -1)) {
                this.Manager.Comment("reaching state \'S639\'");
                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp318;
                this.Manager.Comment("executing step \'call RopSetCollapseState()\'");
                temp318 = this.IMS_OXCTABLAdapterInstance.RopSetCollapseState();
                this.Manager.Checkpoint("MS-OXCTABL_R588");
                this.Manager.Checkpoint("MS-OXCTABL_R585");
                this.Manager.Checkpoint("MS-OXCTABL_R289");
                this.Manager.Comment("reaching state \'S687\'");
                this.Manager.Comment("checking step \'return RopSetCollapseState/success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp318, "return of RopSetCollapseState, state S687");
                this.Manager.Comment("reaching state \'S735\'");
                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp319;
                this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                temp319 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                this.Manager.Checkpoint("MS-OXCTABL_R582");
                this.Manager.Checkpoint("MS-OXCTABL_R579");
                this.Manager.Comment("reaching state \'S769\'");
                this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp319, "return of RopGetCollapseState, state S769");
                this.Manager.Comment("reaching state \'S801\'");
                if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker54))) != -1)) {
                    this.Manager.Comment("reaching state \'S833\'");
                }
                else {
                    this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker54)));
                }
            }
            else {
                this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker53)));
            }
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker53(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(False,False)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S591");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S591");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker54(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(True,True)\'");
            try {
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S801");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S801");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R304");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R304");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopExpandRowResponseChecker25(bool isLastSetColumnData) {
            this.Manager.Comment("checking step \'event RopExpandRowResponse(False)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isLastSetColumnData, "isLastSetColumnData of RopExpandRowResponse, state S447");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1CheckRequirementEnabledChecker43(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S305");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopExpandRowResponseChecker26(bool isLastSetColumnData) {
            this.Manager.Comment("checking step \'event RopExpandRowResponse(True)\'");
            try {
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isLastSetColumnData, "isLastSetColumnData of RopExpandRowResponse, state S448");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R814, MS-OXCTABL_R825");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R814");
            this.Manager.Checkpoint("MS-OXCTABL_R825");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker55(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(False,False)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S592");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S592");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker56(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(True,True)\'");
            try {
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S802");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S802");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R304");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R304");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1CheckRequirementEnabledChecker44(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S115");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopQueryRowsResponseChecker13(Microsoft.Protocols.TestSuites.Common.QueryRowsFlags queryRowFlags, bool bForwardRead, bool bZeroRow, Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopType ropType, bool bIsCorrectRowCount, bool bCursorPositionChanged, bool bIsLatestRopData, bool bIsLastSuccessRopData, Microsoft.Protocols.TestSuites.MS_OXCTABL.BookmarkType queryRowOrigin, bool isRequestCountTooLarger) {
            this.Manager.Comment("checking step \'event RopQueryRowsResponse(Advance,True,False,SETCOLUMNS,True,True" +
                    ",True,True,BOOKMARK_CURRENT,False)\'");
            try {
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.Common.QueryRowsFlags>(this.Manager, ((Microsoft.Protocols.TestSuites.Common.QueryRowsFlags)(0)), queryRowFlags, "queryRowFlags of RopQueryRowsResponse, state S146");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bForwardRead, "bForwardRead of RopQueryRowsResponse, state S146");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, bZeroRow, "bZeroRow of RopQueryRowsResponse, state S146");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopType>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopType)(0)), ropType, "ropType of RopQueryRowsResponse, state S146");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bIsCorrectRowCount, "bIsCorrectRowCount of RopQueryRowsResponse, state S146");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bCursorPositionChanged, "bCursorPositionChanged of RopQueryRowsResponse, state S146");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bIsLatestRopData, "bIsLatestRopData of RopQueryRowsResponse, state S146");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bIsLastSuccessRopData, "bIsLastSuccessRopData of RopQueryRowsResponse, state S146");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.BookmarkType>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.BookmarkType)(1)), queryRowOrigin, "queryRowOrigin of RopQueryRowsResponse, state S146");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isRequestCountTooLarger, "isRequestCountTooLarger of RopQueryRowsResponse, state S146");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R468, MS-OXCTABL_R118, MS-OXCTABL_R462, M" +
                        "S-OXCTABL_R28, MS-OXCTABL_R726, MS-OXCTABL_R472, MS-OXCTABL_R427, MS-OXCTABL_R42" +
                        "6, MS-OXCTABL_R116, MS-OXCTABL_R610");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R468");
            this.Manager.Checkpoint("MS-OXCTABL_R118");
            this.Manager.Checkpoint("MS-OXCTABL_R462");
            this.Manager.Checkpoint("MS-OXCTABL_R28");
            this.Manager.Checkpoint("MS-OXCTABL_R726");
            this.Manager.Checkpoint("MS-OXCTABL_R472");
            this.Manager.Checkpoint("MS-OXCTABL_R427");
            this.Manager.Checkpoint("MS-OXCTABL_R426");
            this.Manager.Checkpoint("MS-OXCTABL_R116");
            this.Manager.Checkpoint("MS-OXCTABL_R610");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker57(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(False,False)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S242");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S242");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker58(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(False,False)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S449");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S449");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker59(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(True,True)\'");
            try {
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S689");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S689");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R304");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R304");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1CheckRequirementEnabledChecker45(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S52");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1CheckRequirementEnabledChecker46(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S116");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopQueryRowsResponseChecker14(Microsoft.Protocols.TestSuites.Common.QueryRowsFlags queryRowFlags, bool bForwardRead, bool bZeroRow, Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopType ropType, bool bIsCorrectRowCount, bool bCursorPositionChanged, bool bIsLatestRopData, bool bIsLastSuccessRopData, Microsoft.Protocols.TestSuites.MS_OXCTABL.BookmarkType queryRowOrigin, bool isRequestCountTooLarger) {
            this.Manager.Comment("checking step \'event RopQueryRowsResponse(Advance,True,False,SETCOLUMNS,True,True" +
                    ",True,True,BOOKMARK_CURRENT,False)\'");
            try {
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.Common.QueryRowsFlags>(this.Manager, ((Microsoft.Protocols.TestSuites.Common.QueryRowsFlags)(0)), queryRowFlags, "queryRowFlags of RopQueryRowsResponse, state S147");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bForwardRead, "bForwardRead of RopQueryRowsResponse, state S147");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, bZeroRow, "bZeroRow of RopQueryRowsResponse, state S147");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopType>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopType)(0)), ropType, "ropType of RopQueryRowsResponse, state S147");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bIsCorrectRowCount, "bIsCorrectRowCount of RopQueryRowsResponse, state S147");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bCursorPositionChanged, "bCursorPositionChanged of RopQueryRowsResponse, state S147");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bIsLatestRopData, "bIsLatestRopData of RopQueryRowsResponse, state S147");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bIsLastSuccessRopData, "bIsLastSuccessRopData of RopQueryRowsResponse, state S147");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.BookmarkType>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.BookmarkType)(1)), queryRowOrigin, "queryRowOrigin of RopQueryRowsResponse, state S147");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isRequestCountTooLarger, "isRequestCountTooLarger of RopQueryRowsResponse, state S147");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R468, MS-OXCTABL_R118, MS-OXCTABL_R462, M" +
                        "S-OXCTABL_R28, MS-OXCTABL_R726, MS-OXCTABL_R472, MS-OXCTABL_R427, MS-OXCTABL_R42" +
                        "6, MS-OXCTABL_R116, MS-OXCTABL_R610");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R468");
            this.Manager.Checkpoint("MS-OXCTABL_R118");
            this.Manager.Checkpoint("MS-OXCTABL_R462");
            this.Manager.Checkpoint("MS-OXCTABL_R28");
            this.Manager.Checkpoint("MS-OXCTABL_R726");
            this.Manager.Checkpoint("MS-OXCTABL_R472");
            this.Manager.Checkpoint("MS-OXCTABL_R427");
            this.Manager.Checkpoint("MS-OXCTABL_R426");
            this.Manager.Checkpoint("MS-OXCTABL_R116");
            this.Manager.Checkpoint("MS-OXCTABL_R610");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker60(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(False,False)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S243");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S243");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1CheckRequirementEnabledChecker47(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S307");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopExpandRowResponseChecker27(bool isLastSetColumnData) {
            this.Manager.Comment("checking step \'event RopExpandRowResponse(True)\'");
            try {
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isLastSetColumnData, "isLastSetColumnData of RopExpandRowResponse, state S450");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R814, MS-OXCTABL_R825");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R814");
            this.Manager.Checkpoint("MS-OXCTABL_R825");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker61(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(False,False)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S594");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S594");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker62(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(True,True)\'");
            try {
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S803");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S803");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R304");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R304");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1CheckRequirementEnabledChecker48(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, enabled, "enabled of CheckRequirementEnabled, state S307");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopExpandRowResponseChecker28(bool isLastSetColumnData) {
            this.Manager.Comment("checking step \'event RopExpandRowResponse(True)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isLastSetColumnData, "isLastSetColumnData of RopExpandRowResponse, state S451");
        }
        
        private void S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteS499() {
            this.Manager.Comment("reaching state \'S499\'");
            Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp341;
            this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
            temp341 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
            this.Manager.Checkpoint("MS-OXCTABL_R582");
            this.Manager.Checkpoint("MS-OXCTABL_R579");
            this.Manager.Comment("reaching state \'S547\'");
            this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
            TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp341, "return of RopGetCollapseState, state S547");
            this.Manager.Comment("reaching state \'S595\'");
            if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker63))) != -1)) {
                this.Manager.Comment("reaching state \'S643\'");
                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp342;
                this.Manager.Comment("executing step \'call RopSetCollapseState()\'");
                temp342 = this.IMS_OXCTABLAdapterInstance.RopSetCollapseState();
                this.Manager.Checkpoint("MS-OXCTABL_R588");
                this.Manager.Checkpoint("MS-OXCTABL_R585");
                this.Manager.Checkpoint("MS-OXCTABL_R289");
                this.Manager.Comment("reaching state \'S691\'");
                this.Manager.Comment("checking step \'return RopSetCollapseState/success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp342, "return of RopSetCollapseState, state S691");
                this.Manager.Comment("reaching state \'S739\'");
                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp343;
                this.Manager.Comment("executing step \'call RopGetCollapseState()\'");
                temp343 = this.IMS_OXCTABLAdapterInstance.RopGetCollapseState();
                this.Manager.Checkpoint("MS-OXCTABL_R582");
                this.Manager.Checkpoint("MS-OXCTABL_R579");
                this.Manager.Comment("reaching state \'S772\'");
                this.Manager.Comment("checking step \'return RopGetCollapseState/success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp343, "return of RopGetCollapseState, state S772");
                this.Manager.Comment("reaching state \'S804\'");
                if ((this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker64))) != -1)) {
                    this.Manager.Comment("reaching state \'S836\'");
                }
                else {
                    this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker64)));
                }
            }
            else {
                this.Manager.CheckObservationTimeout(false, new ExpectedEvent(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.RopGetCollapseStateResponseInfo, null, new RopGetCollapseStateResponseDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker63)));
            }
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker63(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(False,False)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S595");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S595");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker64(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(True,True)\'");
            try {
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S804");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S804");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R304");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R304");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopExpandRowResponseChecker29(bool isLastSetColumnData) {
            this.Manager.Comment("checking step \'event RopExpandRowResponse(False)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isLastSetColumnData, "isLastSetColumnData of RopExpandRowResponse, state S451");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1CheckRequirementEnabledChecker49(bool enabled) {
            this.Manager.Comment("checking step \'return CheckRequirementEnabled/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, enabled, "enabled of CheckRequirementEnabled, state S116");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopQueryRowsResponseChecker15(Microsoft.Protocols.TestSuites.Common.QueryRowsFlags queryRowFlags, bool bForwardRead, bool bZeroRow, Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopType ropType, bool bIsCorrectRowCount, bool bCursorPositionChanged, bool bIsLatestRopData, bool bIsLastSuccessRopData, Microsoft.Protocols.TestSuites.MS_OXCTABL.BookmarkType queryRowOrigin, bool isRequestCountTooLarger) {
            this.Manager.Comment("checking step \'event RopQueryRowsResponse(Advance,True,False,SETCOLUMNS,True,True" +
                    ",True,True,BOOKMARK_CURRENT,False)\'");
            try {
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.Common.QueryRowsFlags>(this.Manager, ((Microsoft.Protocols.TestSuites.Common.QueryRowsFlags)(0)), queryRowFlags, "queryRowFlags of RopQueryRowsResponse, state S148");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bForwardRead, "bForwardRead of RopQueryRowsResponse, state S148");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, bZeroRow, "bZeroRow of RopQueryRowsResponse, state S148");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopType>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopType)(0)), ropType, "ropType of RopQueryRowsResponse, state S148");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bIsCorrectRowCount, "bIsCorrectRowCount of RopQueryRowsResponse, state S148");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bCursorPositionChanged, "bCursorPositionChanged of RopQueryRowsResponse, state S148");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bIsLatestRopData, "bIsLatestRopData of RopQueryRowsResponse, state S148");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, bIsLastSuccessRopData, "bIsLastSuccessRopData of RopQueryRowsResponse, state S148");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.BookmarkType>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.BookmarkType)(1)), queryRowOrigin, "queryRowOrigin of RopQueryRowsResponse, state S148");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isRequestCountTooLarger, "isRequestCountTooLarger of RopQueryRowsResponse, state S148");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R468, MS-OXCTABL_R118, MS-OXCTABL_R462, M" +
                        "S-OXCTABL_R28, MS-OXCTABL_R726, MS-OXCTABL_R472, MS-OXCTABL_R427, MS-OXCTABL_R42" +
                        "6, MS-OXCTABL_R116");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R468");
            this.Manager.Checkpoint("MS-OXCTABL_R118");
            this.Manager.Checkpoint("MS-OXCTABL_R462");
            this.Manager.Checkpoint("MS-OXCTABL_R28");
            this.Manager.Checkpoint("MS-OXCTABL_R726");
            this.Manager.Checkpoint("MS-OXCTABL_R472");
            this.Manager.Checkpoint("MS-OXCTABL_R427");
            this.Manager.Checkpoint("MS-OXCTABL_R426");
            this.Manager.Checkpoint("MS-OXCTABL_R116");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker65(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(False,False)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S244");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S244");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker66(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(False,False)\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S452");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S452");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1RopGetCollapseStateResponseChecker67(bool isSetCollapseStateCalled, bool isCollapseStateRebuildCorrectly) {
            this.Manager.Comment("checking step \'event RopGetCollapseStateResponse(True,True)\'");
            try {
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSetCollapseStateCalled, "isSetCollapseStateCalled of RopGetCollapseStateResponse, state S692");
                TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isCollapseStateRebuildCorrectly, "isCollapseStateRebuildCorrectly of RopGetCollapseStateResponse, state S692");
            }
            catch (TransactionFailedException ) {
                this.Manager.Comment("This step would have covered MS-OXCTABL_R304");
                throw;
            }
            this.Manager.Checkpoint("MS-OXCTABL_R304");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite1CheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S3");
        }
        #endregion
        
        #region Test Starting in S4
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite2() {
            this.Manager.BeginTest("MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite2");
            this.Manager.Comment("reaching state \'S4\'");
            bool temp356;
            this.Manager.Comment("executing step \'call CheckMAPIHTTPTransportSupported(out _)\'");
            this.IMS_OXCTABLAdapterInstance.CheckMAPIHTTPTransportSupported(out temp356);
            this.Manager.AddReturn(CheckMAPIHTTPTransportSupportedInfo, null, temp356);
            this.Manager.Comment("reaching state \'S5\'");
            int temp358 = this.Manager.ExpectReturn(this.QuiescenceTimeout, true, new ExpectedReturn(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite2CheckMAPIHTTPTransportSupportedChecker)), new ExpectedReturn(S04_ExpandRowRops_GetorSetCollapseRow_TestSuite.CheckMAPIHTTPTransportSupportedInfo, null, new CheckMAPIHTTPTransportSupportedDelegate1(this.MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite2CheckMAPIHTTPTransportSupportedChecker1)));
            if ((temp358 == 0)) {
                this.Manager.Comment("reaching state \'S10\'");
                this.Manager.Comment("executing step \'call InitializeTable(CONTENT_TABLE)\'");
                this.IMS_OXCTABLAdapterInstance.InitializeTable(((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableType)(0)));
                this.Manager.Comment("reaching state \'S14\'");
                this.Manager.Comment("checking step \'return InitializeTable\'");
                this.Manager.Comment("reaching state \'S17\'");
                Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues temp357;
                this.Manager.Comment("executing step \'call RopSortTable(1,True,True,False,True,False,False,False)\'");
                temp357 = this.IMS_OXCTABLAdapterInstance.RopSortTable(1u, true, true, false, true, false, false, false);
                this.Manager.Checkpoint("MS-OXCTABL_R447");
                this.Manager.Comment("reaching state \'S20\'");
                this.Manager.Comment("checking step \'return RopSortTable/success\'");
                TestManagerHelpers.AssertAreEqual<Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues>(this.Manager, ((Microsoft.Protocols.TestSuites.MS_OXCTABL.TableRopReturnValues)(0)), temp357, "return of RopSortTable, state S20");
                S04_ExpandRowRops_GetorSetCollapseRow_TestSuiteS21();
                goto label64;
            }
            if ((temp358 == 1)) {
                this.Manager.Comment("reaching state \'S11\'");
                goto label64;
            }
            throw new InvalidOperationException("never reached");
        label64:
;
            this.Manager.EndTest();
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite2CheckMAPIHTTPTransportSupportedChecker(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out True]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S5");
        }
        
        private void MSOXCTABL_S04_ExpandRowRops_GetorSetCollapseRow_TestSuite2CheckMAPIHTTPTransportSupportedChecker1(bool isSupported) {
            this.Manager.Comment("checking step \'return CheckMAPIHTTPTransportSupported/[out False]\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, isSupported, "isSupported of CheckMAPIHTTPTransportSupported, state S5");
        }
        #endregion
    }
}
